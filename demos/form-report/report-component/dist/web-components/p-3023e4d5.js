import{P as t,T as e}from"./p-33b03442.js";import{S as s}from"./p-b681d68c.js";import{r,c as o,U as i,g as n,b as c}from"./p-fe40b0f4.js";function a(t,e,s){const r=["params","httpMethod","rawResponse","authentication","portal","fetch","maxUrlLength","headers"];const o=Object.assign(Object.assign({params:{}},s),t);o.params=e.reduce(((e,s)=>{if(t[s]||typeof t[s]==="boolean"||typeof t[s]==="number"&&t[s]===0){e[s]=t[s]}return e}),o.params);return r.reduce(((t,e)=>{if(o[e]){t[e]=o[e]}return t}),{})}function u(t){return r(o(t.url),t)}function l(t){const e=a(t,["where","objectIds","relationParam","time","distance","units","outFields","geometry","geometryType","spatialRel","returnGeometry","maxAllowableOffset","geometryPrecision","inSR","outSR","gdbVersion","returnDistinctValues","returnIdsOnly","returnCountOnly","returnExtentOnly","orderByFields","groupByFieldsForStatistics","outStatistics","returnZ","returnM","multipatchOption","resultOffset","resultRecordCount","quantizationParameters","returnCentroid","resultType","historicMoment","returnTrueCurves","sqlFormat","returnExceededLimitFeatures","f"],{httpMethod:"GET",params:Object.assign({where:"1=1",outFields:"*"},t.params)});return r(`${o(t.url)}/query`,e)}var h;(function(t){t["submitted"]="esriJobSubmitted";t["executing"]="esriJobExecuting";t["succeeded"]="esriJobSucceeded";t["partialSucceeded"]="esriJobPartialSucceeded";t["failed"]="esriJobFailed";t["cancelled"]="esriJobStatusCancelled"})(h||(h={}));class f{constructor(){this.checkingList=[];this.isRequestingTasks=false;this.jobList={};this.sessionJobs=[];this.templateItemsCache=[];this.stateService=s.getService();this.paramCache={}}static getService(){if(!this.service){this.service=new f}return this.service}getParamCache(t){if(!t){return this.paramCache}return this.paramCache?this.paramCache[t]:null}setParamCache(t){if(!t){return}this.paramCache=Object.assign(this.paramCache||{},t)}initParamCache(){}getHelperObj(t){if(!t){return this.helperObj}if(!this.helperObj){return null}return this.helperObj[t]}setHelperObj(t){if(!t){return}this.helperObj=Object.assign(this.helperObj||{},t)}getReportTemplates(t,e){e=e||{};let s=false;if("templateIds"in e&&e.templateIds!==undefined){s=true}const r=(e===null||e===void 0?void 0:e.templateIds)||"";const o=this.templateItemsCache||[];const a=i.getService();return Promise.resolve(true).then((()=>{const t=a.supportFeatureReport();if(!t){throw new Error("This portal does not support custom report.")}return true})).then((()=>{if(s){const t=[];r.split(",").forEach((e=>{const s=o.find((t=>t.id===e));let r=null;if(s){r=Promise.resolve(s)}else{r=n(e,a.getBaseRequestOptions()).then((t=>t)).catch((()=>{console.log("Cannot get item info for the report template with id"+e);return{}}))}t.push(r)}));return Promise.all(t).then((t=>({relatedItems:t})))}else if(t&&!this.getHelperObj("surveyIsInvalid")){const e=Object.assign({id:t,relationshipType:"Survey2Data"},a.getBaseRequestOptions());return c(e)}else{return{relatedItems:[]}}})).then((t=>{if(!t||t.error){throw new Error("Failed to get related templates")}this.templateItemsCache=t.relatedItems||[];const e={typeKeyword:"Print Template",type:"Microsoft Word"};const s=t.relatedItems.filter((t=>t.type===e.type&&t.typeKeywords.indexOf(e.typeKeyword)!==-1));return s||[]})).then((t=>{const e=[];t.forEach((t=>{const s=this.getCustomPrintingFileUrl(t.id);const r={id:t.id,name:t.name,title:t.title,summary:t.snippet,modified:new Date(t.modified),url:s,typeKeywords:t.typeKeywords,type:t.type};e.push(r)}));if(s){e.sort(((t,e)=>{if(t.modified<e.modified){return 1}else{return-1}}))}return e}))}getLayerJson(e){e=e||t.featureLayerUrl;const s=this.getHelperObj("layerJsons")||[];const r=s.find((t=>t.url===e&&t.json));if(r){return Promise.resolve(r.json)}return u({url:t.featureLayerUrl,authentication:t.token}).then((t=>{s.push({url:e,json:t});this.setHelperObj({layerJsons:s});return t}))}getFeatureCount(){const e=JSON.parse(t.queryParameters);delete e.orderByFields;const s=Object.assign({url:t.featureLayerUrl,authentication:t.token,returnCountOnly:true},e);const r="where"in s?s.where:null;const o="objectIds"in s?s.objectIds:null;const i={};if(r!==null){i.where=r}if(o!=null){i.objectIds=o}if(!o&&!r){i.where="1<>1";delete i.objectIds}s.params=i;delete s.where;delete s.objectIds;return l(s).then((t=>{let s=t.count;if(e.resultRecordCount<s){s=e.resultRecordCount}this.setHelperObj({featureCount:s});this.stateService.notifyDataChanged("feature-count-updated");return})).catch((t=>{this.manageError(t,"featureLayerUrl")}))}getCustomPrintingFileUrl(e){return`${t.portalUrl}/sharing/rest/content/items/${e}/data?token=${t.token}`}estimateReportCosts(e){const s={portalUrl:t.portalUrl,token:t.token,f:"json"};const r=Object.assign(s,e||{});const o=new URLSearchParams;Object.keys(r).forEach((t=>{const e=r[t];o.append(t,e)}));const i=`${t.apiUrl}/estimateCredits`;return fetch(i,{method:"POST",headers:this._generateRequestHeaders(),body:o}).then((t=>t.json()))}executeReport(e){const s=t.locale||"en";const r={portalUrl:t.portalUrl,utcOffset:"||"+this._getLocalTimezoneOffset(),locale:"||"+s,token:t.token,f:"json"};const o=Object.assign(r,e||{});if((!o.uploadInfo||o.uploadInfo==="null")&&Object.prototype.hasOwnProperty.call(o,"uploadInfo")){delete o.uploadInfo}const i=new URLSearchParams;Object.keys(o).forEach((t=>{const e=o[t];i.append(t,e)}));const n=`${t.apiUrl}/createReport/submitJob`;return fetch(n,{method:"POST",headers:this._generateRequestHeaders(),body:i}).then((t=>t.json()))}createSampleReport(e){const s=t.locale||"en";const r={portalUrl:t.portalUrl,utcOffset:"||"+this._getLocalTimezoneOffset(),locale:"||"+s,token:t.token,f:"json"};const o=Object.assign(r,e||{});const i=new URLSearchParams;Object.keys(o).forEach((t=>{const e=o[t];i.append(t,e)}));const n=`${t.apiUrl}/createSampleReport/submitJob`;return fetch(n,{method:"POST",headers:this._generateRequestHeaders(),body:i}).then((t=>t.json()))}removeJob(e){const s={portalUrl:t.portalUrl,token:t.token,f:"json"};const r=new URLSearchParams;Object.keys(s).forEach((t=>{const e=s[t];r.append(t,e)}));const o=`${t.apiUrl}/jobs/${e}/remove`;return fetch(o,{method:"POST",headers:this._generateRequestHeaders(),body:r}).then((t=>t.json()))}cancelJob(e){const s={portalUrl:t.portalUrl,token:t.token,f:"json"};const r=new URLSearchParams;Object.keys(s).forEach((t=>{const e=s[t];r.append(t,e)}));const o=`${t.apiUrl}/jobs/${e}/cancel`;return fetch(o,{method:"POST",headers:this._generateRequestHeaders(),body:r}).then((t=>t.json()))}removeJobFromList(t){if(!t){return}if(this.jobList&&this.jobList.jobs){const e=this.jobList.jobs.findIndex((e=>e.jobId===t.jobId));this.jobList.jobs.splice(e,1);this.jobList.jobs=[].concat(this.jobList.jobs)}}queryJobs(e){if(this.checkingList.length<1&&!e){return Promise.resolve(null)}if(this.isRequestingTasks){return Promise.resolve(null)}this.isRequestingTasks=true;return this.sendQueryJobsRequest(t.surveyItemId).then((t=>{if(t.error){throw t.error}return t})).then((t=>{this.isRequestingTasks=false;if(!this.jobList.jobs){this.jobList.jobs=[]}if(t&&t.jobs&&t.jobs.length){t.jobs.forEach(((e,s)=>{const r=e.jobId;const o=this.jobList.jobs.filter((t=>t.jobId===r));if(o&&o.length){t.jobs[s]=o[0]}if(o&&o._tempRuntime){t.jobs[s]._tempRuntime=Object.assign(o._tempRuntime,t.jobs[s]._tempRuntime||{})}}));this.jobList.jobs=t.jobs}else if(t&&t.error){const e="Oops! An error occurred loading the job list";console.log(t.error&&t.error.message?t.error.message:e);return false}if(this.queryJobTimmer){clearTimeout(this.queryJobTimmer)}this.queryJobTimmer=setTimeout((()=>{this.queryJobs()}),1e4);return this.jobList})).catch((()=>{this.isRequestingTasks=false;console.log("query jobs failed.");if(this.queryJobTimmer){clearTimeout(this.queryJobTimmer)}this.queryJobTimmer=setTimeout((()=>{this.queryJobs()}),1e4);throw new Error}))}checkJobListDetails(){const t=this.jobList.jobs;if(!t||!t.length){return}t.forEach(((t,e)=>{if((t.jobStatus==="esriJobSucceeded"||t.jobStatus==="esriJobPartialSucceeded")&&(!t.resultInfo||!t.resultInfo.resultFiles)){this.checkJobStatus(t.jobId).then((t=>{this.jobList.jobs[e]=Object.assign({},this.updateJobDetail(t));this.stateService.notifyDataChanged("job-updated",{value:this.jobList.jobs[e]});this.stateService.notifyDataChanged("job-complete",{value:this.jobList.jobs[e]})}))}else if(t.jobStatus===h.executing||t.jobStatus===h.submitted){const e=this.sessionJobs.indexOf(t.jobId)>=0;if(!e){this.checkJobStatus(t.jobId)}}else{this.jobList.jobs[e]=Object.assign({},this.updateJobDetail(this.jobList.jobs[e]));this.stateService.notifyDataChanged("job-updated",{value:this.jobList.jobs[e]});if(t.jobStatus===h.failed){this.stateService.notifyDataChanged("job-complete",{value:t})}}}))}checkJobDetails(t){if(!t||t.hasDetail){return Promise.resolve(t)}if([h.succeeded,h.partialSucceeded,h.failed,h.cancelled].indexOf(t.jobStatus)>=0){this.stateService.notifyDataChanged("job-complete",{value:t})}if((t.jobStatus===h.succeeded||t.jobStatus===h.partialSucceeded)&&(!t.resultInfo||!t.resultInfo.resultFiles)){return this.checkJobStatus(t.jobId).then((e=>{t=this.updateJobDetail(e);this.stateService.notifyDataChanged("job-updated",{value:t});this.stateService.notifyDataChanged("job-complete",{value:t});return t}))}else if(t.jobStatus===h.failed&&(!t.resultInfo||!t.resultInfo.details)){return this.checkJobStatus(t.jobId).then((e=>{t=this.updateJobDetail(e);this.stateService.notifyDataChanged("job-updated",{value:t});return t}))}else if(t.jobStatus===h.executing||t.jobStatus===h.submitted){this.stateService.notifyDataChanged("job-updated",{value:t});const e=this.sessionJobs.indexOf(t.jobId)>=0;if(!e){this.checkJobStatus(t.jobId).then((t=>this.checkJobDetails(t)))}return Promise.resolve(t)}else{t=Object.assign({},this.updateJobDetail(t));this.stateService.notifyDataChanged("job-updated",{value:t})}return Promise.resolve(t)}sendQueryJobsRequest(e){const s={portalUrl:t.portalUrl,f:"json",token:t.token};if(e){s.surveyItemId=e}const r=new URLSearchParams;Object.keys(s).forEach((t=>{const e=s[t];r.append(t,e)}));const o=t.apiUrl+"/queryJobs";return fetch(o,{method:"POST",headers:this._generateRequestHeaders(),body:r}).then((t=>t.json()))}checkJobStatus(e){const s={f:"json",portalUrl:t.portalUrl,token:t.token};const r=new URLSearchParams;Object.keys(s).forEach((t=>{const e=s[t];r.append(t,e)}));const o=`${t.apiUrl}/jobs/${e}/status`;return fetch(o,{method:"POST",headers:this._generateRequestHeaders(),body:r}).then((t=>t.json()))}downloadReport(t){let e="docx";if(t.inputInfo&&t.inputInfo.parameters){e=t.inputInfo.parameters.outputFormat||"docx"}this.downloadFile(t,e==="pdf")}downloadFile(e,s){if(!e||!e.resultInfo||!e.resultInfo.resultFiles){return}const r=e.resultInfo.resultFiles;r.forEach(((e,r)=>{let o=e.url;if(!o){const s=e.id||"";o=`${t.portalUrl}/sharing/rest/content/items/${s}/data?`;o=o+"token="+t.token}if(r>0){setTimeout((()=>{this.startDownload(o,s)}),3e3)}else{this.startDownload(o,s)}}))}startDownload(t,e){const s=document.createElement("a");s.style.display="block";document.body.appendChild(s);s.setAttribute("href",t);if(e){s.setAttribute("target","_blank")}s.click();s.remove()}getErrorStr(t){let e="";if(t){if(typeof t==="string"){e=t}else if(t.error&&typeof t.error==="string"){e=t.error}else if(t.error&&t.error.message){e=t.error}else if(!e&&t.status&&t.statusText){e=t.status+" "+t.statusText}else if(!e&&t.status&&!t.statusText){e="Error code: "+t.status}}return e}showError(t,e){let s="";e=e||{};let r=e.detail||"";if(e.errorStr){s=e.errorStr}else{if(t.error&&t.error.message){s=t.error.message}}if(!e.detail&&e.showDetails){if(t.error.response&&t.error.response.error&&t.error.response.error.detail){r=t.error.response.error.detail}if(!r&&e.errorStr&&t.error&&t.error.message){r=t.error.message}}if(!s&&t.message){s=t.message}this.stateService.notifyDataChanged("show-error",{value:{alertType:e.alertType||"danger",html:s,detail:r}})}manageError(s,r){var o,i,n,c,a;if(((i=(o=s.response)===null||o===void 0?void 0:o.error)===null||i===void 0?void 0:i.code)===400||s.code==="CONT_0001"||((c=(n=s.response)===null||n===void 0?void 0:n.error)===null||c===void 0?void 0:c.code)===403||s.code==="GWM_0003"){const s=e.getService().getTranslateSync()||{};const o=(a=s.customPrint)===null||a===void 0?void 0:a.noItemErr;if(o&&r){throw Error(o.replace("${$notFoundItemID}",r+"="+t[r]))}}throw s}updateJobDetail(e){const s=i.getService();const r=e;if(r&&this.jobList.jobs&&this.jobList.jobs.length){const t=this.jobList.jobs.find((t=>t.jobId===r.jobId));if(t&&t._tempRuntime){r._tempRuntime=Object.assign(t._tempRuntime,r._tempRuntime||{})}}if(!e||!e.resultInfo){return r}if(e.resultInfo.resultFiles&&e.resultInfo.resultFiles.length){let o="";const i=e.resultInfo.resultFiles;let n=true;if(e.inputInfo&&e.inputInfo.parameters&&e.inputInfo.parameters.uploadInfo&&e.inputInfo.parameters.uploadInfo.type==="arcgis"){n=false}r.multipleFiles=i.length>1?true:false;if(n){if(!isNaN(Number(r.completed))){if(!r.multipleFiles){o=i[0].url}if(i[0].status==="expired"){r.urlExpired=true}}}else{i.forEach(((e,r)=>{const o=e.id||"";let n=`${t.portalUrl}/sharing/rest/content/items/${o}/data?`;n=n+"token="+t.token;i[r].url=n;i[r].size=s.getFileSize(e.size)}));if(!r.multipleFiles){o=i[0].url}}if(!r.multipleFiles){r.url=o}}if(r.resultInfo.details){const t=r.resultInfo.details||[];const e=(t,e)=>{const s=t.status;const r=t.messages;const o=t.success;const i=t.objectId;for(const t in e){const n=e[t];if(s===n.status&&o===n.success&&JSON.stringify(r||[])===JSON.stringify(n.messages||[])&&n.objectIds.indexOf(i)<0){return n}}return null};if(t&&t.length){const s=[];t.forEach((t=>{const r=e(t,s);if(!r){const e=(t.objectId+"").split(",").join(", ");s.push({status:t.status,messages:t.messages,success:t.success,objectIds:[e]})}else{r.objectIds.push(t.objectId)}}));s.forEach((t=>{t.objectIds=t.objectIds.join(", ")}));r.failedInfo=s}}r.hasDetail=true;return r}_getLocalTimezoneOffset(){if(t.utcOffset){return t.utcOffset}const e=(new Date).getTimezoneOffset();let s=Math.abs(e/60);let r=Math.abs(e%60);if(s<10){s="0"+s}if(r<10){r="0"+r}const o=e<=0?"+":"-";const i=o+s+":"+r;return i}_generateRequestHeaders(){const e={contentType:"application/x-www-form-urlencoded"};if(t.requestSource===undefined){e["X-Esri-Request-Source"]="MapsSDKJS/WebComponent"}else if(!t.requestSource||(t.requestSource+"").toLowerCase()==="none");else{e["X-Esri-Request-Source"]=t.requestSource}return e}}export{h as E,f as R,l as q};
//# sourceMappingURL=p-3023e4d5.js.map