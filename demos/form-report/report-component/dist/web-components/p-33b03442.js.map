{"version":3,"names":["PropsService","setProps","obj","whitelist","paramesWhitelist","env","pattern","match","window","location","hostname","includes","defaultLocale","this","getLocale","defaultValue","apiUrl","itemId","token","outputFormat","portalUrl","locale","f","key","indexOf","convertToSupportedLang","options","Object","assign","userInfo","portalInfo","browerLocale","navigator","language","userLanguage","userDefinedLocale","culture","lang","supportLangs","supportSubLocales","toLowerCase","isSupportLangs","find","e","split","isSupportSubLocale","t9nLocales","TranslateService","getService","service","getTranslate","getSupportedLocale","Promise","resolve","then","cache","JSON","parse","_a","res","fetch","getAssetPath","resp","ok","Error","json","stringify","label","keyMapping","inputFeatures","selectTemplate","reportSetting","fileOptions","reportName","saveToAGSAccount","showCredits","generateReport","previewMode","labelsObj","keys","forEach","str","customPrint","recentTasks","strkey","currentLangObj","catch","getTranslateSync","contextualLocales","replace","_match","region","toUpperCase","console","warn"],"sources":["src/services/props.service.ts","src/services/translate.service.ts"],"sourcesContent":["/**\n * This class aims to store the shared props\n */\nexport class PropsService {\n  \n  /**\n   * report parameters\n   * all the paraemters are listed in: https://devtopia.esri.com/Beijing-R-D-Center/feature-report/issues/505#issuecomment-4495107\n   */\n\n  // token, required\n  static token: string;\n\n  static portalUrl?: string;\n\n  static apiUrl?: string;\n\n  // Feature layer or table URL. required\n  static featureLayerUrl: string;\n\n  static surveyItemId?: string;\n\n  static templateItemId?: string;\n\n  static queryParameters: string;  // Object string\n  \n  static mergeFiles: 'none' | 'nextPage' | 'continuous';\n\n  static outputFormat: string;\n  \n  static outputReportName: string;\n  \n  static outputPackageName: string;\n  \n  static packageFiles: boolean | string;\n  \n  static uploadInfo: string;   // Object string\n  \n  static webmapItemId: string;\n  \n  static mapScale: string;\n\n  static locale?: string;\n\n  static utcOffset?: string;\n\n  static reportTemplateIds?: string;\n\n  static clientId?: string;\n\n  static requestSource: string;\n\n\n  /**\n   * the following parameters are geneareted by the main parameters, ie:\n   * the where is genereated from queryParameters\n   * the username is generated from token \n   */\n  static where: string;\n\n  static username?: string;\n\n  /**\n   * ui parameters\n   */\n  static show: string;\n\n  static hide: string;\n\n  static inputFeatureTemplate: string;\n\n  static label: string;\n\n  // /**\n  //  * @internal\n  //  * @param metadata \n  //  */\n  // constructor(metadata?: any) {\n  //   const defaultValue = {\n  //     url: 'https://survey123.arcgis.com/api/featureReport',\n  //     itemId: null,\n  //     token: null,\n  //     portalUrl: 'https://www.arcgis.com',\n  //     f: 'json'\n  //   };\n\n  //   Object.assign(this, defaultValue, metadata || {});\n  // }\n\n  static paramesWhitelist: string[] = ['token', 'portalUrl', 'apiUrl', 'featureLayerUrl', 'surveyItemId', \n  'templateItemId', 'queryParameters', 'mergeFiles', 'outputFormat', 'outputReportName', \n  'outputPackageName', 'packageFiles', 'uploadInfo', 'webmapItemId', 'mapScale', \n  'locale', 'utcOffset', 'where', 'username', 'show', 'hide', 'inputFeatureTemplate', 'label', 'reportTemplateIds', 'clientId', 'requestSource'];\n  /**\n   * set props\n   * @param obj \n   */\n  static setProps(obj) {\n    const whitelist = PropsService.paramesWhitelist;\n\n    let env = '';\n    const pattern = /survey123(.*?).arcgis.com/;\n    const match = window.location.hostname.match(pattern);\n    if (match && match[1]) {\n      if (['dev', 'qa', 'beta'].includes(match[1])) {\n        env = match[1];\n      }\n    }\n\n    const defaultLocale = this.getLocale();\n    const defaultValue = {\n      apiUrl: `https://survey123${env}.arcgis.com/api/featureReport`,\n      itemId: null,\n      token: null,\n      outputFormat: 'docx',\n      portalUrl: 'https://www.arcgis.com',\n      locale: defaultLocale,\n      f: 'json'\n    };\n\n    if (typeof obj === 'object') {\n      for (let key in obj) {\n        if (whitelist.indexOf(key) >= 0) {\n          PropsService[key] = obj[key] || defaultValue[key] || obj[key];\n          if (key === 'locale' && obj[key]) {\n            PropsService[key] = this.convertToSupportedLang(obj[key]);\n          }\n        }\n      }\n      // Object.assign(this, obj || {});\n    }\n\n    if (PropsService.outputFormat !== 'docx' && PropsService.outputFormat !== 'pdf') {\n      PropsService.outputFormat = 'docx';\n    }\n  }\n\n  /**\n   * get locale\n   * @returns \n   */\n  static getLocale(options?: {\n    userDefinedLocale?: string;\n    userInfo?: any;\n    portalInfo?: any;\n  }) {\n    options = Object.assign({\n\n    }, options || {});\n\n    let userInfo = options.userInfo || {};\n    let portalInfo = options.portalInfo || {};\n\n    const browerLocale =  navigator.language || (navigator as any).userLanguage;\n\n    // https://devtopia.esri.com/Beijing-R-D-Center/survey123-webform/issues/857\n    return this.convertToSupportedLang(options.userDefinedLocale)  ||\n      this.convertToSupportedLang(userInfo.culture) ||\n      this.convertToSupportedLang(portalInfo.culture) ||\n      this.convertToSupportedLang(browerLocale) || 'en';\n  }\n\n  /**\n  * convert the provided language code to the supported language code\n  * @param lang \n  */\n   static convertToSupportedLang(lang) {\n      const supportLangs: string[] = [\n        \"ar\",\n        \"bg\",\n        \"bs\",\n        \"ca\",\n        \"cs\",\n        \"da\",\n        \"de\",\n        \"el\",\n        \"en\",\n        \"es\",\n        \"et\",\n        \"fi\",\n        \"fr\",\n        \"he\",\n        \"hr\",\n        \"hu\",\n        \"id\",\n        \"it\",\n        \"ja\",\n        \"ko\",\n        \"lt\",\n        \"lv\",\n        \"nb\",\n        \"nl\",\n        \"pl\",\n        \"pt-br\",\n        \"pt-pt\",\n        \"ro\",\n        \"ru\",\n        \"sk\",\n        \"sl\",\n        \"sr\",\n        \"sv\",\n        \"th\",\n        \"tr\",\n        \"uk\",\n        \"vi\",\n        \"zh-cn\",\n        \"zh-hk\",\n        \"zh-tw\"\n      ];\n      const supportSubLocales = [\n        \"en-US\",\n        \"en-GB\",\n        \"en-AU\",\n        \"en-CA\",\n        \"es-ES\",\n        \"es-MX\",\n        \"it-CH\",\n        \"de-CH\",\n        \"de-AT\",\n        \"fr-CH\"\n      ];\n   lang = lang || '';\n   lang = (lang + '').toLowerCase();\n \n   const isSupportLangs = supportLangs.find((e) => {\n     return e.toLowerCase() === lang || e.toLowerCase() === lang.split('-')[0] || e.toLowerCase().split('-')[0] === lang;\n   });\n \n   const isSupportSubLocale = supportSubLocales.find((e) => {\n     return e.toLowerCase() === lang;\n   });\n   return isSupportSubLocale || isSupportLangs;\n }\n}","\nimport { PropsService } from './props.service';\nimport { getAssetPath } from '@stencil/core';\n\nconst defaultLocale = \"en\";\n\nexport const t9nLocales = [\n  \"ar\",\n  \"bg\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"da\",\n  \"de\",\n  \"el\",\n  defaultLocale,\n  \"es\",\n  \"et\",\n  \"fi\",\n  \"fr\",\n  \"he\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"ja\",\n  \"ko\",\n  \"lt\",\n  \"lv\",\n  \"no\",\n  \"nl\",\n  \"pl\",\n  \"pt-br\",\n  \"pt-pt\",\n  \"ro\",\n  \"ru\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"th\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-cn\",\n  \"zh-hk\",\n  \"zh-tw\",\n];\n\nexport const locales = [\n  \"ar\",\n  \"bg\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"da\",\n  \"de\",\n  \"de-at\",\n  \"de-ch\",\n  \"el\",\n  defaultLocale,\n  \"en-au\",\n  \"en-ca\",\n  \"en-gb\",\n  \"es\",\n  \"es-mx\",\n  \"et\",\n  \"fi\",\n  \"fr\",\n  \"fr-ch\",\n  \"he\",\n  \"hi\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"it-ch\",\n  \"ja\",\n  \"ko\",\n  \"lt\",\n  \"lv\",\n  \"mk\",\n  \"no\",\n  \"nl\",\n  \"pl\",\n  \"pt\",\n  \"pt-pt\",\n  \"ro\",\n  \"ru\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"th\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-cn\",\n  \"zh-hk\",\n  \"zh-tw\",\n];\nexport const supportedLocales = [...new Set([...t9nLocales, ...locales])] as const;\nexport type SupportedLocale = (typeof supportedLocales)[number];\n\n\nexport class TranslateService {\n  public static service: TranslateService;\n  public static currentLangObj: any;\n  public cache: any;\n\n\n  /**\n   * get Service\n   * @returns \n   */\n  static getService(): TranslateService {\n    if (!this.service) {\n      this.service = new TranslateService();\n    }\n    return this.service;\n  }\n\n  /**\n   * get tranlate json\n   * @param locale \n   * @returns \n   */\n  public getTranslate() {\n    const lang = this.getSupportedLocale(PropsService.locale || 'en');\n\n    return Promise.resolve(true)\n    .then(() => {\n      \n      // read the cache\n      if (this.cache && this.cache[lang]) {\n        try {\n          return JSON.parse(this.cache[lang]);\n        } catch {\n          return null;\n        }\n      }\n    })\n    .then((res) => {\n      if (res) {\n        return res;\n      }\n      return fetch(getAssetPath(`./assets/i18n/${lang}.json`))\n      .then((resp) => {\n        if (!resp.ok) {\n          throw new Error(\"could not fetch the translate json file\");\n        }\n        return resp.json();\n      })\n    })\n    .then((res) => {\n      // save the cache\n      if (res) {\n        this.cache = this.cache || {};\n        if (!this.cache[lang]) {\n          try {\n            this.cache[lang] = JSON.stringify(res);\n          } catch {\n            //\n          }\n        }\n        // override the default string if the 'label' prop existing\n        if (PropsService.label) {\n          const keyMapping = {\n            inputFeatures: 'inputFeatures',\n            selectTemplate: 'chooseTemplateLabel1',\n            reportSetting: 'resultSettingsLabel1',\n            fileOptions: 'outputMode',\n            reportName: 'saveToAGOItemName',\n            saveToAGSAccount: 'saveToAGOFolder',\n            outputFormat: 'outputFormat',\n            showCredits: 'creditsEstimate',\n            generateReport: 'generate',\n            previewMode: 'previewReport'\n          };\n\n          const labelsObj = JSON.parse(PropsService.label);\n          Object.keys(labelsObj).forEach((key) => {\n            const str = labelsObj[key];\n            if (key === 'recentReports') {\n              res.customPrint.recentTasks.label = str;\n            }\n            const strkey = keyMapping[key];\n            if (['inputFeatures', 'selectTemplate', 'reportSetting', 'fileOptions', 'reportName', 'saveToAGSAccount', 'outputFormat', 'showCredits', 'generateReport', 'previewReport'].indexOf(key) >=0 ) {\n              res.customPrint[strkey] = str;\n            }\n          })\n          \n        }\n        TranslateService.currentLangObj = res;\n      }\n      return res;\n    })\n    .catch((res) => { throw new Error(res)});\n  }\n\n  /**\n   * get translate sync\n   */\n  \n  public getTranslateSync() {\n    return TranslateService.currentLangObj;\n  }\n\n\n/**\n * Gets the locale that best matches the context.\n *\n * @param locale – the BCP 47 locale code\n * @param context - specifies whether the locale code should match in the context of CLDR or T9N (translation)\n */\npublic getSupportedLocale(locale: string): SupportedLocale {\n  const contextualLocales = t9nLocales; // = context === \"cldr\" ? locales : t9nLocales;\n\n  if (!locale) {\n    return defaultLocale;\n  }\n\n  if (contextualLocales.includes(locale)) {\n    return locale;\n  }\n\n  locale = locale.toLowerCase();\n\n  // we support both 'nb' and 'no' (BCP 47) for Norwegian but only `no` has corresponding bundle\n  if (locale === \"nb\") {\n    return \"no\";\n  }\n\n  // we use `pt-BR` as it will have the same translations as `pt`, which has no corresponding bundle\n  if (locale === \"pt\") {\n    return \"pt-br\";\n  }\n\n  if (locale.includes(\"-\")) {\n    locale = locale.replace(/(\\w+)-(\\w+)/, (_match, language, region) => `${language}-${region.toUpperCase()}`);\n\n    if (!contextualLocales.includes(locale)) {\n      locale = locale.split(\"-\")[0];\n    }\n  }\n\n  // we can `zh-CN` as base translation for chinese locales which has no corresponding bundle.\n  if (locale === \"zh\") {\n    return \"zh-cn\";\n  }\n\n  if (!contextualLocales.includes(locale)) {\n    console.warn(\n      `Translations for the \"${locale}\" locale are not available and will fall back to the default, English (en).`\n    );\n    return defaultLocale;\n  }\n\n  return locale;\n}\n\n}\n"],"mappings":"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","ignoreList":[]}