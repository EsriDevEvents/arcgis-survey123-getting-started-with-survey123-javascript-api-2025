{"version":3,"names":["determineOwner","requestOptions","owner","Promise","resolve","item","authentication","getUsername","reject","Error","getUserContent","folderId","folder","start","num","suffix","then","getPortalUrl","url","request","httpMethod","params","featuresPreviewCss","FeaturesPreviewStyle0","FeaturesPreview","this","reportService","ReportService","getService","utilService","UtilService","stateService","StateService","componentWillLoad","subscribe","newVal","undefined","inputFeatureTemplate","featureCount","getHelperObj","init","res","TranslateService","getTranslateSync","translator","initTranslateData","data","catch","err","showError","commonLang","common","reportLang","customPrint","displayFields","getDisplayFields","fields","outFields","queryParms","JSON","parse","queryParameters","resultRecordCount","orderByFields","replace","Object","assign","PropsService","featureLayerUrl","token","where","objectIds","additionalParams","queryFeatures","result","featureStr","noResults","fieldMapping","forEach","field","name","displayCount","displayFeats","features","splice","map","feat","innerStr","val","formatFieldVal","attributes","join","formatNumber","more","resultFields","getLayerJson","layerJson","displayField","spatialFields","keys","editFieldsInfo","key","concat","objectIdField","globalIdField","firstStringField","find","includes","type","firstNumberField","isNumberField","firstAnyField","defaultField","matches","match","curName","substring","length","isValidField","indexOf","push","render","h","Host","class","_b","_a","inputFeatures","innerHTML","reportGeneratorCss","ReportGeneratorStyle0","ReportGenerator","batchPrintLimitCount","checkingList","state","checkPrivilige","printTemplates","isPortal","isSupport","supportFeatureReport","canPrintFeatureReport","isUserCanPrintFeatureReport","canShowEstimateCredits","supportShowCredits","estimateCredits","creditsInfo","creditStatus","paramStore","getParamCache","templateItemId","surveyItemId","estimateReportCosts","resultInfo","lastCalculatedCount","lastSelectedTemplateId","error","buttonClickable","clickable","executeCustomPrint","isTestMode","isTestModePrinting","errorStr","isPrinting","outputReportName","outputPackageName","placeholders","extractPlaceholders","mergeFiles","createSampleReport","success","printErrMsg","detail","message","testModeJobObj","watchTestModeJob","fileName","substr","uploadInfo","parameters","conflictBehavior","packageFiles","stringify","outputFormat","webmapItemId","Number","mapScale","locale","utcOffset","helper","canCreateItem","jobId","executeReport","checkJobStatus","queryJobTimmer","clearTimeout","setTimeout","queryJobs","resp","reportCreated","emit","jobs","getErrorStr","checking","statusObj","jobStatus","downloadFile","alertType","messages","reduce","acu","msg","visibleConf","Fragment","onClick","calculating","label","inline","disabled","_d","_c","creditsEstimate","_f","_e","creditsRecordsCount","cost","_h","_g","credtisResultInvalid","id","_k","_j","generate","_m","_l","loading","_o","open","kind","scale","width","slot","_q","_p","chooseTemplateNoOneYet1","reportSettingsCss","ReportSettingsStyle0","ReportSettings","onFileNameChange","fileNameChangeHandler","target","value","langReport","helperObj","getUserFolders","fileOptChangeHandler","evt","cachedParam","fileOptionChange","setParamCache","fileNameChange","selectedFolderChangeHandler","selectedFolder","selectedFolderChange","outputFormatChangeHandler","selectedFileFormatChange","userName","getUser","username","rootFolderStr","saveToAGOFolderRoot","getBaseRequestOptions","folders","title","created","exp","returnedMatches","changeConflictBehavior","resultSettingsLabel1","visibleElems","fileOption","onFileOptionChange","saveToAGOItemName","placeholder","onCalciteInputTextChange","saveToAGOFolder","appearance","layout","nameConflictOptLabel","icon","checked","onCalciteRadioButtonChange","_r","nameConflictOptRename","_t","_s","nameConflictOptReplace","_v","_u","nameConflictOptSkip","saveToAGONoCreatePrivilegeTip","_x","_w","clearDisabled","maxItems","onCalciteComboboxChange","selected","_z","_y","_1","_0","_3","_2","outputFormatDocx","_5","_4","outputFormatPdf","taskListCss","TaskListStyle0","ReportTaskList","recentTasksCount","langCommon","langTasks","recentTasks","jobList","jobSplitDate","job","index","curDate","formatDateTime","submitted","lastDate","goBack","goBackClicked","removeJob","targetIdx","findIndex","jobItem","text","noTaskDesc","limitationDesc","onJobRemoved","templateChooserCss","TemplateChooserStyle0","TemplateChooser","selectedTemplateIdChanged","selectedTemplateId","templateIdsChanged","globalProps","templateIds","getReportTemplates","templates","notifyDataChanged","setHelperObj","selectedTemplateChange","selectedTemplateChangeHandler","chooseTemplateLabel1","template"],"sources":["node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js","node_modules/@esri/arcgis-rest-portal/dist/esm/items/content.js","src/components/features-preview/features-preview.scss?tag=features-preview&encapsulation=shadow","src/components/features-preview/features-preview.tsx","src/components/report-generator/report-generator.scss?tag=report-generator&encapsulation=shadow","src/components/report-generator/report-generator.tsx","src/components/report-settings/report-settings.scss?tag=report-settings&encapsulation=shadow","src/components/report-settings/report-settings.tsx","src/components/task-list/task-list.scss?tag=task-list&encapsulation=shadow","src/components/task-list/task-list.tsx","src/components/template-chooser/template-chooser.scss?tag=template-chooser&encapsulation=shadow","src/components/template-chooser/template-chooser.tsx"],"sourcesContent":["/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * `requestOptions.owner` is given priority, `requestOptions.item.owner` will be checked next. If neither are present, `authentication.getUserName()` will be used instead.\n */\nexport function determineOwner(requestOptions) {\n    if (requestOptions.owner) {\n        return Promise.resolve(requestOptions.owner);\n    }\n    else if (requestOptions.item && requestOptions.item.owner) {\n        return Promise.resolve(requestOptions.item.owner);\n    }\n    else if (requestOptions.authentication &&\n        requestOptions.authentication.getUsername) {\n        return requestOptions.authentication.getUsername();\n    }\n    else {\n        return Promise.reject(new Error(\"Could not determine the owner of this item. Pass the `owner`, `item.owner`, or `authentication` option.\"));\n    }\n}\n/**\n * checks if the extent is a valid BBox (2 element array of coordinate pair arrays)\n * @param extent\n * @returns\n */\nexport function isBBox(extent) {\n    return (Array.isArray(extent) &&\n        Array.isArray(extent[0]) &&\n        Array.isArray(extent[1]));\n}\n/**\n * Given a Bbox, convert it to a string. Some api endpoints expect a string\n *\n * @param {BBox} extent\n * @return {*}  {string}\n */\nexport function bboxToString(extent) {\n    return extent.join(\",\");\n}\n//# sourceMappingURL=helpers.js.map","import { request } from \"@esri/arcgis-rest-request\";\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\nimport { determineOwner } from \"./helpers.js\";\n/**\n * Returns a listing of the user's content. If the `username` is not supplied, it defaults to the username of the authenticated user. If `start` is not specified it defaults to the first page.\n *\n * If the `num` is not supplied it is defaulted to 10. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/user-content.htm) for more information.\n *\n * ```js\n * import { getUserContent } from \"@esri/arcgis-rest-portal\";\n *\n * getUserContent({\n *    owner: 'geemike',\n *    folderId: 'bao7',\n *    start: 1,\n *    num: 20,\n *    authentication\n * })\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise<IUserContentResponse>\n */\nexport const getUserContent = (requestOptions) => {\n    const { folderId: folder, start = 1, num = 10, authentication } = requestOptions;\n    const suffix = folder ? `/${folder}` : \"\";\n    return determineOwner(requestOptions)\n        .then((owner) => `${getPortalUrl(requestOptions)}/content/users/${owner}${suffix}`)\n        .then((url) => request(url, {\n        httpMethod: \"GET\",\n        authentication,\n        params: {\n            start,\n            num\n        }\n    }));\n};\n//# sourceMappingURL=content.js.map",":host {\n  display: block;\n  min-height: 200;\n  padding: 0 0.75rem;\n  background-color: var(--calcite-color-foreground-1);\n  color: var(--calcite-color-text-2);\n  .heading {\n    margin-inline: 0px;\n    margin-block: 1.25rem 1rem;\n    font-size: var(--calcite-font-size-0);\n    line-height: 1.25rem;\n    font-weight: var(--calcite-font-weight-medium);\n  }\n}\n","import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { queryFeatures, IQueryFeaturesResponse } from '@esri/arcgis-rest-feature-service';\nimport { PropsService } from '../../services/props.service';\nimport { ReportService } from '../../services/report.service';\nimport { TranslateService } from '../../services/translate.service';\nimport { UtilService } from '../../services/util.service';\nimport { StateService } from '../../services/state.service';\n// import { ArcGISIdentityManager } from '@esri/arcgis-rest-request';\n\n@Component({\n  tag: 'features-preview',\n  styleUrl: 'features-preview.scss',\n  shadow: true,\n})\nexport class FeaturesPreview {\n\n  // @Prop() langObj?: any;\n  @Prop() queryParameters?: string;\n  /**\n   * Defines how a feature displays in the “Input feature” section. \n   * Use {<fieldName>} to refer to a specific attribute of the feature like in MapViewer. \n   * For example, {countryName}, population: {pop2000} -> “China, population: 1,411,750,000”.\n   */\n  @Prop() inputFeatureTemplate?: string;\n\n  @State() featureCount: number = 0;\n  @State() featureStr: string = '';\n  \n  @State() translator: any;\n  @State() reportLang: any;\n  @State() commonLang: any;\n  private reportService: ReportService = ReportService.getService();\n  private utilService: UtilService = UtilService.getService();\n  private stateService: StateService = StateService.getService();\n\n  componentWillLoad() {\n    this.stateService.subscribe('update-features-preview', (newVal) => {\n      if (newVal !== undefined) {\n        this.inputFeatureTemplate = newVal\n      }\n      this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n      this.init();\n    });\n\n    return Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.translator = res;\n      this.initTranslateData(res);\n      this.stateService.subscribe('locale-data-changed', (data) => {\n        this.initTranslateData(data);\n      });\n    // })\n    // .then(() => {\n    //   return this.init()\n    }).catch((err) => {\n      this.reportService.showError(err);\n    })\n  }\n\n  initTranslateData(res) {\n    this.translator = res;\n    this.commonLang = res?.common;\n    this.reportLang = res?.customPrint;\n  }\n\n  /**\n   * @returns \n   */\n  init() {\n    let displayFields = [];\n    return this.getDisplayFields()\n    .then((fields) => {\n      displayFields = fields;\n      let outFields = [];\n      // if (displayFields[0] === '*') {\n      //   outFields = ['*'];\n      // } else {\n      outFields = displayFields;\n      // }\n      /**\n       * query features\n       */\n      const queryParms: any = JSON.parse(this.queryParameters);\n      let resultRecordCount = 10;\n      if (queryParms.resultRecordCount < 10) {\n        resultRecordCount = queryParms.resultRecordCount\n      }\n\n      // the order by fields may be '||EditDate DESC, objectid ASC', but it is not supported by rest api\n      if (queryParms.orderByFields) {\n        queryParms.orderByFields = queryParms.orderByFields.replace('||', '');\n      }\n      const params = Object.assign({\n        url: PropsService.featureLayerUrl,\n        authentication: PropsService.token,   // todo: pass the portalUrl\n        outFields: outFields,\n        resultRecordCount: resultRecordCount\n      }, queryParms);\n\n      const where = 'where' in params ? params.where : null\n      const objectIds = 'objectIds' in params ? params.objectIds: null\n      const additionalParams: any  = {\n\n      };\n      if (where !== null) {\n        additionalParams.where = where;\n      }\n      if (objectIds != null) {\n        additionalParams.objectIds = objectIds;\n      }\n      if (!objectIds && !where) {\n        additionalParams.where = '1<>1'; // if no objectIds and where, set where as '1<>1' to avoid requesting error\n        delete additionalParams.objectIds\n      }\n\n      params.params = additionalParams;\n      delete params.where;\n      delete params.objectIds;\n\n      return queryFeatures(params);\n    })\n    .then((result: IQueryFeaturesResponse) => {\n      // no feature\n      if (this.featureCount === 0) {\n        this.featureStr = this.commonLang.noResults;\n        return true;\n      }\n\n      // generate the display string\n      const fields = result.fields || [];\n      const fieldMapping = {};\n      fields.forEach((field) => {\n        fieldMapping[field.name] = field;\n      });\n      const displayCount = this.featureCount > 10 ? 10 : this.featureCount;\n      const displayFeats = result.features.splice(0, displayCount);\n      // give a default display fields(the first four fields)\n      // if (displayFields[0] === '*') {\n      //   displayFields = this.getDisplayFields(fields);\n      // }\n\n      this.featureStr = displayFeats.map((feat) => {\n        let innerStr = this.inputFeatureTemplate;\n        displayFields.forEach((field) => {\n          const val = this.utilService.formatFieldVal(fieldMapping[field], feat.attributes[field]);\n          innerStr = innerStr.replace(`{${field}}`, val);\n        });\n        return innerStr;\n\n      }).join('<br>');\n      if (this.featureCount > 10) {\n        this.featureStr += `<br>...(${this.utilService.formatNumber(this.featureCount - 10)} ${this.commonLang.more || 'more'})`;\n      }\n\n      // console.log(this.featureCount , this.featureStr);\n      return true;\n    }).catch((err) => {\n      this.reportService.showError(err);\n    })\n  }\n  /**\n   * get display fields\n   * @returns \n   */\n  private getDisplayFields() {\n    let resultFields = [];\n    return this.reportService.getLayerJson().then((layerJson) => {\n      if (!this.inputFeatureTemplate) {\n        // auto generate a default inputFeatureTemplate, show the displayField\n        if (layerJson.displayField) {\n          // todo: how about the displayField is a expression?\n          this.inputFeatureTemplate = '{' + layerJson.displayField + '}';\n          resultFields = [layerJson.displayField];\n        } else {\n          const fields = layerJson.fields || [];\n          const spatialFields = Object.keys(layerJson.editFieldsInfo || {}).map((key) => {\n            return layerJson.editFieldsInfo[key];\n          }).concat([layerJson.objectIdField || '', layerJson.globalIdField || '']);\n          \n          \n          const firstStringField = fields.find((field) => {\n            return !spatialFields.includes(field.name) && field.type === 'esriFieldTypeString';\n          });\n\n          const firstNumberField = fields.find((field) => {\n            return !spatialFields.includes(field.name) && this.utilService.isNumberField(field);\n          });\n\n          const firstAnyField = fields.find((field) => {\n            return !spatialFields.includes(field.name) && !this.utilService.isNumberField(field) && field.type !== 'esriFieldTypeString';\n          });\n\n          // priority: first string field > first number field > first other field.\n          const defaultField = firstStringField || firstNumberField || firstAnyField || fields[0];\n\n          if (defaultField) {\n            this.inputFeatureTemplate = '{' + defaultField.name +  '}';\n            resultFields = [defaultField.name];\n          } else {\n            // show the first four field\n            // resultFields = (fields.length > 3 ? fields.slice(0, 4) : fields).map((field) => {\n            //   return field.name;\n            // }); \n            // this.inputFeatureTemplate = resultFields.map((fieldName) => {\n            //   return '{' + fieldName +  '}';\n            // }).join(',');\n          }\n        }\n        return resultFields;\n      } else {\n        const fields = layerJson.fields || [];\n        const matches = this.inputFeatureTemplate.match(/\\{.*?\\}/g);\n        (matches || []).forEach((match: any) => {\n          const curName = (match ).substring(1, match.length - 1)\n          const isValidField = fields.find((field) => {\n            return field.name === curName\n          });\n          if (resultFields.indexOf(curName) < 0 && isValidField) {\n            resultFields.push(curName);\n          }\n        });\n        if (!resultFields.length) {\n          resultFields = [layerJson.objectIdField || 'objectid']; \n        }\n        return resultFields;\n  \n      }\n    })\n  }\n\n\n  render() {\n    return (\n      <Host>\n        <div>\n          <div class=\"heading\">{this.translator?.customPrint?.inputFeatures} ({this.featureCount})</div>\n          <div innerHTML={this.featureStr}></div>\n          {/* <calcite-input type='textarea' readOnly='true' placeholder=\"Preview the features\" value={featureStr}></calcite-input> */}\n        </div>\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  padding: 0 0.75rem;\n  display: block;\n  // todo: move to a shared scss file\n  $color-black-haze:#F7F8F8;\n  $color-blue-eastern: #1C99BC;\n  $color-gray-dusty : #979797;\n  .clickable-text {\n    cursor: pointer;\n    // color: $color-blue-eastern;\n\n    // color: var(--calcite-color-text-1);\n    // text-decoration: underline solid var(--calcite-color-text-1); // $color-blue-eastern;\n    font-weight: normal;\n  \n    &:hover {\n      // color: $color-blue-eastern;\n      // text-decoration: underline solid $color-blue-eastern;\n    }\n  }\n\n  calcite-notice {\n    margin-top: 6px;\n  }\n\n  .credits-info {\n    // background: $color-black-haze;\n    margin: 10px 0 10px 0;\n    padding: 10px 0;\n    background-color: var(--calcite-color-foreground-3);\n    color: var(--calcite-color-text-2);\n    display: flex;\n    justify-content: space-between;\n    // height: 39px;\n    >div{\n      margin: 0px 10px;\n    }\n    .show-credits {\n        display: inline-flex;\n        align-items: center;\n      //   position: relative;\n      //   top: 2px;\n      survey123-ui-spinner {\n          line-height: 0;\n      }\n      ::ng-deep span {\n          line-height: 0;\n      }\n      .icon-spin.icon-refresh {\n          top: 1px;\n      }\n      .spinner{\n          -webkit-transition: none;\n          -moz-transition: none;\n          -o-transition: none;\n          transition: none;\n      }\n      span:not(.clickable-text) {\n          cursor: default;\n      }\n      span.clickable-text.disabled {\n          // color: $color-gray-dusty;\n          // color: var(--calcite-color-text-1);\n          // text-decoration: underline solid var(--calcite-color-text-1); // $color-gray-dusty;\n          cursor: not-allowed;\n      }\n    }\n    .credits-result-info{\n      flex-grow: 1;\n      display: flex;\n      justify-content: flex-end;\n      span {\n        word-break: break-word;\n      }\n    }\n  }\n  .pieview-info {\n    margin-top: 10px;\n    margin-bottom: 20px;\n    .has-spinner >span {\n        cursor: default;\n        &.report-status {\n          padding: 0 2px;\n        }\n    }\n    .preview-text {\n        cursor: default;\n        display: flex;\n        align-items: center;\n        >span {\n            cursor: pointer;\n        }\n    }\n    .preview-text.disabled {\n        text-decoration: underline solid $color-gray-dusty;\n        color: $color-gray-dusty;\n        cursor: not-allowed;\n        >span {\n            cursor: not-allowed;\n        }\n    }\n  }\n  .execute-btn {\n    overflow: auto;\n    margin: -5px 0 30px 0;\n    >span {\n        line-height: 41px;\n    }\n    a {\n      float: inline-start;\n        button {\n            width: auto;\n        }\n    }\n    &.portal-btn {\n      margin: 20px 0;\n    }\n  }\n  calcite-loader {\n    display: inline-block;\n    margin: 0 0 0 10px;\n  }\n}","import { Component, EventEmitter, Fragment, Host, Event, State, h, Prop } from '@stencil/core';\nimport { TranslateService } from '../../services/translate.service';\nimport { ReportService } from '../../services/report.service';\nimport { PropsService } from '../../services/props.service';\nimport { UtilService } from '../../services/util.service';\nimport { StateService } from '../../services/state.service';\n\n@Component({\n  tag: 'report-generator',\n  styleUrl: 'report-generator.scss',\n  shadow: true,\n})\nexport class ReportGenerator {\n  private isPortal: boolean;\n  private batchPrintLimitCount: number = 2000;\n  private canShowEstimateCredits: boolean;\n  @State() featureCount: number;\n  @State() supportShowCredits: boolean = true;\n  @State() printTemplates: any[] = [];\n  @Prop() langObj: any;\n  @State() creditsInfo: any;\n  @State() creditStatus: string;\n  @State() testModeJobObj: any;\n  @State() isTestModePrinting: boolean;\n  @Prop() visibleConf: any;\n  @Prop() templateItemId: string;\n  // private canPrintFeatureReport: any;\n  @State() isPrinting: boolean;\n  // private buttonClickable: boolean;\n  private checkingList: any[] = [];\n  @Event() reportCreated: EventEmitter<any>;\n\n  @State() translator: any;\n  private queryJobTimmer: any;\n  private reportService: ReportService = ReportService.getService();\n  private utilService: UtilService = UtilService.getService();\n  private state: StateService = StateService.getService();\n\n  componentWillLoad() {\n    // check whether to show the estimate credit button\n\n    this.checkPrivilige();\n\n    this.printTemplates = this.reportService.getHelperObj('printTemplates') || [];\n    this.state.subscribe('print-templates-updated', (data) => {\n      this.printTemplates = data || [];\n    });\n    this.state.subscribe('portal-info-update', () => {\n      this.checkPrivilige();\n    });\n\n    this.state.subscribe('feature-count-updated', () => {\n      this.checkPrivilige();\n    });\n    \n    return Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.translator = res;\n      this.state.subscribe('locale-data-changed', (data) => {\n        this.translator = data;\n      });\n      // const langTasks = res.customPrint.recentTasks;\n      // this.langTasks = langTasks;\n      // this.statusI18nConfig = {\n      //   esriJobWaiting: langTasks.jobStatusWaiting,\n      //   esriJobSubmitted: langTasks.jobStatusSubmitted,\n      //   esriJobExecuting: langTasks.jobStatusExecuting,\n      //   esriJobSucceeded: langTasks.jobStatusSucceeded,\n      //   esriJobFailed: langTasks.jobStatusFailed,\n      //   pdfConverting: langTasks.pdfConverting,\n      //   pdfConverted: langTasks.pdfConverted,\n      //   dfConvertFailed: langTasks.dfConvertFailed\n      // };\n    })\n  }\n\n  public checkPrivilige() {\n    this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n    this.isPortal = this.utilService.isPortal;\n    const isSupport = this.utilService.supportFeatureReport();\n    const canPrintFeatureReport = this.utilService.isUserCanPrintFeatureReport();\n    this.canShowEstimateCredits = isSupport ? canPrintFeatureReport: false;\n    this.supportShowCredits = !this.isPortal&&this.featureCount<=this.batchPrintLimitCount&&this.canShowEstimateCredits;\n    \n  }\n\n  public estimateCredits() {\n    if (this.featureCount > this.batchPrintLimitCount) {\n      return;\n    }\n    if (this.featureCount < 1) {\n      return;\n    }\n\n    if (!this.printTemplates || !this.printTemplates.length) {\n      return;\n    }\n\n    if (!(this.creditsInfo && this.creditStatus === 'estimating')) {\n      const paramStore: any = this.reportService.getParamCache();\n      const templateItemId = paramStore.templateItemId || PropsService.templateItemId;\n      const params = {\n        queryParameters: PropsService.queryParameters,\n        featureLayerUrl: PropsService.featureLayerUrl,\n        templateItemId: templateItemId,\n        surveyItemId: PropsService.surveyItemId\n      };\n\n      // if (this.isInternalTest) {\n      //   (params as any).isInternalTest = true;\n      // }\n\n      this.creditStatus = 'estimating';\n      this.creditsInfo = this.creditsInfo || {};\n      this.reportService.estimateReportCosts(params)\n        .then((res) => {\n          if (res.resultInfo) {\n            this.creditsInfo = res.resultInfo;\n            this.creditStatus = 'finished';\n            // temporarily save lastCalculatedCount and lastSelectedTemplateId, to detect if estimate is invalid\n            this.creditsInfo.lastCalculatedCount = this.featureCount;\n            this.creditsInfo.lastSelectedTemplateId = templateItemId;\n          } else {\n            throw res.error;\n          }\n        })\n        .catch((err) => {\n          this.reportService.showError(err);\n          this.creditStatus = 'changed';\n        });\n    }\n  }\n\n  /**\n   * check the clickable of the generate button\n   * @returns \n   */\n  public buttonClickable() {\n    const clickable = true;\n\n    /**\n     * check print feautre report privilege\n     */\n    // if (!this.canPrintFeatureReport) {\n    //   return false;\n    // }\n\n    if (this.templateItemId) {\n      return true;\n    }\n\n    if (!this.printTemplates || !this.printTemplates.length) {\n      return false;\n    }\n\n    // todo: need string when there is no fieldName or feature count is 0\n    // const paramStore: any = this.reportService.getParamCache();\n    // const templateItemId = paramStore.templateItemId || PropsService.templateItemId;\n    // const fileName = paramStore.outputPackageName || PropsService.outputPackageName || paramStore.outputReportName || PropsService.outputReportName || '';\n    // const count = this.featureCount;\n    // if (count < 1 || !templateItemId || count > this.batchPrintLimitCount) {\n    //   clickable = false;\n    // } else if (!fileName) { //  || (this.saveToItem && this.canCreateItem && !this.selectedFolder)) {\n    //   clickable = false;\n    // }\n    return clickable;\n  }\n\n  executeCustomPrint(isTestMode?: boolean) {\n    const paramStore: any = this.reportService.getParamCache();\n    if (isTestMode && this.isTestModePrinting) {\n      return;\n    }\n    this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n    if (this.featureCount < 1) {\n      this.reportService.showError({}, {errorStr: this.translator?.common.noResults});\n      return;\n    }\n    // const helper = this.reportService.getHelperObj();\n    // const count = helper.featureCount;\n    // if (count < 1) {\n    //   console.log('There is no reocord to print.')\n    //   return;\n    // }\n    // let formatStrings: string[] = [\n    //   'MM/DD/YYYY',\n    //   'YYYY-MM-DD HH:mm:ss',\n    //   'YYYYMMDDHHmmss'\n    // ];\n    // const template = paramStore.templateItemId;\n    // template.printing = true;\n    if (isTestMode) {\n      this.isTestModePrinting = true;\n    } else {\n      this.isPrinting = true;\n    }\n    if (isTestMode) {\n      const params: any = {\n        queryParameters: PropsService.queryParameters,\n        templateItemId: paramStore.templateItemId || PropsService.templateItemId,\n        surveyItemId: PropsService.surveyItemId,\n        featureLayerUrl: PropsService.featureLayerUrl,\n        outputReportName: paramStore.outputPackageName || PropsService.outputPackageName || paramStore.outputReportName || PropsService.outputReportName || '' // !this.saveToItem ? fName + '' : '',\n      };\n\n      // Use outputReportName as outputPackageName if it doesn't have any variables and outputPackageName is not specified by user\n      // https://devtopia.esri.com/Beijing-R-D-Center/feature-report/issues/252\n      if (params.outputReportName) {\n        const placeholders = this.utilService.extractPlaceholders(params.outputReportName);\n        if (!(placeholders && placeholders.length)) {\n          params.outputPackageName = params.outputReportName;\n        }\n      }\n      const mergeFiles = paramStore.mergeFiles || PropsService.mergeFiles;\n      if (mergeFiles && mergeFiles !== 'none') {\n        params.mergeFiles = mergeFiles;\n      }\n\n      return this.reportService.createSampleReport(params).then((res) => {\n        if (!res || !res.success) {\n          this.reportService.showError({}, {errorStr: this.translator?.customPrint?.printErrMsg, detail: ((res.error && res.error.message) ? res.error.message : '')});\n          // template.printing = false;\n          this.isTestModePrinting = false;\n        } else {\n          this.testModeJobObj = res;\n          this.watchTestModeJob();\n          // template.printing = false;\n          // this.isPrinting = false;\n        }\n      }).catch((err) => {\n        this.reportService.showError({}, {errorStr: this.translator?.customPrint?.printErrMsg, detail: ((err.error && err.error.message) ? err.error.message : '')});\n        // template.printing = false;\n        this.isTestModePrinting = false;\n      })\n    }\n\n    // let fileName = this.validateFileName(this.survey.title) + '_' + moment().format(this.formatStrings[2]) + '.docx';\n    let fileName = paramStore.outputPackageName || PropsService.outputPackageName || paramStore.outputReportName || PropsService.outputReportName || '';\n    if (fileName.length > 250) {\n      fileName = fileName.substr(0, 250);\n    }\n    return Promise.resolve()\n    /**\n     * first: get objectId, if only one record is selected, and no uploadInfo\n     */\n    // return new Promise((resolve) => {\n    //   if (!this.saveToItem && this.featureCount === 1) {\n    //     let objectId: any = '';\n    //     if (this.selectedMode === 'selected') {\n    //       objectId = this.getSelectedOIDs();\n    //       if (Array.isArray(objectId)) {\n    //         objectId = objectId[0];\n    //       }\n    //       resolve(objectId);\n    //     } else {\n    //       let where = this.where || '1=1';\n    //       if (this.featureTable && this.featureTable.layer) {\n    //         where = this.featureTable.layer.definitionExpression || '1=1';\n    //       }\n    //       this.surveyFeatureSetService.queryFromCurrentLayerToRootLayer(this.featureLayerUrl, this.featureLayerUrl.split('/').pop(), null, where, true).then((res) => {\n    //         const rootLayerIdx = this.featureLayerUrl.split('/').pop();\n    //         if (res && res[rootLayerIdx] && res[rootLayerIdx].objectIds && res[rootLayerIdx].objectIds.length) {\n    //           resolve(res[rootLayerIdx].objectIds);\n    //         } else {\n    //           resolve(null);\n    //         }\n    //       });\n    //     }\n    //   } else {\n    //     resolve(null);\n    //   }\n    // })\n      /**\n       * second, get the file name if needed\n       */\n      // .then((objectId) => {\n      //   // todo: get the survey form json title, remove html tags\n      //   let outputReportName = this.utilService.stripscript(this.survey.title) + '_OID' + objectId + '_' + moment().format('YYYYMMDDHHmmss') + '.' + this.selectedFormat.value;\n      //   if (!this.saveToItem && this.featureCount === 1 && this.survey.form.settings.instanceName) {\n      //     return this.surveyFeatureSetService.getSurveyDataSet({\n      //       survey: this.survey,\n      //       featureServiceUrl: this.featureLayerUrl,\n      //       objectIds: objectId + '',\n      //       outSR: null,\n      //       fieldMapping: null\n      //     })\n      //       .then((resp) => {\n      //         const instanceOption = {\n      //           isHub: this.survey.isHubItem(),\n      //           instance: this.survey.form.settings.instanceName\n      //         };\n      //         resp.title = this.survey.title;\n      //         const instance = new InstanceName(instanceOption).getInstanceValue(resp);\n      //         if (instance) {\n      //           outputReportName = this.utilService.stripscript(this.survey.title) + '-' + this.utilService.stripscript(instance) + '_' + moment().format('YYYYMMDDHHmmss');\n      //         }\n      //         return outputReportName;\n      //       });\n      //   } else {\n      //     return Promise.resolve(outputReportName);\n      //   }\n      // })\n      /**\n       * third: execute the custom print\n       */\n      .then(() => {\n        // execute custom print\n        // let queryParams: any = { objectIds: this.getSelectedOIDs().join(',') + '' };\n        // if (this.selectedMode !== 'selected') {\n\n        // let where = PropsService.where || '1=1'; // this.where || '1=1';\n        // const queryParams = JSON.parse(PropsService.queryParameters);\n        // let queryParams = PropsService.queryParameters; // { where: where };\n        // }\n\n        // add sort config\n        // const sortParams = this.generateSortParams();\n        // if (sortParams) {\n        //   queryParams['orderByFields'] = sortParams;\n        // }\n\n        let uploadInfo = null;\n\n        // if (this.saveToItem) {\n          uploadInfo = paramStore.uploadInfo || PropsService.uploadInfo || {\n            type: 'arcgis', // 'ArcGIS Online',\n            parameters: {\n            },\n            conflictBehavior: 'rename'\n          };\n          // fileName = null;\n        // }\n        const packageFiles = PropsService.packageFiles + '' === 'true' ? true : (PropsService.packageFiles + '' === 'false' ? false : 'auto');\n        const params: any = {\n          queryParameters: PropsService.queryParameters, //JSON.stringify(queryParams),\n          templateItemId: paramStore.templateItemId || PropsService.templateItemId,\n          outputReportName: fileName || '', // !this.saveToItem ? fName + '' : '',\n          // surveyItemId: PropsService.surveyItemId,\n          featureLayerUrl: PropsService.featureLayerUrl,\n          uploadInfo: JSON.stringify(uploadInfo),\n          packageFiles: packageFiles // todo: are we really need to pass this parameter?\n          // mapScale: mapScale\n        };\n        if (PropsService.surveyItemId) {\n          params.surveyItemId = paramStore.surveyItemId || PropsService.surveyItemId;\n\n        }\n        if (paramStore.outputFormat || PropsService.outputFormat) {\n          params.outputFormat = paramStore.outputFormat || PropsService.outputFormat;\n        }\n        if (PropsService.webmapItemId) {\n          params.webmapItemId = PropsService.webmapItemId;\n        }\n        if (Number(PropsService.mapScale) || Number(PropsService.mapScale) === 0) {\n          params.mapScale = Number(PropsService.mapScale);\n        }\n        if (PropsService.locale) {\n          params.locale = '||' + PropsService.locale;\n        }\n        if (PropsService.utcOffset) {\n          params.utcOffset = PropsService.utcOffset;\n        }\n\n        // Use outputReportName as outputPackageName if it doesn't have any variables and outputPackageName is not specified by user\n        // https://devtopia.esri.com/Beijing-R-D-Center/feature-report/issues/252\n        const outputPackageName = paramStore.outputPackageName || PropsService.outputPackageName\n        if (outputPackageName) {\n          params.outputPackageName = outputPackageName;\n        }\n        const mergeFiles = paramStore.mergeFiles || PropsService.mergeFiles;\n        if (mergeFiles && mergeFiles !== 'none') {\n          params.mergeFiles = mergeFiles;\n        }\n\n\n        const helper = this.reportService.getHelperObj();\n        if (helper.canCreateItem === false) {\n          delete params.uploadInfo;\n        }\n\n        let jobId = null;\n        this.reportService.executeReport(params).then((res) => {\n          if (!res || !res.success) {\n            this.reportService.showError({}, {\n              errorStr: this.translator?.customPrint?.printErrMsg,\n              detail: res.error.message\n            });\n            // this.alertService.setOption({\n            //   alertType: 'danger',\n            //   html: this.translator?.customPrint?.printErrMsg,\n            //   detail: (res.error && res.error.message) ? res.error.message : ''\n            // }).show();\n            // template.printing = false;\n            this.isPrinting = false;\n          } else {\n\n            jobId = res.jobId;\n            // this.sessionJobs.push(jobId);\n\n            // this.isPrinting = false;\n            // // this.isPrinting = false;\n            // this.isSubmitAnimating = true;\n            // this.offsetLeft = this.calcNumIconOffset('left');\n            // this.offsetTop = this.calcNumIconOffset('top');\n            // this.offsetOpacity = this.calcNumIconOffset('opacity');\n            // setTimeout(() => {\n            //   this.isSubmitAnimating = false;\n            //   this.offsetOpacity = this.calcNumIconOffset('opacity');\n            // }, 150);\n            // setTimeout(() => {\n            //   this.checkingListChange = false;\n            //   this.offsetLeft = this.calcNumIconOffset('left');\n            //   this.offsetTop = this.calcNumIconOffset('top');\n            // }, 1500);\n            // todo: if the current job list is 10 ,should add the new job, and delete the 10th job.\n            return this.reportService.checkJobStatus(jobId);\n          }\n        })\n        .then(() => {\n          // if there is no cheching list before ,nee to queryJobs now\n          // if (this.checkingList.length === 1) {\n          //   this.queryJobTimmer = this.queryJobs();\n          // }\n\n          /**\n           * jump to the recent tasks panel\n           */\n          if (this.queryJobTimmer) {\n            clearTimeout(this.queryJobTimmer);\n          }\n          this.queryJobTimmer = setTimeout(() => {\n            this.reportService.queryJobs(true).then((resp) => {\n              this.checkingList.push(jobId);\n              this.reportCreated.emit({\n                jobId: jobId,\n                checkingList: this.checkingList,\n                jobs: resp?.jobs || []\n              });\n              this.isPrinting = false;\n            });\n          }, 100);\n        })\n        .catch((err) => {\n          const detail = this.reportService.getErrorStr(err);\n          // this.customReportService.showError(err, {errorStr:this.translator?.customPrint?.printErrMsg, detail: detail});\n          // template.printing = false;\n          this.reportService.showError(err, {errorStr:this.translator?.customPrint?.printErrMsg, detail: detail});\n          this.isPrinting = false;\n        });\n      });\n  }\n\n  /**\n   * check the job status of the preview job\n   * @returns \n   */\n  public watchTestModeJob() {\n    if (!this.testModeJobObj) {\n      return;\n    }\n    const jobId = this.testModeJobObj.jobId;\n    const checking = () => {\n      return this.reportService.checkJobStatus(jobId).then((statusObj) => {\n        this.testModeJobObj = statusObj;\n        if (statusObj.jobStatus === 'esriJobSucceeded' || statusObj.jobStatus === 'esriJobPartialSucceeded') {\n          // let format = 'docx';\n          // if (statusObj.inputInfo && statusObj.inputInfo.parameters) {\n          //   format = statusObj.inputInfo.parameters.outputFormat || 'docx';\n          // }\n          this.reportService.downloadFile(statusObj);  \n          this.isTestModePrinting = false;\n          if (statusObj.jobStatus === 'esriJobPartialSucceeded') {\n            this.reportService.showError({}, {\n              alertType: 'warning',\n              errorStr: this.translator?.customPrint?.printErrMsg,\n              detail: statusObj.detail || statusObj.message || (statusObj.messages && statusObj.messages.length ? statusObj.messages.reduce((acu, msg) => acu + msg) : '')\n            });\n          }\n          return true;\n        } else if (this.testModeJobObj.jobStatus === 'esriJobFailed') {\n          this.isTestModePrinting = false;\n          throw statusObj;\n        } else if (statusObj.error) {\n          throw statusObj.error;\n        } else {\n          setTimeout(() => {\n            checking();\n          }, 1500);\n        }\n      }).catch((statusObj) => {\n        // this.alertService.setOption({\n        //   alertType: 'danger',\n        //   html: this.langSurveyData.customPrint.printErrMsg,\n        //   detail: statusObj.detail || statusObj.message || (statusObj.messages && statusObj.messages.length ? statusObj.messages.reduce((acu, msg) => acu + msg) : '')\n        // }).show();\n        this.reportService.showError({}, {\n          errorStr: this.translator?.customPrint?.printErrMsg,\n          detail: statusObj.detail || statusObj.message || (statusObj.messages && statusObj.messages.length ? statusObj.messages.reduce((acu, msg) => acu + msg) : '')\n        });\n        // template.printing = false;\n        this.isTestModePrinting = false;\n      });\n    };\n    checking();\n  }\n\n  // deprecated\n  // public stripscript(s) {\n  //   const pattern = new RegExp(\"[`~!@#$^&*()=|{}':;',\\\\[\\\\]<>/?\\\"~！@#￥……&*（）;—|{}【】《》‘；：”“'。，、？]\");\n  //   let rs = '';\n  //   for (let i = 0; i < s.length; i++) {\n  //     rs = rs + s.substr(i, 1).replace(pattern, '_');\n  //   }\n  //   return rs;\n  // }\n\n  render() {\n    return (\n      <Host>\n        <p>{this.supportShowCredits}</p>\n      {this.supportShowCredits && this.visibleConf.indexOf('showCredits') >= 0 ? \n        <div class=\"credits-info\">\n          <div class=\"show-credits has-spinner\">\n            {this.creditsInfo&&this.creditStatus==='estimating' ? \n            <Fragment>\n              <span class={`${this.featureCount<1||(!this.printTemplates.length) ? 'disabled' : ''}`} \n                onClick={() => this.estimateCredits()}>{`${this.translator?.common.calculating}`}\n              </span>\n              <calcite-loader label={this.translator?.common.calculating} inline=\"true\"></calcite-loader>\n            </Fragment>\n            : \n            <calcite-link disabled={`${this.featureCount<1||(!this.printTemplates.length) ? true : false}`} \n              onClick={() => this.estimateCredits()}>{`${this.translator?.customPrint?.creditsEstimate}`}\n            </calcite-link>}\n\n            {/* <span class={`${this.creditsInfo&&this.creditStatus==='estimating' ? '' : 'clickable-text'} ${this.featureCount<1||(!this.printTemplates.length) ? 'disabled' : ''}`} \n              onClick={() => this.estimateCredits()}>{this.creditsInfo&&this.creditStatus==='estimating'?`${this.translator?.common.calculating}`:`${this.translator?.customPrint?.creditsEstimate}`}\n            </span>\n            {this.creditsInfo&&this.creditStatus==='estimating' ? <calcite-loader label={this.translator?.common.calculating} inline=\"true\"></calcite-loader> : ''} */}\n          </div>\n          {this.creditsInfo&&this.creditStatus==='finished'&&this.featureCount>0&&this.printTemplates.length ?\n          <div class=\"credits-result-info\">\n            <span>{this.translator?.customPrint?.creditsRecordsCount.replace('${$recordsCount}', `${this.featureCount}`).replace('${$requiredCredits}', `${this.creditsInfo.cost}`)}</span>\n          </div> : ''}\n\n          {this.creditsInfo&&this.creditStatus==='changed'&&this.featureCount>0&&this.printTemplates.length ?         \n          <div class=\"credits-result-info\"> \n            <span>{this.translator?.customPrint?.credtisResultInvalid}</span>\n          </div> : ''}\n      </div> : ''}\n      \n\n      {/* Prevew sample template, deleted */}\n\n      <div class={`execute-btn ${!this.isPortal&&this.featureCount<=this.batchPrintLimitCount&&this.canShowEstimateCredits ? '' : 'portal-btn'}`}>\n        <a class=\"no-hover\">\n        <calcite-button id=\"submit-btn\" disabled={this.isPrinting || !this.buttonClickable() } onClick={() => this.executeCustomPrint()}>\n          {this.translator?.customPrint?.generate}\n          {this.isPrinting ? \n            <calcite-loader label={this.translator?.common?.loading} inline=\"true\"></calcite-loader>\n            : null\n          }\n          </calcite-button>\n          {(this.printTemplates || []).length > 0 || this.templateItemId || this.visibleConf?.indexOf('selectTemplate') >= 0 ?\n            null : \n            <calcite-notice open kind=\"danger\" scale=\"s\" width=\"auto\"> \n                <div slot=\"message\">{this.translator?.customPrint?.chooseTemplateNoOneYet1}</div>\n            </calcite-notice>\n          }\n        {/* <calcite-button id=\"submit-btn\" disabled={!this.buttonClickable || this.isPrinting} onClick={() => this.executeCustomPrint()}>{this.translator?.customPrint?.generate}</calcite-button> */}\n\n          {/* <survey123-ui-button id=\"generate-report-btn\" [nativeType]=\"'width: 100%;'\" [id]=\"'submit-btn'\"\n            [disabled]=\"!buttonClickable() || isPrinting\" [running]=\"isPrinting\" [hasSpinner]='true'\n            (onClick)=\"executeCustomPrint();\">{{'surveyData.customPrint.generate' | translate}}\n          </survey123-ui-button> */}\n\n          {/* <calcite-tooltip label=\"generate report\" reference-element=\"submit-btn\">\n            <span>{(!this.canPrintFeatureReport)?`${this.translator?.common.insufficientPreviligeTip}`:''}</span>\n          </calcite-tooltip> */}\n        </a>\n      </div>\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n  padding: 0 0.75rem;\n  .heading {\n    margin-inline: 0px;\n    margin-block: 1.25rem 1rem;\n    font-size: var(--calcite-font-size-0);\n    line-height: 1.25rem;\n    font-weight: var(--calcite-font-weight-medium);\n  }\n  .folder-label {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .conflict-name-setting{\n    padding-block: 0.5rem;\n    padding-inline: 0.75rem;\n    font-size: var(--calcite-font-size--1);\n    line-height: 1rem;\n  }\n}\n","import { Component, Host, Event, EventEmitter, Prop, State, h, Watch } from '@stencil/core';\nimport { TranslateService } from '../../services/translate.service';\nimport { getUserContent } from \"@esri/arcgis-rest-portal\";\nimport { UtilService } from '../../services/util.service';\nimport { ReportService } from '../../services/report.service';\nimport { StateService } from '../../services/state.service';\n\n@Component({\n  tag: 'report-settings',\n  styleUrl: 'report-settings.scss',\n  shadow: true,\n})\nexport class ReportSettings {\n  @Prop() mergeFiles: 'none' | 'nextPage' | 'continuous';\n  @Prop() outputFormat: string = 'word';\n  @Prop() conflictBehavior: 'rename' | 'replace' | 'fail' = 'rename'; \n\n  // @Prop() langObj: any;\n  @Prop() fileName: string;\n  @Watch('fileName')\n  onFileNameChange() {\n    this.fileNameChangeHandler({\n      target: {\n        value: this.fileName\n      }\n    })\n  }\n\n\n  @Prop() visibleElems: string[] = [];\n  @Event() fileOptionChange: EventEmitter<any>;\n  @Event() fileNameChange: EventEmitter<any>;\n  @Event() selectedFolderChange: EventEmitter<any>;\n  @Event() selectedFileFormatChange: EventEmitter<any>;\n  \n  private folders: any[];\n  private selectedFolder: any;\n  // private langCommon: any;\n  @State() translator: any;\n  @State() langReport: any;\n  @State() helperObj: any;\n  @State() featureCount: number;\n  @State() printTemplates: any[] = [];\n  private reportService: ReportService = ReportService.getService();\n  private state: StateService = StateService.getService();\n\n  componentWillLoad() {\n    return Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.translator = res;\n      this.langReport = res?.customPrint;\n      this.state.subscribe('locale-data-changed', (data) => {\n        this.translator = data;\n        this.langReport = data?.customPrint;\n      });\n      // this.langCommon = res.common;\n      this.printTemplates = this.reportService.getHelperObj('printTemplates') || [];\n      this.state.subscribe('print-templates-updated', (data) => {\n        this.printTemplates = data || [];\n      });\n      this.helperObj = this.reportService.getHelperObj();\n      this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n      this.state.subscribe('portal-info-update', () => {\n        this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n      });\n      this.state.subscribe('feature-count-updated', () => {\n        this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n      });\n\n      return this.getUserFolders();\n    }).catch((err) => {\n      this.reportService.showError(err);\n    })\n  }\n\n  /**\n   * merge mode change: 'none' | 'nextPage' | 'continuous'\n   * @param evt \n   */\n  public fileOptChangeHandler(evt) {\n    const cachedParam = this.reportService.getParamCache();\n    if (evt.detail !== 'split') {\n      cachedParam.mergeFiles = evt.detail;\n    } else {\n      delete cachedParam.mergeFiles;\n    }\n\n    this.fileOptionChange.emit(evt.detail);\n  }\n\n  /**\n   * file name change handler\n   * @param evt \n   */\n  public fileNameChangeHandler(evt) {\n    this.fileName = evt.target.value;\n    const outputReportName = this.fileName;\n\n    // Use outputReportName as outputPackageName if it doesn't have any variables and outputPackageName is not specified by user\n    // https://devtopia.esri.com/Beijing-R-D-Center/feature-report/issues/252\n    if (outputReportName) {\n      const placeholders = this.extractPlaceholders(outputReportName);\n      if (!(placeholders && placeholders.length)) {\n        this.reportService.setParamCache({\n          outputPackageName: outputReportName\n        });\n      }\n    }\n\n    this.reportService.setParamCache({\n      outputReportName: outputReportName\n    });\n    this.fileNameChange.emit(this.fileName);\n  }\n\n  /**\n   * selected folder changed\n   * @param evt \n   */\n  public selectedFolderChangeHandler() {\n    const uploadInfo = this.reportService.getParamCache('uploadInfo') || {\n      type: 'arcgis', // 'ArcGIS Online',\n      parameters: {\n      },\n      conflictBehavior: 'rename'\n    };\n    uploadInfo.parameters.folderId = this.selectedFolder.id === 'all' ? '' : this.selectedFolder.id;\n    this.reportService.setParamCache({\n      uploadInfo: uploadInfo\n    });\n\n    this.selectedFolderChange.emit(this.selectedFolder);\n  }\n  /**\n   * selected format handlder\n   * @param evt \n   */\n  public outputFormatChangeHandler(evt) {\n    this.outputFormat = evt.target.value;\n    this.reportService.setParamCache({\n      outputFormat: this.outputFormat\n    });\n    this.selectedFileFormatChange.emit(this.outputFormat)\n  }\n\n\n  /**\n   * get user folders\n   * @returns \n   */\n  public getUserFolders() {\n    const utilService: UtilService = UtilService.getService();\n    const userName = utilService.getUser()?.username;\n    const rootFolderStr = this.langReport?.saveToAGOFolderRoot.replace('${$username}', userName)\n    const params = Object.assign({owner: userName}, utilService.getBaseRequestOptions());\n    return getUserContent(params).then((res) => {\n      this.folders = [];\n      const folders = [];\n      // add root folder\n      folders.push({\n        username: userName,\n        id: 'all',\n        value: 'all',\n        title: rootFolderStr, // todo: use i18n string\n        label: rootFolderStr,\n        created: null\n      });\n      if (res && res.folders && res.folders.length) {\n        res.folders.forEach((folder) => {\n          folder['label'] = folder.title;\n          folder['value'] = folder.id;\n        });\n        this.folders = folders.concat(res.folders);\n      } else {\n        this.folders = folders;\n      }\n        // if the folder name is the same as the survey title, set it as the default folder\n      // this.selectedFolder = this.folders.find((fd) => {\n      //   return fd.title === 'Survey-' + this.survey.title;\n      // }) || this.folders[0];\n      this.selectedFolder =  this.folders[0];\n      return this.folders;\n    });\n  }\n\n    // remove placeholders in output file name expression\n  public extractPlaceholders(exp: string) {\n    exp = exp || '';\n\n    const matches = exp.match(/\\$[^{$]*?{[^}]*?.*?}/g),\n      returnedMatches = [];\n    if (matches) {\n      matches.forEach((match) => {\n        // if not duplicate, push it\n        if (returnedMatches.indexOf(match) === -1) {\n          returnedMatches.push(match);\n        }\n      });\n    }\n    return returnedMatches;\n  }\n\n  /**\n   * confilict behavior changed.\n   * @param evt \n   */\n  public changeConflictBehavior(evt) {\n    this.conflictBehavior = evt.target.value;\n    const uploadInfo = this.reportService.getParamCache('uploadInfo') || {\n      type: 'arcgis',\n      parameters: {\n      },\n      conflictBehavior: 'rename'\n    };\n    uploadInfo.conflictBehavior = this.conflictBehavior;\n    this.reportService.setParamCache({\n      uploadInfo: uploadInfo\n    });\n  }\n\n\n  render() {\n    return (\n      <Host>\n        <div class=\"heading\">\n          {this.translator?.customPrint?.resultSettingsLabel1}\n        </div>\n        {this.visibleElems.indexOf('fileOptions') < 0 ?\n          null : <file-option-chooser fileOption={this.mergeFiles} onFileOptionChange={(evt) =>{this.fileOptChangeHandler(evt)}}></file-option-chooser>\n        }\n        \n\n        {/* report name */}\n        {this.visibleElems.indexOf('reportName') < 0 ?\n          null : \n          <calcite-label>\n            {this.translator?.customPrint?.saveToAGOItemName}\n            <calcite-input-text placeholder={this.translator?.customPrint?.saveToAGOItemName} value={this.fileName} onCalciteInputTextChange={(evt) => this.fileNameChangeHandler(evt)}></calcite-input-text>\n          </calcite-label>\n        }\n\n        {this.visibleElems.indexOf('saveToAGSAccount') < 0 ? null :\n          <calcite-label>\n            <div class=\"folder-label\">\n              <span>{this.translator?.customPrint?.saveToAGOFolder}</span>\n              <calcite-dropdown width=\"l\" scale=\"m\" close-on-select-disabled type=\"click\" width-scale=\"l\">\n                <calcite-button slot=\"trigger\" icon-start=\"gear\" appearance=\"transparent\"></calcite-button>\n                <calcite-dropdown-group>\n                  <div class=\"conflict-name-setting\">   \n                     {/* there are two bugs in the  calcite-radio-button-group component: 1. the disabled attribute won't work when changing it dyanamically. 2. the onCalciteRadioButtonGroupChange event won't return value              */}\n                    <calcite-radio-button-group name=\"conflict-name-options\" layout=\"vertical\">\n                        <calcite-label layout=\"inline\">\n                        {this.translator?.customPrint?.nameConflictOptLabel}        \n                          <calcite-icon id=\"info-icon\" icon=\"question\" scale=\"s\"> </calcite-icon>\n                          <calcite-tooltip label={this.translator?.customPrint?.nameConflictOptLabel} reference-element=\"info-icon\">\n                              <span>{this.translator?.customPrint?.nameConflictOptLabel}</span>\n                          </calcite-tooltip>\n                        </calcite-label>\n                        <calcite-label layout=\"inline\">\n                            <calcite-radio-button value=\"rename\" checked={this.conflictBehavior=='rename'} onCalciteRadioButtonChange={(evt) => this.changeConflictBehavior(evt)}></calcite-radio-button>\n                            {this.translator?.customPrint?.nameConflictOptRename}\n                        </calcite-label>\n                        <calcite-label layout=\"inline\">\n                            <calcite-radio-button value=\"replace\" checked={this.conflictBehavior=='replace'} onCalciteRadioButtonChange={(evt) => this.changeConflictBehavior(evt)}></calcite-radio-button>\n                            {this.translator?.customPrint?.nameConflictOptReplace}\n                        </calcite-label>\n                        <calcite-label layout=\"inline\">\n                            <calcite-radio-button value=\"fail\" checked={this.conflictBehavior=='fail'} onCalciteRadioButtonChange={(evt) => this.changeConflictBehavior(evt)}></calcite-radio-button>\n                            {this.translator?.customPrint?.nameConflictOptSkip}\n                        </calcite-label>\n                    </calcite-radio-button-group>\n                  </div>\n                </calcite-dropdown-group>\n          </calcite-dropdown>\n            </div>\n            {/* todo: add a tooltip: saveToAGOItemNameTip_i18n */}\n            <calcite-tooltip label={this.helperObj.canCreateItem === false ? this.langReport.saveToAGONoCreatePrivilegeTip : ''} reference-element=\"folder-selector\">\n              <span>{this.helperObj.canCreateItem === false ? this.langReport.saveToAGONoCreatePrivilegeTip : ''}</span>\n            </calcite-tooltip>\n            <calcite-combobox id=\"folder-selector\" disabled={this.helperObj.canCreateItem === false} placeholder={this.translator?.customPrint?.saveToAGOFolder} selection-mode=\"single-persist\" clearDisabled=\"true\" maxItems=\"7\" value={this.selectedFolder} onCalciteComboboxChange={() => {this.selectedFolderChangeHandler()}}>\n              {(this.folders || []).map((folder) => {\n                return <calcite-combobox-item value={folder.value} text-label={folder.label} selected={folder.value===this.selectedFolder?.id}></calcite-combobox-item>;\n              })}\n            </calcite-combobox>\n          </calcite-label>\n        }\n\n        {this.visibleElems.indexOf('outputFormat') < 0 ? null :\n          <calcite-label>\n            {this.translator?.customPrint?.outputFormat}\n            <calcite-combobox placeholder={this.translator?.customPrint?.outputFormat} selection-mode=\"single-persist\" clearDisabled=\"true\" value={this.outputFormat} onCalciteComboboxChange={(evt) => this.outputFormatChangeHandler(evt)}>\n              <calcite-combobox-item value='docx' selected={this.outputFormat==='docx'} text-label={this.translator?.customPrint?.outputFormatDocx}></calcite-combobox-item>\n              <calcite-combobox-item value='pdf' selected={this.outputFormat==='pdf'} text-label={this.translator?.customPrint?.outputFormatPdf}></calcite-combobox-item>\n            </calcite-combobox>\n          </calcite-label>\n        }\n\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  * {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n  $color-green-forest: #31872E;\n  $color-green-parsley: #206A1E;\n  $color-green-york: #99CA8F;\n  $color-green-tusk: #DFF7D0;\n  $color-green-moss: #B9DAA5;\n  $color-green-surf: #B8DCC6;\n  $color-green-edgewater: #B7DCC7;\n  $color-green-deYork: #7BC58F;\n  $color-green-shamrock: #3CC98D;\n  $color-green-smoke: #ABB27B;\n  $color-green-deco: #C9D479;\n  $color-green-sprout: #B9D9A5;\n  $color-green-parsley: #165A13;\n  $color-green-limeade: #6EA400;\n  $color-green-sushi: #72BC3A;\n  $color-white: #ffffff;\n  $color-white-ice:#DBF2F9;\n  $color-white-ice2:#E1F7FA;\n  $color-white-smoke:#F6F6F6;\n  $color-white-lilac:#E6EAF6;\n  $color-black: #000000;\n  $color-black-haze:#F7F8F8;\n  $color-shark:#2E2F30;\n  $color-jumbo:#838388;\n  $color-gray-emperor:#505050;\n  $color-gray-mine-shaft:#333333;\n  $color-gray-dove: #666666;\n  $color-gray-dusty: #999999;\n  $color-gray-alto: #CFCFCF;\n  $color-gray-iron: #F7F8F8;\n  $color-gray-gallery: #EEEEEE;\n  $color-gray-god: #161616;\n  $color-gray-mercury: #E8E8E8;\n  $color-gray-porcelain: #E6E8EA;\n  $color-gray-haze: #EDF0F0;\n  $color-gray-alabaster: #F9FAFA;\n  $color-gray-squeeze: #ECF4F8;\n  $color-gray-waterloo: #858590;\n  $color-gray-wildSand: #F4F4F4;\n  $color-gray-concrete: #F2F2F2;\n  $color-gray-athens:#EFF0F5;\n  $color-gray-french: #BABDC9;\n  $color-gray-selago: #F5F7FD;\n  $color-gray-dusty : #979797;\n  $color-blue-allPorts: #007D9F;\n  $color-blue-linkWater: #ADDEEC;\n  $color-blue-blizzardBlue: #add7f0;\n  $color-blue-eastern: #1C99BC;\n  $color-blue-Science: #0072DE;\n  $color-blue-spindle: #C8E5EF;\n  $color-blue-lochinvar: #2A8A91;\n  $color-blue-fountainBlue: #51B4BB;\n  $color-blue-halfBaked: #7FCACB;\n  $color-blue-breakerBay: #6CACAC;\n  $color-blue-iceberg: #E1F0F5;\n  $color-blue-jaggedIce:#C7E3EC;\n  $color-blue-havelock: #4A90E2;\n  $color-blue-Lochmara:#0079c1;\n  $color-blue-bahamaBlue: #005e95;\n  $color-blue-lilyWhite: #EAFAFF;\n  $color-blue-matisse:#14728D;\n  $color-red-flamePea: #D65940;\n  $color-red-potPourri: #F7EBE8;\n  $color-red-terracotta: #E06D56;\n  $color-red-falcon: #755465;\n  $color-red-wewak: #F59C9B;\n  $color-red-salmon: #FF7877;\n  $color-red-thunderbird: #BE3B20;\n  $color-orange-cashmere: #E4C0A3;\n  $color-orange-orangeRoughy: #CC5316;\n  $color-orange-fieryOrange: #A34211;\n  $color-orange-meteor: #BC7610;\n  $color-orange-flush: #FF8000;\n  $color-orange-tangelo: #F5A118;\n  $color-yellow-equator: #DFA95B;\n  $color-yellow-grandis: #FFD682;\n  $color-yellow-dixie: #E5A71C;\n  $color-yellow-butterCup: #F5A017;\n  $color-yellow-peachCream: #FFF1DD;\n  $color-yellow-lemon: #F8E71C;\n  $color-blue-cornflower :#66AFE9;\n  $color-cyan-water :#C9E6EF;\n  $font-weight7: 700;\n  * {\n    font-size: 14px;\n  }\n  display: block;\n  \n  .banner {\n    cursor: pointer;\n    // padding: 0 20px;\n    font-weight: $font-weight7;\n    line-height: 60px;\n\n    a {\n      cursor: pointer;\n      float: inline-start;\n      transform: rotateZ(180deg);\n      top: 16px;\n\n      // :host-context(html[dir='rtl']) & {\n      //     transform: none;\n      // }\n    }\n\n    span {\n      float: inline-start;\n      padding-left: 10px;\n\n      // :host-context(html[dir='rtl']) & {\n      //     padding-right: 10px;\n      //     padding-left: unset;\n      // }\n    }\n  } \n  .no-tasks {\n    // padding: 0 30px;\n    margin-bottom: 20px;\n  }\n  .list {\n    height: calc(100% - 60px);\n\n    padding: 0 0.75rem;\n    overflow: auto;\n    // padding: 0 20px;\n    width: 100%;\n    ul {\n      padding-left: 0;\n\n      // :host-context(html[dir='rtl']) & {\n      //     padding-right: 0;\n      //     padding-left: unset;\n      // }\n\n      li {\n          list-style: none;\n          margin-bottom: 15px;\n          border-radius: 2px;\n      }\n    }\n    p.job-date {\n        color: $color-gray-dusty;\n        line-height: 40px;\n        margin-bottom: 0;\n    }\n  }\n}\n\n:host-context([dir=\"rtl\"]) {\n  .banner {\n    a {\n      transform: none!important;\n    }\n    span {\n      padding-right: 10px;\n      padding-left: unset!important;\n    }\n  }\n  list ul{\n    padding-right: 0;\n    padding-left: unset!important;\n  }\n}","import { Component, Host, Event, Prop, EventEmitter, State,  h, Fragment } from '@stencil/core';\nimport { ReportService } from '../../services/report.service';\nimport { TranslateService } from '../../services/translate.service';\nimport { StateService } from '../../services/state.service';\nimport { UtilService } from '../../services/util.service';\n\n@Component({\n  tag: 'task-list',\n  styleUrl: 'task-list.scss',\n  shadow: true,\n})\nexport class ReportTaskList {\n  @Event() goBackClicked: EventEmitter;\n  @State() langReport: any;\n  @State() langCommon: any;\n  @State() langTasks: any;\n  @State() state: 'loading' | 'ready' = 'loading';\n  @Prop() jobs: any[];\n  public recentTasksCount: number = 10;\n  private jobList: any;\n  private reportService: ReportService = ReportService.getService();\n  private stateService: StateService = StateService.getService();\n  private utilService: UtilService = UtilService.getService();\n\n  componentWillLoad() {\n    this.state = 'loading';\n    Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.langReport = res?.customPrint;\n      this.langCommon = res?.common;\n      this.langTasks = res?.customPrint.recentTasks;\n      this.stateService.subscribe('locale-data-changed', (data) => {\n        this.langReport = data?.customPrint;\n        this.langCommon = data?.common;\n        this.langTasks = data?.customPrint.recentTasks;\n      });\n      if (this.jobs?.length) {\n        return {\n          jobs: this.jobs\n        };\n      }\n      return this.reportService.queryJobs(true)\n    })\n    .then((res) => {\n      this.jobList = res;\n      this.jobs = this.jobList?.jobs || [];\n      this.state = 'ready';\n      return this.jobList;\n    })\n  }\n\n  public jobSplitDate(job: any, index: number) {\n    if (!this.jobs || index < 0 || index >= this.jobs.length || !job) {\n      return null;\n    }\n    const curDate = this.utilService.formatDateTime(job.submitted, 'date');\n    if (index === 0) {\n      return curDate;\n    }\n    if (this.jobs[index - 1]) {\n      const lastDate = this.utilService.formatDateTime(this.jobs[index - 1].submitted, 'date')\n      if (lastDate === curDate) {\n        return null;\n      } else {\n        return curDate;\n      }\n    }\n    return null;\n  }\n\n  private goBack() {\n    this.goBackClicked.emit();\n  }\n\n  private removeJob(evt) {\n    const job = evt.detail;\n    if (this.jobs) {\n      const targetIdx = this.jobs.findIndex((jobItem) => {\n        return jobItem.jobId === job.jobId;\n      })\n      this.jobs.splice(targetIdx, 1);\n      this.jobs = [].concat(this.jobs);\n    }\n  }\n\n\n  render() {\n    return (\n      <Host>        \n          <div class=\"banner\">\n          <calcite-action onClick={() => this.goBack()} text={this.langTasks?.label} icon=\"chevrons-left\" text-enabled></calcite-action>\n\n            {/* <calcite-link onClick={() => this.goBack()}>\n              <calcite-icon icon=\"chevrons-left\" text-label={this.langTasks?.label}></calcite-icon>\n                {this.langTasks?.label}\n            </calcite-link> */}\n          </div>\n          { this.state ==='ready' && this.langReport && this.langCommon&& this.langTasks && this.jobList ?           \n            <div class=\"list\">\n              { this.jobs.length<1 ? \n                <div class=\"no-tasks\">{this.langTasks.noTaskDesc}</div> \n                : ''\n              }\n              { this.jobs.length ? \n                <Fragment>\n                  <div class=\"no-tasks\">{this.langTasks.limitationDesc.replace('${$maxJobCount}', `${this.recentTasksCount}`)}</div>\n                  <ul>\n                    {this.jobs.map((job, index) => {\n                      return <li key={'li_' + job.jobId}>\n                        { this.jobSplitDate(job, index) ? <p class=\"job-date\">{this.jobSplitDate(job, index)}</p> : ''}\n                        <task-info key={job.jobId} job={job} onJobRemoved={(evt) => this.removeJob(evt)}></task-info>\n                      </li>\n                    })}\n                  </ul>\n                </Fragment> : ''\n            }\n            </div>\n            :\n            <div class=\"loading\">\n              <calcite-loader label={this.langCommon?.loading}></calcite-loader>\n            </div> \n          }\n\n          \n                \n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n  padding: 0 0.75rem;\n  calcite-notice {\n    margin-top: 6px;\n  }\n  .heading {\n    margin-inline: 0px;\n    margin-block:  1.25rem 1rem;\n    font-size: var(--calcite-font-size-0);\n    line-height: 1.25rem;\n    font-weight: var(--calcite-font-weight-medium);\n  }\n}\n","import { Component, Host, Prop, State, Watch, Element, Event, EventEmitter, h } from '@stencil/core';\nimport { PropsService } from '../../services/props.service';\nimport { ReportService } from '../../services/report.service';\n// import { TranslateService } from '../../services/translate.service';\nimport { StateService } from '../../services/state.service';\nimport { TranslateService } from '../../services/translate.service';\n\n@Component({\n  tag: 'template-chooser',\n  styleUrl: 'template-chooser.scss',\n  shadow: true,\n})\nexport class TemplateChooser {\n  @Prop() langObj: any;  \n  @Prop() selectedTemplateId: any;  \n  @Watch('selectedTemplateId')\n  selectedTemplateIdChanged() {\n    this.reportService.setParamCache({\n      templateItemId: this.selectedTemplateId\n    });\n  }\n\n  @Prop() templateIds: string;\n  @Watch('templateIds')\n  templateIdsChanged() {\n    this.init();\n  }\n  \n  @Element() element: HTMLElement;\n  @Event() selectedTemplateChange: EventEmitter<any>;\n  @State() templates: any[] =[];\n  @State() translator: any;\n  private reportService: ReportService = ReportService.getService();\n  private stateService: StateService = StateService.getService();\n\n  componentWillLoad() {\n    this.reportService.setParamCache({\n      templateItemId: this.selectedTemplateId\n    });\n    return Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.translator = res;\n      this.stateService.subscribe('locale-data-changed', (data) => {\n        this.translator = data;\n      });\n      return this.init();\n    });\n  }\n\n  init() {\n    const globalProps = PropsService;\n    const reportService: ReportService = ReportService.getService();\n    return Promise.resolve(true).then(() => {\n      if (this.templateIds === undefined) {\n        return reportService.getReportTemplates(globalProps.surveyItemId);\n      } else {\n        return reportService.getReportTemplates(globalProps.surveyItemId, {templateIds: this.templateIds});\n      }\n    })\n    .then((templates) => {\n      this.templates = templates;\n      this.stateService.notifyDataChanged('print-templates-updated', {value: templates});\n      this.reportService.setHelperObj({\n        printTemplates: templates\n      });\n      // use the first one as default, if the selected template id is not provided\n      if (!this.selectedTemplateId && templates.length) {\n        this.selectedTemplateId = templates[0].id;\n        this.reportService.setParamCache({\n          templateItemId: this.selectedTemplateId\n        });\n        this.selectedTemplateChange.emit(this.selectedTemplateId);\n      }\n      return true;\n    }).catch((err) => {\n      this.reportService.showError(err);\n    })\n  }\n\n  /**\n   * \n   * @param evt \n   */\n  public selectedTemplateChangeHandler(evt) {\n    this.reportService.setParamCache({\n      templateItemId: evt.target.value\n    });\n\n    this.selectedTemplateChange.emit(evt.target.value);\n  }\n\n  render() {\n    return (\n      <Host>\n        {/* <calcite-label> */}\n          <div class=\"heading\">{this.translator?.customPrint.chooseTemplateLabel1}</div>\n          <calcite-combobox placeholder={this.translator?.customPrint.chooseTemplateLabel1} selection-mode=\"single-persist\" clearDisabled=\"true\" value={this.selectedTemplateId} onCalciteComboboxChange={(evt) => {this.selectedTemplateChangeHandler(evt)}}>\n            {(this.templates || []).map((template) => {\n              return <calcite-combobox-item value={template.id} text-label={template.title} selected={template.id===this.selectedTemplateId}></calcite-combobox-item>;\n            })}\n          </calcite-combobox>\n          {(this.templates || []).length > 0 ?\n            null : \n            <calcite-notice open kind=\"danger\" scale=\"s\" width=\"auto\"> \n                <div slot=\"message\">{this.translator?.customPrint.chooseTemplateNoOneYet1}</div>\n            </calcite-notice>\n          }\n        {/* </calcite-label> */}\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n"],"mappings":"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","ignoreList":[]}