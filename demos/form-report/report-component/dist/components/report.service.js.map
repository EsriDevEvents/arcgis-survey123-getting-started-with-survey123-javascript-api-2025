{"file":"report.service.js","mappings":"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","names":[],"sources":["node_modules/@esri/arcgis-rest-request/dist/esm/utils/append-custom-params.js","node_modules/@esri/arcgis-rest-feature-service/dist/esm/getLayer.js","node_modules/@esri/arcgis-rest-feature-service/dist/esm/query.js","src/services/report.service.ts"],"sourcesContent":["/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper for methods with lots of first order request options to pass through as request parameters.\n */\nexport function appendCustomParams(customOptions, keys, baseOptions) {\n    const requestOptionsKeys = [\n        \"params\",\n        \"httpMethod\",\n        \"rawResponse\",\n        \"authentication\",\n        \"portal\",\n        \"fetch\",\n        \"maxUrlLength\",\n        \"headers\"\n    ];\n    const options = Object.assign(Object.assign({ params: {} }, baseOptions), customOptions);\n    // merge all keys in customOptions into options.params\n    options.params = keys.reduce((value, key) => {\n        if (customOptions[key] ||\n            typeof customOptions[key] === \"boolean\" ||\n            (typeof customOptions[key] === \"number\" &&\n                customOptions[key] === 0)) {\n            value[key] = customOptions[key];\n        }\n        return value;\n    }, options.params);\n    // now remove all properties in options that don't exist in IRequestOptions\n    return requestOptionsKeys.reduce((value, key) => {\n        if (options[key]) {\n            value[key] = options[key];\n        }\n        return value;\n    }, {});\n}\n//# sourceMappingURL=append-custom-params.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request, cleanUrl } from \"@esri/arcgis-rest-request\";\n/**\n * Layer (Feature Service) request. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/layer-feature-service-.htm) for more information.\n *\n * ```js\n * import { getLayer } from '@esri/arcgis-rest-feature-service';\n * //\n * getLayer({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0\"\n * })\n *   .then(response) // { name: \"311\", id: 0, ... }\n * ```\n *\n * @param options - Options for the request.\n * @returns A Promise that will resolve with the addFeatures response.\n */\nexport function getLayer(options) {\n    return request(cleanUrl(options.url), options);\n}\n//# sourceMappingURL=getLayer.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request, cleanUrl, appendCustomParams } from \"@esri/arcgis-rest-request\";\n/**\n * Get a feature by id.\n *\n * ```js\n * import { getFeature } from '@esri/arcgis-rest-feature-service';\n *\n * const url = \"https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/Landscape_Trees/FeatureServer/0\";\n *\n * getFeature({\n *   url,\n *   id: 42\n * }).then(feature => {\n *  console.log(feature.attributes.FID); // 42\n * });\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the feature or the [response](https://developer.mozilla.org/en-US/docs/Web/API/Response) itself if `rawResponse: true` was passed in.\n */\nexport function getFeature(requestOptions) {\n    const url = `${cleanUrl(requestOptions.url)}/${requestOptions.id}`;\n    // default to a GET request\n    const options = Object.assign({ httpMethod: \"GET\" }, requestOptions);\n    return request(url, options).then((response) => {\n        if (options.rawResponse) {\n            return response;\n        }\n        return response.feature;\n    });\n}\n/**\n * Query a feature service. See [REST Documentation](https://developers.arcgis.com/rest/services-reference/query-feature-service-layer-.htm) for more information.\n *\n * ```js\n * import { queryFeatures } from '@esri/arcgis-rest-feature-service';\n *\n * queryFeatures({\n *   url: \"http://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer/3\",\n *   where: \"STATE_NAME = 'Alaska'\"\n * })\n *   .then(result)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the query response.\n */\nexport function queryFeatures(requestOptions) {\n    const queryOptions = appendCustomParams(requestOptions, [\n        \"where\",\n        \"objectIds\",\n        \"relationParam\",\n        \"time\",\n        \"distance\",\n        \"units\",\n        \"outFields\",\n        \"geometry\",\n        \"geometryType\",\n        \"spatialRel\",\n        \"returnGeometry\",\n        \"maxAllowableOffset\",\n        \"geometryPrecision\",\n        \"inSR\",\n        \"outSR\",\n        \"gdbVersion\",\n        \"returnDistinctValues\",\n        \"returnIdsOnly\",\n        \"returnCountOnly\",\n        \"returnExtentOnly\",\n        \"orderByFields\",\n        \"groupByFieldsForStatistics\",\n        \"outStatistics\",\n        \"returnZ\",\n        \"returnM\",\n        \"multipatchOption\",\n        \"resultOffset\",\n        \"resultRecordCount\",\n        \"quantizationParameters\",\n        \"returnCentroid\",\n        \"resultType\",\n        \"historicMoment\",\n        \"returnTrueCurves\",\n        \"sqlFormat\",\n        \"returnExceededLimitFeatures\",\n        \"f\"\n    ], {\n        httpMethod: \"GET\",\n        params: Object.assign({ \n            // set default query parameters\n            where: \"1=1\", outFields: \"*\" }, requestOptions.params)\n    });\n    return request(`${cleanUrl(requestOptions.url)}/query`, queryOptions);\n}\n//# sourceMappingURL=query.js.map","\nimport { PropsService } from './props.service';\nimport { StateService } from './state.service';\nimport { UtilService } from './util.service';\nimport { getItem, getRelatedItems } from \"@esri/arcgis-rest-portal\";\nimport { queryFeatures, getLayer } from '@esri/arcgis-rest-feature-service';\nimport { TranslateService } from './translate.service';\n\n\nexport enum EsriJobStatusType {\n  submitted = 'esriJobSubmitted',\n  executing = 'esriJobExecuting',\n  succeeded = 'esriJobSucceeded',\n  partialSucceeded = 'esriJobPartialSucceeded',\n  failed = 'esriJobFailed',\n  cancelled = 'esriJobStatusCancelled'\n}\n\nexport class ReportService {\n\n  static service: ReportService;\n  public checkingList: any[] = [];  // the job id list which is not complete, should to be checked\n  public isRequestingTasks: boolean = false;\n  public jobList: any = {};\n  private queryJobTimmer: any;\n  private sessionJobs: any[] = [];  // seems this is not needed.\n  private templateItemsCache: any[] = [];\n  private stateService: StateService = StateService.getService();\n\n  // the parameters cache that will be sent to generate report\n  private paramCache: any = {\n\n  };\n\n  // some assosiate data for report, like the feature count\n  private helperObj: {\n    featureCount?: number,\n    surveyIsInvalid?: boolean,\n    canCreateItem?: boolean\n  }\n\n  /**\n   * get Service\n   * @returns \n   */\n  static getService(): ReportService {\n    if (!this.service) {\n      this.service = new ReportService();\n    }\n    return this.service;\n  }\n\n\n  /**\n   * get the report parameter cache\n   * @param key \n   */\n  public getParamCache(key?: string) {\n    if (!key) {\n      return this.paramCache;\n    }\n    return this.paramCache ? this.paramCache[key] : null;\n  }\n\n  /**\n   * set the report parameter cache\n   * @param obj \n   */\n  public setParamCache(obj: any) {\n    if (!obj) {\n      return;\n    }\n    this.paramCache = Object.assign(this.paramCache || {}, obj);\n  }\n\n  public initParamCache() {\n\n  }\n\n\n  /**\n   * get the report parameter cache\n   * @param key \n   */\n  public getHelperObj(key?: string) {\n    if (!key) {\n      return this.helperObj;\n    }\n    if (!this.helperObj) {\n      return null;\n    }\n    return this.helperObj[key];\n  }\n\n  /**\n   * set the report parameter cache\n   * @param obj \n   */\n  public setHelperObj(obj: any) {\n    if (!obj) {\n      return;\n    }\n    this.helperObj = Object.assign(this.helperObj || {}, obj);\n  }\n\n  /**\n   * getReportTemplates\n   * @param surveyItemId \n   */\n  public getReportTemplates(surveyItemId: string, options?: {\n    templateIds?: string;\n  }) {\n    options = options || {};\n    let hasTemplateIds = false;\n    if ('templateIds' in options && options.templateIds !== undefined) {\n      hasTemplateIds = true;\n    }\n    const templateIds = options?.templateIds || '';\n    const cache = this.templateItemsCache || [];\n    // TBD：\n    // if (!surveyItemId) {\n    //   return Promise.resolve([]);\n    // }  \n    \n    const utilService: UtilService = UtilService.getService();    \n    // check if the portal support survey2data relation\n    return Promise.resolve(true)\n    .then(() => {\n      const support = utilService.supportFeatureReport();\n      if (!support) {\n        throw new Error('This portal does not support custom report.');\n      }\n      return true;\n    })\n    .then(() => {\n      if (hasTemplateIds) {\n        // get all the template id item info\n        const requests = [];\n        templateIds.split(',').forEach((id) => {\n          const existingItem = cache.find((item) => {\n            return item.id === id;\n          });\n          let req = null;\n          if (existingItem) {\n            req = Promise.resolve(existingItem);\n          } else {\n            req = getItem(id, utilService.getBaseRequestOptions()).then((itemJson) => {\n              return itemJson\n            }).catch(() => {\n              console.log('Cannot get item info for the report template with id' + id);\n              return {};\n            });\n          }\n          requests.push(req);\n        });\n        return Promise.all(requests).then((resp) => {\n          return {\n            relatedItems: resp\n          };\n        })\n      } else if(surveyItemId && !this.getHelperObj('surveyIsInvalid')) {\n        const params: any = Object.assign({id: surveyItemId, relationshipType: 'Survey2Data'}, utilService.getBaseRequestOptions());\n        return getRelatedItems(params);\n      } else {\n        return {\n          relatedItems: []\n        }\n      }\n\n    })\n    .then((res: any) => {\n      if (!res || res.error) {\n        throw new Error('Failed to get related templates');\n      }\n\n      this.templateItemsCache = res.relatedItems || [];\n      const config = {\n        typeKeyword: 'Print Template',\n        type: 'Microsoft Word'\n      };\n      const results = res.relatedItems.filter((item) => {\n        // only type and typekeywords is match\n        return item.type === config.type && item.typeKeywords.indexOf(config.typeKeyword) !== -1;\n      });\n      return results || [];\n    })\n    .then((items) => {\n      const printTemplates = [];\n\n      items.forEach((item) => {\n        const templateUrl = this.getCustomPrintingFileUrl(item.id);\n        const template = {\n          id: item.id,\n          name: item.name,\n          title: item.title,\n          summary: item.snippet,\n          modified: new Date(item.modified),\n          url: templateUrl,\n          typeKeywords: item.typeKeywords,\n          type: item.type\n          // isInnerWorking: false\n        };\n        printTemplates.push(template);\n      });\n      \n      if (hasTemplateIds) {\n        printTemplates.sort((a, b) => {\n          if (a.modified < b.modified) {\n            return 1;\n          } else {\n            return -1;\n          }\n        });\n      }\n\n\n      return printTemplates;\n    });\n  }\n\n  /**\n   * get layer json\n   * @param layerUrl \n   */\n  public getLayerJson(layerUrl?: string) {\n    layerUrl = layerUrl || PropsService.featureLayerUrl\n    // read from cache\n    const cacheLayerJsons = this.getHelperObj('layerJsons') || []\n    const cacheLayer = cacheLayerJsons.find((layerObj) => {\n      return layerObj.url === layerUrl && layerObj.json;\n    })\n    if (cacheLayer) {\n      return Promise.resolve(cacheLayer.json);\n    }\n    return getLayer({\n      url: PropsService.featureLayerUrl,\n      authentication: PropsService.token\n    }).then((layerJson) => {\n      cacheLayerJsons.push({\n        url: layerUrl,\n        json: layerJson\n      });\n      this.setHelperObj({layerJsons: cacheLayerJsons});\n      return layerJson;\n    })\n  }\n\n  /**\n   * get feature count\n   * @returns \n   */\n  public getFeatureCount() {\n    const queryParms = JSON.parse(PropsService.queryParameters);\n    delete queryParms.orderByFields; // because the feature report's orderByFields is not the same with the rest api's\n    /**\n     * query features\n     */\n    const params = Object.assign({\n      url: PropsService.featureLayerUrl,\n      authentication: PropsService.token,    \n      returnCountOnly: true\n      }, queryParms);\n\n    const where = 'where' in params ? params.where : null\n    const objectIds = 'objectIds' in params ? params.objectIds: null\n    const additionalParams: any  = {\n\n    };\n    if (where !== null) {\n      additionalParams.where = where;\n    }\n    if (objectIds != null) {\n      additionalParams.objectIds = objectIds;\n    }\n    if (!objectIds && !where) {\n      additionalParams.where = '1<>1'; // if no objectIds and where, set where as '1<>1' to avoid requesting error\n      delete additionalParams.objectIds\n    }\n\n    params.params = additionalParams;\n    delete params.where;\n    delete params.objectIds;\n\n    return queryFeatures(params)\n    .then((result: any) => {\n      let count = result.count;\n      if (queryParms.resultRecordCount < count) {\n        count = queryParms.resultRecordCount\n      }\n      this.setHelperObj({\n        featureCount: count\n      });\n      this.stateService.notifyDataChanged('feature-count-updated');\n      return;\n    }).catch((e) => {\n      this.manageError(e, 'featureLayerUrl');\n  });\n}\n\n  /**\n   * get custom printing file url (e.g. word)\n   * @param itemId: String\n   * @return string\n   */\n  public getCustomPrintingFileUrl(itemId: string): string {\n    return `${PropsService.portalUrl}/sharing/rest/content/items/${itemId}/data?token=${PropsService.token}`;\n  }\n\n  /**\n   * estimate report costs  \n   * @param options\n   */\n  public estimateReportCosts(options: any) {\n    const defautlParams = {\n      portalUrl: PropsService.portalUrl,\n      token: PropsService.token,\n      f: 'json'\n    };\n    const params = Object.assign(defautlParams, options || {});\n    // if (this.isInternalTest()) {\n    //   params['isInternalTest'] = true;\n    // }\n\n    const body = new URLSearchParams();\n    Object.keys(params).forEach((k) => {\n      const value = params[k];\n      body.append(k, value);\n    });\n    const url = `${PropsService.apiUrl}/estimateCredits`;\n    return fetch(url, {\n      method: 'POST',\n      headers: this._generateRequestHeaders(),\n      body\n    })\n    .then((res) => {\n      return res.json();\n    });\n  }\n\n  /**\n   * print report\n   */\n  public executeReport(options: any) {\n    const locale = PropsService.locale || 'en';\n    const defautlParams = {\n      // outputFormat: 'docx',\n      portalUrl: PropsService.portalUrl,\n      utcOffset: '||' + this._getLocalTimezoneOffset(),\n      locale: '||' + locale,\n      token: PropsService.token,\n      f: 'json'\n    };\n    const params = Object.assign(defautlParams, options || {});\n    if ((!params.uploadInfo || params.uploadInfo === 'null') && Object.prototype.hasOwnProperty.call(params, 'uploadInfo')) {\n      delete params.uploadInfo;\n    }\n    // if (this.isInternalTest()) {\n    //   params['isInternalTest'] = true;\n    // }\n\n    const body = new URLSearchParams();\n    Object.keys(params).forEach((k) => {\n      const value = params[k];\n      body.append(k, value);\n    });\n\n    const url = `${PropsService.apiUrl}/createReport/submitJob`;\n    return fetch(url, {\n      method: 'POST',\n      headers: this._generateRequestHeaders(),\n      body\n    })\n    .then((res) => {\n      return res.json();\n    });\n  }\n\n    /**\n   * createSampleReport\n   * @param options\n   */\n    public createSampleReport(options: any) {\n      const locale = PropsService.locale || 'en';\n\n      const defautlParams = {\n        // outputFormat: 'docx',\n        portalUrl: PropsService.portalUrl,\n        utcOffset: '||' + this._getLocalTimezoneOffset(),\n        locale: '||' + locale,\n        token: PropsService.token,\n        f: 'json'\n      };\n      \n      const params = Object.assign(defautlParams, options || {});\n      const body = new URLSearchParams();\n      Object.keys(params).forEach((k) => {\n        const value = params[k];\n        body.append(k, value);\n      });\n      // if (this.isInternalTest()) {\n      //   params['isInternalTest'] = true;\n      // }\n\n      const url = `${PropsService.apiUrl}/createSampleReport/submitJob`;\n      return fetch(url, {\n        method: 'POST',\n        headers: this._generateRequestHeaders(),\n        body\n      })\n      .then((res) => {\n        return res.json();\n      });\n    }\n\n    /**\n   * remove job\n   * @param jobId \n   * @returns \n   */\n    public removeJob(jobId) {\n      const params = {\n        portalUrl: PropsService.portalUrl,\n        token: PropsService.token,\n        f: 'json'\n      };\n      // if (this.isInternalTest()) {\n      //   params['isInternalTest'] = true;\n      // }\n  \n      const body = new URLSearchParams();\n      Object.keys(params).forEach((k) => {\n        const value = params[k];\n        body.append(k, value);\n      });\n  \n      const url = `${PropsService.apiUrl}/jobs/${jobId}/remove`;\n      return fetch(url, {\n        method: 'POST',\n        headers: this._generateRequestHeaders(),\n        body\n      })\n      .then((res) => {\n        return res.json();\n      });\n\n    }\n    \n    public cancelJob(jobId) {\n      const params = {\n        portalUrl: PropsService.portalUrl,\n        token: PropsService.token,\n        f: 'json'\n      };\n      // if (this.isInternalTest()) {\n      //   params['isInternalTest'] = true;\n      // }\n  \n      const body = new URLSearchParams();\n      Object.keys(params).forEach((k) => {\n        const value = params[k];\n        body.append(k, value);\n      });\n  \n      const url = `${PropsService.apiUrl}/jobs/${jobId}/cancel`;\n      return fetch(url, {\n        method: 'POST',\n        headers: this._generateRequestHeaders(),\n        body\n      })\n      .then((res) => {\n        return res.json();\n      });\n\n    }\n\n    /**\n     * Deprecated, remove job from the job list\n     * @param job \n     * @returns \n     */\n    public removeJobFromList(job) {\n      if (!job) {\n        return;\n      }\n      // const jobId = job.jobId;\n      // // if the job is the session job, stop the check status process\n      // const isSessionJob = this.sessionJobs.indexOf(job.jobId) >= 0;\n      // if (isSessionJob) {\n      //   // delete from the sessionJobs\n      //   this.sessionJobs.splice(this.sessionJobs.indexOf(jobId), 1);\n      //   // delete the timmer\n      //   if (this.queryJobStatusTimmerList[jobId]) {\n      //     delete this.queryJobStatusTimmerList[jobId];\n      //   }\n      // }\n  \n      // remove the job from the checking\n      // this.checkingList.splice(this.checkingList.indexOf(jobId), 1);\n      // setTimeout(() => { this.checkingListChange = false; }, 1500);\n  \n      // remove the job from the jobs list\n      if (this.jobList && this.jobList.jobs) {\n        const targetIdx = this.jobList.jobs.findIndex((jobItem) => {\n          return jobItem.jobId === job.jobId;\n        })\n        this.jobList.jobs.splice(targetIdx, 1);\n        this.jobList.jobs = [].concat(this.jobList.jobs);\n      }\n  \n      // todo: query job list again (load the 11th job)  \n      // this.queryJobs(true);\n    }\n\n\n  /**\n   * query jobs\n   * @param forceQuery \n   * @returns \n   */\n  public queryJobs(forceQuery?: boolean) {\n    if (this.checkingList.length < 1 && !forceQuery) {\n      return Promise.resolve(null);\n    }\n    // if (!this.surveyId) {\n    //   setTimeout(() => { this.queryJobs(forceQuery); }, 1000);\n    //   return Promise.resolve(null);\n    // }\n    // if (this.state !== 'query' && !forceQuery) {\n    //   if (this.queryJobTimmer) {\n    //     clearTimeout(this.queryJobTimmer);\n    //   }\n    //   this.queryJobTimmer = setTimeout(() => { this.queryJobs() }, 10000);\n    //   return Promise.resolve(null);\n    // }\n    if (this.isRequestingTasks) {\n      return Promise.resolve(null);\n    }\n    this.isRequestingTasks = true;\n    return this.sendQueryJobsRequest(PropsService.surveyItemId)\n      .then((res) => {\n        if (res.error) {\n          throw res.error;\n        }\n  \n        return res;\n      })\n      .then((res) => {\n        this.isRequestingTasks = false;\n      // this.jobList = res; // todo: only add the new job\n\n      if (!this.jobList.jobs) {\n        this.jobList.jobs = [];\n      }\n      if (res && res.jobs && res.jobs.length) {\n        // add the new job to the job list\n        res.jobs.forEach((jobObj, idx) => {\n          const curId = jobObj.jobId;\n          // let isOldJob = this.jobList.jobs.find((item) => {\n          //   return item.jobId === curId;\n          // });\n          // if (!isOldJob) {\n          //   newJobs.push(jobObj);\n          // }\n          // set the old job to the new job to avoid sending the checkJobStatus request,because the new job contains the detail info which is getted from checkjobstatus\n          const oldJob = this.jobList.jobs.filter((item) => {\n            return item.jobId === curId;\n          });\n          if (oldJob && oldJob.length) {\n            res.jobs[idx] = oldJob[0];\n          }\n          // if the job contains runtime data(related to cancel job/ remove job status), keept it\n          if (oldJob && oldJob._tempRuntime) {\n            res.jobs[idx]._tempRuntime = Object.assign(oldJob._tempRuntime, res.jobs[idx]._tempRuntime || {});\n          }\n        });\n        this.jobList.jobs = res.jobs; // newJobs.concat(this.jobList.jobs);\n\n      } else if (res && res.error) {\n        const errorMsg = 'Oops! An error occurred loading the job list';\n        console.log(res.error && res.error.message ? res.error.message : errorMsg);\n        return false;\n      }\n\n      // this.checkJobListDetails();\n      if (this.queryJobTimmer) {\n        clearTimeout(this.queryJobTimmer);\n      }\n      this.queryJobTimmer = setTimeout(() => { this.queryJobs() }, 10000);\n      return this.jobList;\n    }).catch(() => {\n      this.isRequestingTasks = false;\n      console.log('query jobs failed.');\n      if (this.queryJobTimmer) {\n        clearTimeout(this.queryJobTimmer);\n      }\n      this.queryJobTimmer = setTimeout(() => { this.queryJobs() }, 10000);\n      throw new Error();\n    });\n  }\n\n  /**\n   * check all the jobs, if any job is failed, and it has no details, call the status api to get the details\n   */\n  public checkJobListDetails() {\n    const jobs = this.jobList.jobs;\n    if (!jobs || !jobs.length) {\n      return;\n    }\n    jobs.forEach((job, idx) => {\n      // request job status for succeed jobs to show the download buttons\n      if ((job.jobStatus === 'esriJobSucceeded' || job.jobStatus === 'esriJobPartialSucceeded') && (!job.resultInfo || !job.resultInfo.resultFiles)) {\n        // if the job is succeded, get the download url , and check if it contains error records\n        this.checkJobStatus(job.jobId).then((res) => {\n          this.jobList.jobs[idx] = {...this.updateJobDetail(res)};\n          this.stateService.notifyDataChanged('job-updated', {value: this.jobList.jobs[idx]});\n          this.stateService.notifyDataChanged('job-complete', {value: this.jobList.jobs[idx]});\n\n        });\n      } else if (job.jobStatus === EsriJobStatusType.executing || job.jobStatus === EsriJobStatusType.submitted) {\n        /**\n         * if the job is executing, check job status until it succeeded or failed, only one exception:\n         * if ther job is the session job, do not checkJobStatus again, \n         * because after executeCustomReport request, we has called checkJobStatus request mannually\n         */\n          const isSessionJob = this.sessionJobs.indexOf(job.jobId) >= 0;\n          if (!isSessionJob) {\n            this.checkJobStatus(job.jobId);\n            \n          }\n      } else {\n        this.jobList.jobs[idx] = {...this.updateJobDetail(this.jobList.jobs[idx])};\n        this.stateService.notifyDataChanged('job-updated', {value: this.jobList.jobs[idx]});\n        if (job.jobStatus === EsriJobStatusType.failed) {\n          this.stateService.notifyDataChanged('job-complete', {value: job});\n          \n        }\n\n      }\n      // if (!job.inputInfo) {\n      //   // if (!job.inputs && (job.jobStatus === 'esriJobFailed')) {\n\n      //   // if the job is failed, and has no detail,get the details\n      //   if (job.jobStatus === 'esriJobFailed') {\n      //     this.survey123ApiService.checkJobStatus(job.jobId).then((res) => {\n      //       let showDetail = job.showDetail;\n      //       job = res;\n      //       job.showDetail = showDetail;\n      //       this.jobList.jobs[idx] = job;\n      //     });\n      //   } else if (job.jobStatus === 'esriJobSucceeded') {\n      //     // if the job is succeded, get the download url , and check if it contains error records\n      //     this.survey123ApiService.checkJobStatus(job.jobId).then((res) => {\n      //       this.jobList.jobs[idx] = this.updateJobDetail(res);\n      //     });\n      //   }\n\n      // }\n    });\n  }\n  /**\n   * check job detail, if the job is failed, and it has no details, call the status api to get the details\n   */\n  public checkJobDetails(job: any) {\n    if (!job || job.hasDetail) {\n      return Promise.resolve(job);\n    }\n    if ([EsriJobStatusType.succeeded, EsriJobStatusType.partialSucceeded, EsriJobStatusType.failed,  EsriJobStatusType.cancelled].indexOf(job.jobStatus) >=0) {\n      this.stateService.notifyDataChanged('job-complete', {value: job});\n    }\n\n    // request job status for succeed jobs to show the download buttons\n    if ((job.jobStatus === EsriJobStatusType.succeeded || job.jobStatus === EsriJobStatusType.partialSucceeded) && (!job.resultInfo || !job.resultInfo.resultFiles)) {\n      // if the job is succeded, get the download url , and check if it contains error records\n      return this.checkJobStatus(job.jobId).then((res) => {\n        job = this.updateJobDetail(res);\n        this.stateService.notifyDataChanged('job-updated', {value: job});\n        this.stateService.notifyDataChanged('job-complete', {value: job});\n        // job = {...this.updateJobDetail(res)};\n        return job;\n      });\n    } else if (job.jobStatus ===EsriJobStatusType.failed && (!job.resultInfo || !job.resultInfo.details)) {\n      // failed task\n      return this.checkJobStatus(job.jobId).then((res) => {\n        job = this.updateJobDetail(res);\n        this.stateService.notifyDataChanged('job-updated', {value: job});\n        // job = {...this.updateJobDetail(res)};\n        return job;\n      });\n    } else if (job.jobStatus === EsriJobStatusType.executing || job.jobStatus === EsriJobStatusType.submitted) {\n      \n      this.stateService.notifyDataChanged('job-updated', {value: job});\n      /**\n       * if the job is executing, check job status until it succeeded or failed, only one exception:\n       * if ther job is the session job, do not checkJobStatus again, \n       * because after executeCustomReport request, we has called checkJobStatus request mannually\n       */\n        const isSessionJob = this.sessionJobs.indexOf(job.jobId) >= 0;\n        if (!isSessionJob) {\n          this.checkJobStatus(job.jobId).then((resp) => {\n            return this.checkJobDetails(resp);\n          });\n        }\n        return Promise.resolve(job);\n    } else {\n      // job = this.updateJobDetail(job);\n      job = {...this.updateJobDetail(job)};\n      this.stateService.notifyDataChanged('job-updated', {value:job});\n\n    }\n    return Promise.resolve(job);\n  }\n\n  /**\n   * query job list\n   */\n  public sendQueryJobsRequest(surveyItemId?) {\n    const params: any = {\n      // surveyItemId: surveyItemId,\n      portalUrl: PropsService.portalUrl,\n      f: 'json',\n      token: PropsService.token\n    };\n    if (surveyItemId) {\n      params.surveyItemId = surveyItemId;\n    }\n    const body = new URLSearchParams();\n    Object.keys(params).forEach((k) => {\n      const value = params[k];\n      body.append(k, value);\n    });\n    // if (this.isInternalTest()) {\n    //   params['isInternalTest'] = true;\n    // }\n    const url = PropsService.apiUrl + '/queryJobs';\n    return fetch(url, {\n      method: 'POST',\n      headers: this._generateRequestHeaders(),\n      body\n    })\n    .then((res) => {\n      return res.json();\n    });\n  }\n\n  /**\n   * checkJobStatus\n   */\n  public checkJobStatus(jobId: string) {\n    const params = {\n      f: 'json',\n      portalUrl: PropsService.portalUrl,\n      token: PropsService.token\n    };\n    const body = new URLSearchParams();\n    Object.keys(params).forEach((k) => {\n      const value = params[k];\n      body.append(k, value);\n    });\n    // if (this.isInternalTest()) {\n    //   params['isInternalTest'] = true;\n    // }\n    const url = `${PropsService.apiUrl}/jobs/${jobId}/status`;\n    return fetch(url, {\n      method: 'POST',\n      headers: this._generateRequestHeaders(),\n      body\n    })\n    .then((res) => {\n      return res.json();\n    });\n\n  }\n\n  public downloadReport(job) {\n    let format = 'docx';\n    if (job.inputInfo && job.inputInfo.parameters) {\n      format = job.inputInfo.parameters.outputFormat || 'docx';\n    }\n    this.downloadFile(job, format === 'pdf');\n    // delete from the sessionJobs\n    // this.sessionJobs.splice(this.sessionJobs.indexOf(jobId), 1);\n    // delete the timmer\n    // if (this.queryJobStatusTimmerList[jobId]) {\n    //   delete this.queryJobStatusTimmerList[jobId];\n    // }\n    if (job.jobStatus === 'esriJobPartialSucceeded') {\n      // this.alertService.setOption({\n      //   alertType: 'warning',\n      //   html: this.langSurveyData.customPrint.printWarningMsg\n      // }).show();\n    }\n  }\n\n  /**\n   * download file\n   * @param jobObj \n   * @param openInNewtab \n   * @returns \n   */\n  public downloadFile(jobObj, openInNewtab?) {\n    if (!jobObj || !jobObj.resultInfo || !jobObj.resultInfo.resultFiles) {\n      return;\n    }\n    const resultFiles = jobObj.resultInfo.resultFiles;\n\n    resultFiles.forEach((item, idx) => {\n      let downloadUrl = item.url;\n      if (!downloadUrl) {\n        const itemId = item.id || '';\n        downloadUrl = `${PropsService.portalUrl}/sharing/rest/content/items/${itemId}/data?`;\n        downloadUrl = downloadUrl + 'token=' + PropsService.token;\n      }\n\n      if (idx > 0) {\n        setTimeout(() => {\n          this.startDownload(downloadUrl, openInNewtab);\n        }, 3000);\n      } else {\n        this.startDownload(downloadUrl, openInNewtab);\n      }\n    });\n  }\n\n  public startDownload(url: string, openInNewtab?) {\n    const a = document.createElement('a');\n    a.style.display = 'block';\n    document.body.appendChild(a);\n    a.setAttribute('href', url);\n    if (openInNewtab) {\n      a.setAttribute('target', '_blank');\n    }\n    a.click();\n    a.remove();\n  }\n\n  public getErrorStr(err) {\n    let detail = '';\n    if (err) {\n      if (typeof err === 'string') {\n        detail = err;\n      } else if (err.error && typeof err.error === 'string') {\n        detail = err.error;\n      } else if (err.error && err.error.message) {\n        detail = err.error;\n      } else if (!detail && err.status && err.statusText) {\n        detail = err.status + ' ' + err.statusText;\n      } else if (!detail && err.status && !err.statusText) {\n        detail = 'Error code: ' + err.status;\n      }\n    }\n    return detail;\n  }\n\n\n  /**\n  * show error\n  * @param errorStr \n  */\n  public showError(err, options?: {alertType?: string; errorStr?: string; detail?: any; showDetails?: boolean}) {\n    let html = '';\n    options = options || {};\n    let detail = options.detail || '';\n    if (options.errorStr) {\n      html = options.errorStr;\n    } else {\n      /**\n       * 40x or 50x error(like 404 or 500 error)\n       * the strcuture likes: \n       * {\n       *   error: {\n       *    message: ‘Failed to fetch’,\n       *    stack: ‘’\n       *  }\n       * }\n       */\n      if (err.error && err.error.message) {\n        html = err.error.message;\n      }\n    }\n \n    if (!options.detail && options.showDetails) {\n      // if (err.error && err.error instanceof ArcGISRequestError &&  err.error.message) {\n      if (err.error.response && err.error.response.error && err.error.response.error.detail) {\n        detail = err.error.response.error.detail;\n      }\n      // }\n      if (!detail && options.errorStr && err.error && err.error.message) {\n        detail = err.error.message;\n      }\n \n    }\n    if (!html && err.message) {\n      html = err.message;\n    }\n    this.stateService.notifyDataChanged('show-error', {\n      value: {\n        alertType: options.alertType || 'danger',\n        html: html,\n        detail: detail\n      }\n    });\n  }\n\n  /**\n   * manage the error from server side\n   * @param e \n   * @param type \n   */\n  public manageError(e: any, type: string) {\n    // code: 400, item not exist\n    // code 403, has no priviliage to access the item\n      if (e.response?.error?.code === 400 || e.code === 'CONT_0001'\n        || e.response?.error?.code === 403 || e.code === 'GWM_0003'\n    ) {\n      const i18n = TranslateService.getService().getTranslateSync() || {};\n      const errMsg = i18n.customPrint?.noItemErr;\n      if (errMsg && type) {\n        throw Error(errMsg.replace('${$notFoundItemID}', type + '=' + PropsService[type]));\n      }\n    }\n    throw e;\n  }\n\n\n  /**\n   * update job detail\n   * @param res \n   * @returns \n   */\n  private updateJobDetail(res) {\n    const utilService: UtilService = UtilService.getService();\n    const job = res;\n    // if (job.jobStatus === 'esriJobSucceeded' && job.resultInfo.failedObjectIds && job.resultInfo.failedObjectIds.length > 0) {\n    //   job.hasWarnning = true;\n    // }\n    if (job && this.jobList.jobs && this.jobList.jobs.length) {\n      const oldJob = this.jobList.jobs.find((oldJ) => {\n        return oldJ.jobId === job.jobId;\n      });\n      // if the job contains runtime data(related to cancel job/ remove job status), keept it\n      if (oldJob && oldJob._tempRuntime) {\n        job._tempRuntime = Object.assign(oldJob._tempRuntime, job._tempRuntime || {});\n      }\n    }\n\n    if (!res || !res.resultInfo) {\n      return job;\n    }\n    // for succeceded job\n    if (res.resultInfo.resultFiles && res.resultInfo.resultFiles.length) {\n      let url = '';\n      const resultFiles = res.resultInfo.resultFiles;\n      // todo:check the result file source: res.inputInfo.parameters.uploadInfo? online: s3\n      let isS3File = true;\n      if (res.inputInfo && res.inputInfo.parameters && res.inputInfo.parameters.uploadInfo && res.inputInfo.parameters.uploadInfo.type === 'arcgis') {\n        isS3File = false;\n      }\n      job.multipleFiles = resultFiles.length > 1 ? true : false;\n\n      if (isS3File) {\n        if (!isNaN(Number(job.completed))) {\n          if (!job.multipleFiles) {\n            url = resultFiles[0].url;\n          }\n          if (resultFiles[0].status === 'expired') {\n            job.urlExpired = true;\n          }\n          // const seconds = this.getReportMergeConfig('s3FileRetentionTime');\n          // if (new Date().getTime() - job.completed > seconds) {\n          //   job.urlExpired = true;\n          // }\n        }\n      } else {\n        // get the url from online item\n        resultFiles.forEach((item, idx) => {\n          const itemId = item.id || '';\n          let fileUrl = `${PropsService.portalUrl}/sharing/rest/content/items/${itemId}/data?`;\n          fileUrl = fileUrl + 'token=' + PropsService.token;\n          resultFiles[idx].url = fileUrl;\n          resultFiles[idx].size = utilService.getFileSize(item.size);\n        });\n        if (!job.multipleFiles) {\n          url = resultFiles[0].url;\n        }\n      }\n      if (!job.multipleFiles) {\n        job.url = url;\n      }\n    }\n    // for failed jobs(or succeed with faild objectids), merge the same failed objectids\n    if (job.resultInfo.details) {\n      const details = job.resultInfo.details || [];\n      const findMatchedInfo = (source, target) => {\n        const status = source.status;\n        const messages = source.messages;\n        const success = source.success;\n        const objectId = source.objectId;\n        // tslint:disable-next-line:forin\n        for (const i in target) {\n          const item = target[i];\n          if (status === item.status && success === item.success && JSON.stringify(messages || []) === JSON.stringify(item.messages || []) && item.objectIds.indexOf(objectId) < 0) {\n            return item;\n          }\n        }\n        return null;\n      };\n      if (details && details.length) {\n        const failedInfo = [];\n        details.forEach((detail) => {\n          const mathchedInfo = findMatchedInfo(detail, failedInfo);\n          if (!mathchedInfo) {\n            const newFailedOIDs = (detail.objectId + '').split(',').join(', ');\n            failedInfo.push({\n              status: detail.status,\n              messages: detail.messages,\n              success: detail.success,\n              objectIds: [newFailedOIDs]\n            });\n          } else {\n            mathchedInfo.objectIds.push(detail.objectId);\n          }\n        });\n        failedInfo.forEach((info) => {\n          info.objectIds = info.objectIds.join(', ');\n\n        })\n        job.failedInfo = failedInfo;\n      }\n    }\n    job.hasDetail = true;\n    return job;\n  }\n\n  /**\n   * _getLocalTimezoneOffset\n   */\n  private _getLocalTimezoneOffset() {\n    if (PropsService.utcOffset) {\n      return PropsService.utcOffset;\n    }\n    const timezoneOffsetMin = (new Date()).getTimezoneOffset();\n    let offsetHrs: any = Math.abs(timezoneOffsetMin / 60);\n    let offsetMin: any = Math.abs(timezoneOffsetMin % 60);\n\n    if (offsetHrs < 10) {\n      offsetHrs = '0' + offsetHrs;\n    }\n\n    if (offsetMin < 10) {\n      offsetMin = '0' + offsetMin;\n    }\n\n    // Add an opposite sign to the offset\n    const direction = (timezoneOffsetMin <= 0) ? '+' : '-';\n    const timezoneOffset = direction + offsetHrs + ':' + offsetMin;\n\n    // \"±hh:mm\"\n    return timezoneOffset;\n  }\n\n  /**\n   * generate request headers\n   * @returns \n   */\n  private _generateRequestHeaders() {\n    const headers: any = {\n      'contentType': 'application/x-www-form-urlencoded'\n    };\n    if (PropsService.requestSource === undefined) {\n      headers['X-Esri-Request-Source'] = 'MapsSDKJS/WebComponent';\n\n    } else if (!PropsService.requestSource  || (PropsService.requestSource + '').toLowerCase() === 'none') {\n      // do not set the X-Esri-Request-Source header\n    } else {\n      headers['X-Esri-Request-Source'] = PropsService.requestSource;\n    }\n    return headers\n  }\n\n\n}\n"],"version":3}