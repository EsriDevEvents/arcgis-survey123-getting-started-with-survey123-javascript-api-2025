{"file":"feature-report.js","mappings":"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","names":["FeatureReport"],"sources":["node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISTokenRequestError.js","node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISAccessDeniedError.js","node_modules/@esri/arcgis-rest-request/dist/esm/utils/decode-query-string.js","node_modules/@esri/arcgis-rest-request/dist/esm/fetch-token.js","node_modules/@esri/arcgis-rest-request/dist/esm/federation-utils.js","node_modules/@esri/arcgis-rest-request/dist/esm/validate-app-access.js","node_modules/@esri/arcgis-rest-request/dist/esm/revoke-token.js","node_modules/@esri/arcgis-rest-request/dist/esm/utils/base-64-url.js","node_modules/@esri/arcgis-rest-request/dist/esm/utils/generate-code-challenge.js","node_modules/@esri/arcgis-rest-request/dist/esm/utils/generate-random-string.js","node_modules/@esri/arcgis-rest-request/dist/esm/ArcGISIdentityManager.js","src/components/feature-report/feature-report.scss?tag=feature-report&encapsulation=shadow","src/components/feature-report/feature-report.tsx"],"sourcesContent":["/* Copyright (c) 2022 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * There are 5 potential error codes that might be thrown by {@linkcode ArcGISTokenRequestError}. 2 of these codes are used by both\n * {@linkcode ArcGISIdentityManager} or {@linkcode ApplicationCredentialsManager}:\n *\n * * `TOKEN_REFRESH_FAILED` when a request for an new access token fails.\n * * `UNKNOWN_ERROR_CODE` the error is unknown. More information may be available in {@linkcode ArcGISTokenRequestError.response}\n *\n * The 3 remaining error codes will only be thrown when using {@linkcode ArcGISIdentityManager}:\n *\n * * `GENERATE_TOKEN_FOR_SERVER_FAILED` when a request for a token for a specific federated server fails.\n * * `REFRESH_TOKEN_EXCHANGE_FAILED` when a request for a new refresh token fails.\n * * `NOT_FEDERATED` when the requested server isn't federated with the portal specified in {@linkcode ArcGISIdentityManager.portal}.\n */\nexport var ArcGISTokenRequestErrorCodes;\n(function (ArcGISTokenRequestErrorCodes) {\n    ArcGISTokenRequestErrorCodes[\"TOKEN_REFRESH_FAILED\"] = \"TOKEN_REFRESH_FAILED\";\n    ArcGISTokenRequestErrorCodes[\"GENERATE_TOKEN_FOR_SERVER_FAILED\"] = \"GENERATE_TOKEN_FOR_SERVER_FAILED\";\n    ArcGISTokenRequestErrorCodes[\"REFRESH_TOKEN_EXCHANGE_FAILED\"] = \"REFRESH_TOKEN_EXCHANGE_FAILED\";\n    ArcGISTokenRequestErrorCodes[\"NOT_FEDERATED\"] = \"NOT_FEDERATED\";\n    ArcGISTokenRequestErrorCodes[\"UNKNOWN_ERROR_CODE\"] = \"UNKNOWN_ERROR_CODE\";\n})(ArcGISTokenRequestErrorCodes || (ArcGISTokenRequestErrorCodes = {}));\n/**\n * This error is thrown when {@linkcode ArcGISIdentityManager} or {@linkcode ApplicationCredentialsManager} fails to refresh a token or generate a new token\n * for a request. Generally in this scenario the credentials are invalid for the request and the you should recreate the {@linkcode ApplicationCredentialsManager}\n * or prompt the user to authenticate again with {@linkcode ArcGISIdentityManager}. See {@linkcode ArcGISTokenRequestErrorCodes} for a more detailed description of\n * the possible error codes.\n *\n * ```js\n * request(someUrl, {\n *   authentication: someAuthenticationManager\n * }).catch(e => {\n *   if(e.name === \"ArcGISTokenRequestError\") {\n *     // ArcGIS REST JS could not generate an appropriate token for this request\n *     // All credentials are likely invalid and the authentication process should be restarted\n *   }\n * })\n * ```\n */\nexport class ArcGISTokenRequestError extends Error {\n    /**\n     * Create a new `ArcGISTokenRequestError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options and parameters of the request\n     */\n    constructor(message = \"UNKNOWN_ERROR\", code = ArcGISTokenRequestErrorCodes.UNKNOWN_ERROR_CODE, response, url, options) {\n        // 'Error' breaks prototype chain here\n        super(message);\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n        this.name = \"ArcGISTokenRequestError\";\n        this.message = `${code}: ${message}`;\n        this.originalMessage = message;\n        this.code = code;\n        this.response = response;\n        this.url = url;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=ArcGISTokenRequestError.js.map","/* Copyright (c) 2022 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * This error code will be thrown by the following methods when the user cancels or denies an authorization request on the OAuth 2.0\n * authorization screen.\n *\n * * {@linkcode ArcGISIdentityManager.beginOAuth2} when the `popup` option is `true`\n * * {@linkcode ArcGISIdentityManager.completeOAuth2}  when the `popup` option is `false`\n *\n * ```js\n * import { ArcGISIdentityManager } from \"@esri/arcgis-rest-request\";\n *\n * ArcGISIdentityManager.beginOAuth2({\n *   clientId: \"***\"\n *   redirectUri: \"***\",\n *   popup: true\n * }).then(authenticationManager => {\n *   console.log(\"OAuth 2.0 Successful\");\n * }).catch(e => {\n *   if(e.name === \"ArcGISAccessDeniedError\") {\n *     console.log(\"The user did not authorize your app.\")\n *   } else {\n *     console.log(\"Something else went wrong. Error:\", e);\n *   }\n * })\n * ```\n */\nexport class ArcGISAccessDeniedError extends Error {\n    /**\n     * Create a new `ArcGISAccessDeniedError`  object.\n     */\n    constructor() {\n        const message = \"The user has denied your authorization request.\";\n        super(message);\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n        this.name = \"ArcGISAccessDeniedError\";\n    }\n}\n//# sourceMappingURL=ArcGISAccessDeniedError.js.map","/* Copyright (c) 2017-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nexport function decodeParam(param) {\n    const [key, value] = param.split(\"=\");\n    return { key: decodeURIComponent(key), value: decodeURIComponent(value) };\n}\n/**\n * Decodes the passed query string as an object.\n *\n * @param query A string to be decoded.\n * @returns A decoded query param object.\n */\nexport function decodeQueryString(query) {\n    if (!query || query.length <= 0) {\n        return {};\n    }\n    return query\n        .replace(/^#/, \"\")\n        .replace(/^\\?/, \"\")\n        .split(\"&\")\n        .reduce((acc, entry) => {\n        const { key, value } = decodeParam(entry);\n        acc[key] = value;\n        return acc;\n    }, {});\n}\n//# sourceMappingURL=decode-query-string.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request } from \"./request.js\";\nconst FIVE_MINUTES_IN_MILLISECONDS = 5 * 60 * 1000;\nexport function fetchToken(url, requestOptions) {\n    const options = requestOptions;\n    // we generate a response, so we can't return the raw response\n    options.rawResponse = false;\n    return request(url, options).then((response) => {\n        // Typescript uses the \"in\" keyword to determine we have a generateToken response or an oauth token response\n        if (\"token\" in response && \"expires\" in response) {\n            return {\n                token: response.token,\n                username: requestOptions.params.username,\n                expires: new Date(response.expires)\n            };\n        }\n        const portalTokenResponse = {\n            token: response.access_token,\n            username: response.username,\n            expires: new Date(\n            // convert seconds in response to milliseconds and add the value to the current time to calculate a static expiration timestamp\n            // we subtract 5 minutes here to make sure that we refresh the token early if the user makes requests\n            Date.now() + response.expires_in * 1000 - FIVE_MINUTES_IN_MILLISECONDS),\n            ssl: response.ssl === true\n        };\n        if (response.refresh_token) {\n            portalTokenResponse.refreshToken = response.refresh_token;\n        }\n        if (response.refresh_token_expires_in) {\n            portalTokenResponse.refreshTokenExpires = new Date(\n            // convert seconds in response to milliseconds and add the value to the current time to calculate a static expiration timestamp\n            // we subtract 5 minutes here to make sure that we refresh the token early if the user makes requests\n            Date.now() +\n                response.refresh_token_expires_in * 1000 -\n                FIVE_MINUTES_IN_MILLISECONDS);\n        }\n        return portalTokenResponse;\n    });\n}\n//# sourceMappingURL=fetch-token.js.map","import { cleanUrl } from \"./utils/clean-url.js\";\n/**\n * Used to test if a URL is an ArcGIS Online URL\n */\nconst arcgisOnlineUrlRegex = /^https?:\\/\\/(\\S+)\\.arcgis\\.com.+/;\n/**\n * Used to test if a URL is production ArcGIS Online Portal\n */\nconst arcgisOnlinePortalRegex = /^https?:\\/\\/(dev|devext|qa|qaext|www)\\.arcgis\\.com\\/sharing\\/rest+/;\n/**\n * Used to test if a URL is an ArcGIS Online Organization Portal\n */\nconst arcgisOnlineOrgPortalRegex = /^https?:\\/\\/(?:[a-z0-9-]+\\.maps(dev|devext|qa|qaext)?)?.arcgis\\.com\\/sharing\\/rest/;\nexport function isOnline(url) {\n    return arcgisOnlineUrlRegex.test(url);\n}\nexport function normalizeOnlinePortalUrl(portalUrl) {\n    if (!arcgisOnlineUrlRegex.test(portalUrl)) {\n        return portalUrl;\n    }\n    switch (getOnlineEnvironment(portalUrl)) {\n        case \"dev\":\n            return \"https://devext.arcgis.com/sharing/rest\";\n        case \"qa\":\n            return \"https://qaext.arcgis.com/sharing/rest\";\n        default:\n            return \"https://www.arcgis.com/sharing/rest\";\n    }\n}\nexport function getOnlineEnvironment(url) {\n    if (!arcgisOnlineUrlRegex.test(url)) {\n        return null;\n    }\n    const match = url.match(arcgisOnlineUrlRegex);\n    const subdomain = match[1].split(\".\").pop();\n    if (subdomain.includes(\"dev\")) {\n        return \"dev\";\n    }\n    if (subdomain.includes(\"qa\")) {\n        return \"qa\";\n    }\n    return \"production\";\n}\nexport function isFederated(owningSystemUrl, portalUrl) {\n    const normalizedPortalUrl = cleanUrl(normalizeOnlinePortalUrl(portalUrl)).replace(/https?:\\/\\//, \"\");\n    const normalizedOwningSystemUrl = cleanUrl(owningSystemUrl).replace(/https?:\\/\\//, \"\");\n    return new RegExp(normalizedOwningSystemUrl, \"i\").test(normalizedPortalUrl);\n}\nexport function canUseOnlineToken(portalUrl, requestUrl) {\n    const portalIsOnline = isOnline(portalUrl);\n    const requestIsOnline = isOnline(requestUrl);\n    const portalEnv = getOnlineEnvironment(portalUrl);\n    const requestEnv = getOnlineEnvironment(requestUrl);\n    if (portalIsOnline && requestIsOnline && portalEnv === requestEnv) {\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=federation-utils.js.map","/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request } from \"./request.js\";\n/**\n * Validates that the user has access to the application\n * and if they user should be presented a \"View Only\" mode\n *\n * This is only needed/valid for Esri applications that are \"licensed\"\n * and shipped in ArcGIS Online or ArcGIS Enterprise. Most custom applications\n * should not need or use this.\n *\n * ```js\n * import { validateAppAccess } from '@esri/arcgis-rest-request';\n *\n * return validateAppAccess('your-token', 'theClientId')\n * .then((result) => {\n *    if (!result.value) {\n *      // redirect or show some other ui\n *    } else {\n *      if (result.viewOnlyUserTypeApp) {\n *        // use this to inform your app to show a \"View Only\" mode\n *      }\n *    }\n * })\n * .catch((err) => {\n *  // two possible errors\n *  // invalid clientId: {\"error\":{\"code\":400,\"messageCode\":\"GWM_0007\",\"message\":\"Invalid request\",\"details\":[]}}\n *  // invalid token: {\"error\":{\"code\":498,\"message\":\"Invalid token.\",\"details\":[]}}\n * })\n * ```\n *\n * Note: This is only usable by Esri applications hosted on *arcgis.com, *esri.com or within\n * an ArcGIS Enterprise installation. Custom applications can not use this.\n *\n * @param token platform token\n * @param clientId application client id\n * @param portal Optional\n */\nexport function validateAppAccess(token, clientId, portal = \"https://www.arcgis.com/sharing/rest\") {\n    const url = `${portal}/oauth2/validateAppAccess`;\n    const ro = {\n        method: \"POST\",\n        params: {\n            f: \"json\",\n            client_id: clientId,\n            token\n        }\n    };\n    return request(url, ro);\n}\n//# sourceMappingURL=validate-app-access.js.map","import { request, cleanUrl, ArcGISRequestError } from \"./index.js\";\n/**\n * Revokes a token generated via any oAuth 2.0 method. `token` can be either a refresh token OR an access token. If you are using  {@linkcode ArcGISIdentityManager} you should use  {@linkcode ArcGISIdentityManager.destroy} instead. Cannot revoke API keys or tokens generated by {@linkcode ApplicationCredentialsManager}.\n *\n * See [`revokeToken`](https://developers.arcgis.com/rest/users-groups-and-items/revoke-token.htm) on the ArcGIS REST API for more details.\n */\nexport function revokeToken(requestOptions) {\n    const url = `${cleanUrl(requestOptions.portal || \"https://www.arcgis.com/sharing/rest\")}/oauth2/revokeToken/`;\n    const token = requestOptions.token;\n    const clientId = requestOptions.clientId;\n    delete requestOptions.portal;\n    delete requestOptions.clientId;\n    delete requestOptions.token;\n    const options = Object.assign(Object.assign({}, requestOptions), { httpMethod: \"POST\", params: {\n            client_id: clientId,\n            auth_token: token\n        } });\n    return request(url, options).then((response) => {\n        if (!response.success) {\n            throw new ArcGISRequestError(\"Unable to revoke token\", 500, response, url, options);\n        }\n        return response;\n    });\n}\n//# sourceMappingURL=revoke-token.js.map","/**\n * Encodes a `Uint8Array` to base 64. Used internally for hashing the `code_verifier` and `code_challenge` for PKCE.\n */\nexport function base64UrlEncode(value, win = window) {\n    /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n    if (!win && window) {\n        win = window;\n    }\n    return win\n        .btoa(String.fromCharCode.apply(null, value))\n        .replace(/\\+/g, \"-\") // replace + with -\n        .replace(/\\//g, \"_\") // replace / with _\n        .replace(/=+$/, \"\"); // trim trailing =\n}\n//# sourceMappingURL=base-64-url.js.map","import { base64UrlEncode } from \"./base-64-url.js\";\n/**\n * Utility to hash the codeVerifier using sha256\n */\nexport function generateCodeChallenge(codeVerifier, win = window) {\n    /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n    if (!win && window) {\n        win = window;\n    }\n    if (codeVerifier && win.isSecureContext && win.crypto && win.crypto.subtle) {\n        const encoder = new win.TextEncoder();\n        const bytes = encoder.encode(codeVerifier);\n        return win.crypto.subtle\n            .digest(\"SHA-256\", bytes)\n            .then((buffer) => base64UrlEncode(new Uint8Array(buffer), win));\n    }\n    return Promise.resolve(null);\n}\n//# sourceMappingURL=generate-code-challenge.js.map","import { base64UrlEncode } from \"./base-64-url.js\";\n/**\n * Utility to generate a random string to use as our `code_verifier`\n *\n * @param win the global `window` object for accepting a mock while testing.\n */\nexport function generateRandomString(win) {\n    /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n    if (!win && window) {\n        win = window;\n    }\n    const randomBytes = win.crypto.getRandomValues(new Uint8Array(32));\n    return base64UrlEncode(randomBytes);\n}\n//# sourceMappingURL=generate-random-string.js.map","/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { ArcGISAuthError, request } from \"./request.js\";\nimport { decodeQueryString } from \"./utils/decode-query-string.js\";\nimport { encodeQueryString } from \"./utils/encode-query-string.js\";\nimport { fetchToken } from \"./fetch-token.js\";\nimport { canUseOnlineToken, isFederated } from \"./federation-utils.js\";\nimport { validateAppAccess } from \"./validate-app-access.js\";\nimport { cleanUrl } from \"./utils/clean-url.js\";\nimport { revokeToken } from \"./revoke-token.js\";\nimport { generateCodeChallenge } from \"./utils/generate-code-challenge.js\";\nimport { generateRandomString } from \"./utils/generate-random-string.js\";\nimport { ArcGISAccessDeniedError } from \"./utils/ArcGISAccessDeniedError.js\";\nimport { ArcGISTokenRequestError, ArcGISTokenRequestErrorCodes } from \"./utils/ArcGISTokenRequestError.js\";\nimport { NODEJS_DEFAULT_REFERER_HEADER } from \"./index.js\";\n/**\n * Used to authenticate both ArcGIS Online and ArcGIS Enterprise users. `ArcGISIdentityManager` includes helper methods for [OAuth 2.0](https://developers.arcgis.com/documentation/mapping-apis-and-services/security/oauth-2.0/) in both browser and server applications.\n *\n * **It is not recommended to construct `ArcGISIdentityManager` directly**. Instead there are several static methods used for specific workflows. The 2 primary workflows relate to oAuth 2.0:\n *\n * * {@linkcode ArcGISIdentityManager.beginOAuth2} and {@linkcode ArcGISIdentityManager.completeOAuth2()} for oAuth 2.0 in browser-only environment.\n * * {@linkcode ArcGISIdentityManager.authorize} and {@linkcode ArcGISIdentityManager.exchangeAuthorizationCode} for oAuth 2.0 for server-enabled application.\n *\n * Other more specialized helpers for less common workflows also exist:\n *\n * * {@linkcode ArcGISIdentityManager.fromToken} for when you have an existing token from another source and would like create an `ArcGISIdentityManager` instance.\n * * {@linkcode ArcGISIdentityManager.fromCredential} for creating  an `ArcGISIdentityManager` instance from a `Credentials` object in the ArcGIS JS API `IdentityManager`\n * * {@linkcode ArcGISIdentityManager.signIn} for authenticating directly with a user's username and password for environments with a user interface for oAuth 2.0.\n *\n * Once a manager is created there are additional utilities:\n *\n * * {@linkcode ArcGISIdentityManager.serialize} can be used to create a JSON object representing an instance of `ArcGISIdentityManager`\n * * {@linkcode ArcGISIdentityManager.deserialize} will create a new `ArcGISIdentityManager` from a JSON object created with {@linkcode ArcGISIdentityManager.serialize}\n * * {@linkcode ArcGISIdentityManager.destroy} or {@linkcode ArcGISIdentityManager.signOut} will invalidate any tokens in use by the  `ArcGISIdentityManager`.\n */\nexport class ArcGISIdentityManager {\n    constructor(options) {\n        this.clientId = options.clientId;\n        this._refreshToken = options.refreshToken;\n        this._refreshTokenExpires = options.refreshTokenExpires;\n        this._username = options.username;\n        this.password = options.password;\n        this._token = options.token;\n        this._tokenExpires = options.tokenExpires;\n        this.portal = options.portal\n            ? cleanUrl(options.portal)\n            : \"https://www.arcgis.com/sharing/rest\";\n        this.ssl = options.ssl;\n        this.provider = options.provider || \"arcgis\";\n        this.tokenDuration = options.tokenDuration || 20160;\n        this.redirectUri = options.redirectUri;\n        this.server = options.server;\n        this.referer = options.referer;\n        this.federatedServers = {};\n        this.trustedDomains = [];\n        // if a non-federated server was passed explicitly, it should be trusted.\n        if (options.server) {\n            // if the url includes more than '/arcgis/', trim the rest\n            const root = this.getServerRootUrl(options.server);\n            this.federatedServers[root] = {\n                token: options.token,\n                expires: options.tokenExpires\n            };\n        }\n        this._pendingTokenRequests = {};\n    }\n    /**\n     * The current ArcGIS Online or ArcGIS Enterprise `token`.\n     */\n    get token() {\n        return this._token;\n    }\n    /**\n     * The expiration time of the current `token`.\n     */\n    get tokenExpires() {\n        return this._tokenExpires;\n    }\n    /**\n     * The current token to ArcGIS Online or ArcGIS Enterprise.\n     */\n    get refreshToken() {\n        return this._refreshToken;\n    }\n    /**\n     * The expiration time of the current `refreshToken`.\n     */\n    get refreshTokenExpires() {\n        return this._refreshTokenExpires;\n    }\n    /**\n     * The currently authenticated user.\n     */\n    get username() {\n        if (this._username) {\n            return this._username;\n        }\n        if (this._user && this._user.username) {\n            return this._user.username;\n        }\n    }\n    /**\n     * Returns `true` if these credentials can be refreshed and `false` if it cannot.\n     */\n    get canRefresh() {\n        if (this.username && this.password) {\n            return true;\n        }\n        if (this.clientId && this.refreshToken && this.redirectUri) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Begins a new browser-based OAuth 2.0 sign in. If `options.popup` is `true` the authentication window will open in a new tab/window. Otherwise, the user will be redirected to the authorization page in their current tab/window and the function will return `undefined`.\n     *\n     * If `popup` is `true` (the default) this method will return a `Promise` that resolves to an `ArcGISIdentityManager` instance and you must call {@linkcode ArcGISIdentityManager.completeOAuth2()} on the page defined in the `redirectUri`. Otherwise it will return undefined and the {@linkcode ArcGISIdentityManager.completeOAuth2()} method will return a `Promise` that resolves to an `ArcGISIdentityManager` instance.\n     *\n     * A {@linkcode ArcGISAccessDeniedError} error will be thrown if the user denies the request on the authorization screen.\n     *\n     * @browserOnly\n     */\n    static beginOAuth2(options, win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        const { portal, provider, clientId, expiration, redirectUri, popup, popupWindowFeatures, locale, params, style, pkce, state } = Object.assign({\n            portal: \"https://www.arcgis.com/sharing/rest\",\n            provider: \"arcgis\",\n            expiration: 20160,\n            popup: true,\n            popupWindowFeatures: \"height=400,width=600,menubar=no,location=yes,resizable=yes,scrollbars=yes,status=yes\",\n            locale: \"\",\n            style: \"\",\n            pkce: true\n        }, options);\n        /**\n         * Generate a  random string for the `state` param and store it in local storage. This is used\n         * to validate that all parts of the oAuth process were performed on the same client.\n         */\n        const stateId = state || generateRandomString(win);\n        const stateStorageKey = `ARCGIS_REST_JS_AUTH_STATE_${clientId}`;\n        win.localStorage.setItem(stateStorageKey, stateId);\n        // Start setting up the URL to the authorization screen.\n        let authorizeUrl = `${cleanUrl(portal)}/oauth2/authorize`;\n        const authorizeUrlParams = {\n            client_id: clientId,\n            response_type: pkce ? \"code\" : \"token\",\n            expiration: expiration,\n            redirect_uri: redirectUri,\n            state: JSON.stringify({\n                id: stateId,\n                originalUrl: win.location.href // this is used to reset the URL back the original URL upon return\n            }),\n            locale: locale,\n            style: style\n        };\n        // If we are authorizing through a specific social provider update the params and base URL.\n        if (provider !== \"arcgis\") {\n            authorizeUrl = `${cleanUrl(portal)}/oauth2/social/authorize`;\n            authorizeUrlParams.socialLoginProviderName = provider;\n            authorizeUrlParams.autoAccountCreateForSocial = true;\n        }\n        /**\n         * set a value that will be set to a promise which will later resolve when we are ready\n         * to send users to the authorization page.\n         */\n        let setupAuth;\n        if (pkce) {\n            /**\n             * If we are authenticating with PKCE we need to generate the code challenge which is\n             * async so we generate the code challenge and assign the resulting Promise to `setupAuth`\n             */\n            const codeVerifier = generateRandomString(win);\n            const codeVerifierStorageKey = `ARCGIS_REST_JS_CODE_VERIFIER_${clientId}`;\n            win.localStorage.setItem(codeVerifierStorageKey, codeVerifier);\n            setupAuth = generateCodeChallenge(codeVerifier, win).then(function (codeChallenge) {\n                authorizeUrlParams.code_challenge_method = codeChallenge\n                    ? \"S256\"\n                    : \"plain\";\n                authorizeUrlParams.code_challenge = codeChallenge\n                    ? codeChallenge\n                    : codeVerifier;\n            });\n        }\n        else {\n            /**\n             * If we aren't authenticating with PKCE we can just assign a resolved promise to `setupAuth`\n             */\n            setupAuth = Promise.resolve();\n        }\n        /**\n         * Once we are done setting up with (for PKCE) we can start the auth process.\n         */\n        return setupAuth.then(() => {\n            // combine the authorize URL and params\n            authorizeUrl = `${authorizeUrl}?${encodeQueryString(authorizeUrlParams)}`;\n            // append additional params passed by the user\n            if (params) {\n                authorizeUrl = `${authorizeUrl}&${encodeQueryString(params)}`;\n            }\n            if (popup) {\n                // If we are authenticating a popup we need to return a Promise that will resolve to an ArcGISIdentityManager later.\n                return new Promise((resolve, reject) => {\n                    // Add an event listener to listen for when a user calls `ArcGISIdentityManager.completeOAuth2()` in the popup.\n                    win.addEventListener(`arcgis-rest-js-popup-auth-${clientId}`, (e) => {\n                        if (e.detail.error === \"access_denied\") {\n                            const error = new ArcGISAccessDeniedError();\n                            reject(error);\n                            return error;\n                        }\n                        if (e.detail.errorMessage) {\n                            const error = new ArcGISAuthError(e.detail.errorMessage, e.detail.error);\n                            reject(error);\n                            return error;\n                        }\n                        resolve(new ArcGISIdentityManager({\n                            clientId,\n                            portal,\n                            ssl: e.detail.ssl,\n                            token: e.detail.token,\n                            tokenExpires: e.detail.expires,\n                            username: e.detail.username,\n                            refreshToken: e.detail.refreshToken,\n                            refreshTokenExpires: e.detail.refreshTokenExpires,\n                            redirectUri\n                        }));\n                    }, {\n                        once: true\n                    });\n                    // open the popup\n                    win.open(authorizeUrl, \"oauth-window\", popupWindowFeatures);\n                    win.dispatchEvent(new CustomEvent(\"arcgis-rest-js-popup-auth-start\"));\n                });\n            }\n            else {\n                // If we aren't authenticating with a popup just send the user to the authorization page.\n                win.location.href = authorizeUrl;\n                return undefined;\n            }\n        });\n    }\n    /**\n     * Completes a browser-based OAuth 2.0 sign in. If `options.popup` is `true` the user\n     * will be returned to the previous window and the popup will close. Otherwise a new `ArcGISIdentityManager` will be returned. You must pass the same values for `clientId`, `popup`, `portal`, and `pkce` as you used in `beginOAuth2()`.\n     *\n     * A {@linkcode ArcGISAccessDeniedError} error will be thrown if the user denies the request on the authorization screen.\n     * @browserOnly\n     */\n    static completeOAuth2(options, win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        // pull out necessary options\n        const { portal, clientId, popup, pkce, redirectUri } = Object.assign({\n            portal: \"https://www.arcgis.com/sharing/rest\",\n            popup: true,\n            pkce: true\n        }, options);\n        // pull the saved state id out of local storage\n        const stateStorageKey = `ARCGIS_REST_JS_AUTH_STATE_${clientId}`;\n        const stateId = win.localStorage.getItem(stateStorageKey);\n        // get the params provided by the server and compare the server state with the client saved state\n        const params = decodeQueryString(pkce\n            ? win.location.search.replace(/^\\?/, \"\")\n            : win.location.hash.replace(/^#/, \"\"));\n        const state = params && params.state ? JSON.parse(params.state) : undefined;\n        function reportError(errorMessage, error, originalUrl) {\n            win.localStorage.removeItem(stateStorageKey);\n            if (popup && win.opener) {\n                win.opener.dispatchEvent(new CustomEvent(`arcgis-rest-js-popup-auth-${clientId}`, {\n                    detail: {\n                        error,\n                        errorMessage\n                    }\n                }));\n                win.close();\n                return;\n            }\n            if (originalUrl) {\n                win.history.replaceState(win.history.state, \"\", originalUrl);\n            }\n            if (error === \"access_denied\") {\n                return Promise.reject(new ArcGISAccessDeniedError());\n            }\n            return Promise.reject(new ArcGISAuthError(errorMessage, error));\n        }\n        // create a function to create the final ArcGISIdentityManager from the token info.\n        function createManager(oauthInfo, originalUrl) {\n            win.localStorage.removeItem(stateStorageKey);\n            if (popup && win.opener) {\n                win.opener.dispatchEvent(new CustomEvent(`arcgis-rest-js-popup-auth-${clientId}`, {\n                    detail: Object.assign({}, oauthInfo)\n                }));\n                win.close();\n                return;\n            }\n            win.history.replaceState(win.history.state, \"\", originalUrl);\n            return new ArcGISIdentityManager({\n                clientId,\n                portal,\n                ssl: oauthInfo.ssl,\n                token: oauthInfo.token,\n                tokenExpires: oauthInfo.expires,\n                username: oauthInfo.username,\n                refreshToken: oauthInfo.refreshToken,\n                refreshTokenExpires: oauthInfo.refreshTokenExpires,\n                // At 4.0.0 it was possible (in JS code) to not pass redirectUri and fallback to win.location.href, however this broke support for redirect URIs with query params.\n                // Now similar to 3.x.x you must pass the redirectUri parameter explicitly. See https://github.com/Esri/arcgis-rest-js/issues/995\n                redirectUri: redirectUri ||\n                    /* istanbul ignore next: TypeScript wont compile if we omit redirectUri */ location.href.replace(location.search, \"\")\n            });\n        }\n        if (!stateId || !state) {\n            return reportError(\"No authentication state was found, call `ArcGISIdentityManager.beginOAuth2(...)` to start the authentication process.\", \"no-auth-state\");\n        }\n        if (state.id !== stateId) {\n            return reportError(\"Saved client state did not match server sent state.\", \"mismatched-auth-state\");\n        }\n        if (params.error) {\n            const error = params.error;\n            const errorMessage = params.error_description || \"Unknown error\";\n            return reportError(errorMessage, error, state.originalUrl);\n        }\n        /**\n         * If we are using PKCE the authorization code will be in the query params.\n         * For implicit grants the token will be in the hash.\n         */\n        if (pkce && params.code) {\n            const tokenEndpoint = cleanUrl(`${portal}/oauth2/token/`);\n            const codeVerifierStorageKey = `ARCGIS_REST_JS_CODE_VERIFIER_${clientId}`;\n            const codeVerifier = win.localStorage.getItem(codeVerifierStorageKey);\n            win.localStorage.removeItem(codeVerifierStorageKey);\n            // exchange our auth code for a token + refresh token\n            return fetchToken(tokenEndpoint, {\n                httpMethod: \"POST\",\n                params: {\n                    client_id: clientId,\n                    code_verifier: codeVerifier,\n                    grant_type: \"authorization_code\",\n                    // using location.href here does not support query params but shipped with 4.0.0. See https://github.com/Esri/arcgis-rest-js/issues/995\n                    redirect_uri: redirectUri || location.href.replace(location.search, \"\"),\n                    code: params.code\n                }\n            })\n                .then((tokenResponse) => {\n                return createManager(Object.assign(Object.assign({}, tokenResponse), state), state.originalUrl);\n            })\n                .catch((e) => {\n                return reportError(e.originalMessage, e.code, state.originalUrl);\n            });\n        }\n        if (!pkce && params.access_token) {\n            return Promise.resolve(createManager(Object.assign({ token: params.access_token, expires: new Date(Date.now() + parseInt(params.expires_in, 10) * 1000), ssl: params.ssl === \"true\", username: params.username }, state), state.originalUrl));\n        }\n        return reportError(\"Unknown error\", \"oauth-error\", state.originalUrl);\n    }\n    /**\n     * Request credentials information from the parent application\n     *\n     * When an application is embedded into another application via an IFrame, the embedded app can\n     * use `window.postMessage` to request credentials from the host application. This function wraps\n     * that behavior.\n     *\n     * The ArcGIS API for Javascript has this built into the Identity Manager as of the 4.19 release.\n     *\n     * Note: The parent application will not respond if the embedded app's origin is not:\n     * - the same origin as the parent or *.arcgis.com (JSAPI)\n     * - in the list of valid child origins (REST-JS)\n     *\n     *\n     * @param parentOrigin origin of the parent frame. Passed into the embedded application as `parentOrigin` query param\n     * @browserOnly\n     */\n    static fromParent(parentOrigin, win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        // Declare handler outside of promise scope so we can detach it\n        let handler;\n        // return a promise that will resolve when the handler receives\n        // session information from the correct origin\n        return new Promise((resolve, reject) => {\n            // create an event handler that just wraps the parentMessageHandler\n            handler = (event) => {\n                // ensure we only listen to events from the parent\n                if (event.source === win.parent && event.data) {\n                    try {\n                        return resolve(ArcGISIdentityManager.parentMessageHandler(event));\n                    }\n                    catch (err) {\n                        return reject(err);\n                    }\n                }\n            };\n            // add listener\n            win.addEventListener(\"message\", handler, false);\n            win.parent.postMessage({ type: \"arcgis:auth:requestCredential\" }, parentOrigin);\n        }).then((manager) => {\n            win.removeEventListener(\"message\", handler, false);\n            return manager;\n        });\n    }\n    /**\n     * Begins a new server-based OAuth 2.0 sign in. This will redirect the user to\n     * the ArcGIS Online or ArcGIS Enterprise authorization page.\n     *\n     * @nodeOnly\n     */\n    static authorize(options, response) {\n        const { portal, clientId, expiration, redirectUri, state } = Object.assign({ portal: \"https://arcgis.com/sharing/rest\", expiration: 20160 }, options);\n        const queryParams = {\n            client_id: clientId,\n            expiration,\n            response_type: \"code\",\n            redirect_uri: redirectUri\n        };\n        if (state) {\n            queryParams.state = state;\n        }\n        const url = `${portal}/oauth2/authorize?${encodeQueryString(queryParams)}`;\n        response.writeHead(301, {\n            Location: url\n        });\n        response.end();\n    }\n    /**\n     * Completes the server-based OAuth 2.0 sign in process by exchanging the `authorizationCode`\n     * for a `access_token`.\n     *\n     * @nodeOnly\n     */\n    static exchangeAuthorizationCode(options, authorizationCode) {\n        const { portal, clientId, redirectUri } = Object.assign({\n            portal: \"https://www.arcgis.com/sharing/rest\"\n        }, options);\n        return fetchToken(`${portal}/oauth2/token`, {\n            params: {\n                grant_type: \"authorization_code\",\n                client_id: clientId,\n                redirect_uri: redirectUri,\n                code: authorizationCode\n            }\n        })\n            .then((response) => {\n            return new ArcGISIdentityManager({\n                clientId,\n                portal,\n                ssl: response.ssl,\n                redirectUri,\n                refreshToken: response.refreshToken,\n                refreshTokenExpires: response.refreshTokenExpires,\n                token: response.token,\n                tokenExpires: response.expires,\n                username: response.username\n            });\n        })\n            .catch((e) => {\n            throw new ArcGISTokenRequestError(e.message, ArcGISTokenRequestErrorCodes.REFRESH_TOKEN_EXCHANGE_FAILED, e.response, e.url, e.options);\n        });\n    }\n    static deserialize(str) {\n        const options = JSON.parse(str);\n        return new ArcGISIdentityManager({\n            clientId: options.clientId,\n            refreshToken: options.refreshToken,\n            refreshTokenExpires: options.refreshTokenExpires\n                ? new Date(options.refreshTokenExpires)\n                : undefined,\n            username: options.username,\n            password: options.password,\n            token: options.token,\n            tokenExpires: options.tokenExpires\n                ? new Date(options.tokenExpires)\n                : undefined,\n            portal: options.portal,\n            ssl: options.ssl,\n            tokenDuration: options.tokenDuration,\n            redirectUri: options.redirectUri,\n            server: options.server\n        });\n    }\n    /**\n     * Translates authentication from the format used in the [`IdentityManager` class in the ArcGIS API for JavaScript](https://developers.arcgis.com/javascript/latest/api-reference/esri-identity-Credential.html).\n     *\n     * You will need to call both [`IdentityManger.findCredential`](https://developers.arcgis.com/javascript/latest/api-reference/esri-identity-IdentityManager.html#findCredential) and [`IdentityManger.findServerInfo`](https://developers.arcgis.com/javascript/latest/api-reference/esri-identity-IdentityManager.html#findServerInfo) to obtain both parameters for this method.\n     *\n     * This method can be used with {@linkcode ArcGISIdentityManager.toCredential} to interop with the ArcGIS API for JavaScript.\n     *\n     * ```js\n     * require([\"esri/id\"], (esriId) => {\n     *   const credential = esriId.findCredential(\"https://www.arcgis.com/sharing/rest\");\n     *   const serverInfo = esriId.findServerInfo(\"https://www.arcgis.com/sharing/rest\");\n     *\n     *   const manager = ArcGISIdentityManager.fromCredential(credential, serverInfo);\n     * });\n     * ```\n     *\n     * @returns ArcGISIdentityManager\n     */\n    static fromCredential(credential, serverInfo) {\n        // At ArcGIS Online 9.1, credentials no longer include the ssl and expires properties\n        // Here, we provide default values for them to cover this condition\n        const ssl = typeof credential.ssl !== \"undefined\" ? credential.ssl : true;\n        const expires = credential.expires || Date.now() + 7200000; /* 2 hours */\n        if (serverInfo.hasServer) {\n            return new ArcGISIdentityManager({\n                server: credential.server,\n                ssl,\n                token: credential.token,\n                username: credential.userId,\n                tokenExpires: new Date(expires)\n            });\n        }\n        return new ArcGISIdentityManager({\n            portal: cleanUrl(credential.server.includes(\"sharing/rest\")\n                ? credential.server\n                : credential.server + `/sharing/rest`),\n            ssl,\n            token: credential.token,\n            username: credential.userId,\n            tokenExpires: new Date(expires)\n        });\n    }\n    /**\n     * Handle the response from the parent\n     * @param event DOM Event\n     */\n    static parentMessageHandler(event) {\n        if (event.data.type === \"arcgis:auth:credential\") {\n            return new ArcGISIdentityManager(event.data.credential);\n        }\n        if (event.data.type === \"arcgis:auth:error\") {\n            const err = new Error(event.data.error.message);\n            err.name = event.data.error.name;\n            throw err;\n        }\n        else {\n            throw new Error(\"Unknown message type.\");\n        }\n    }\n    /**\n     * Revokes all active tokens for a provided {@linkcode ArcGISIdentityManager}. The can be considered the equivalent to signing the user out of your application.\n     */\n    static destroy(manager) {\n        return revokeToken({\n            clientId: manager.clientId,\n            portal: manager.portal,\n            token: manager.refreshToken || manager.token\n        });\n    }\n    /**\n     * Create a  {@linkcode ArcGISIdentityManager} from an existing token. Useful for when you have a users token from a different authentication system and want to get a  {@linkcode ArcGISIdentityManager}.\n     */\n    static fromToken(options) {\n        const manager = new ArcGISIdentityManager(options);\n        return manager.getUser().then(() => {\n            return manager;\n        });\n    }\n    /**\n     * Initialize a {@linkcode ArcGISIdentityManager} with a user's `username` and `password`. **This method is intended ONLY for applications without a user interface such as CLI tools.**.\n     *\n     * If possible you should use {@linkcode ArcGISIdentityManager.beginOAuth2} to authenticate users in a browser or {@linkcode ArcGISIdentityManager.authorize} for authenticating users with a web server.\n     */\n    static signIn(options) {\n        const manager = new ArcGISIdentityManager(options);\n        return manager.getUser().then(() => {\n            return manager;\n        });\n    }\n    /**\n     * Returns authentication in a format useable in the [`IdentityManager.registerToken()` method in the ArcGIS API for JavaScript](https://developers.arcgis.com/javascript/latest/api-reference/esri-identity-IdentityManager.html#registerToken).\n     *\n     * This method can be used with {@linkcode ArcGISIdentityManager.fromCredential} to interop with the ArcGIS API for JavaScript.\n     *\n     * ```js\n     * require([\"esri/id\"], (esriId) => {\n     *   esriId.registerToken(manager.toCredential());\n     * })\n     \n     * ```\n     *\n     * @returns ICredential\n     */\n    toCredential() {\n        return {\n            expires: this.tokenExpires.getTime(),\n            server: this.server || this.portal,\n            ssl: this.ssl,\n            token: this.token,\n            userId: this.username\n        };\n    }\n    /**\n     * Returns information about the currently logged in [user](https://developers.arcgis.com/rest/users-groups-and-items/user.htm). Subsequent calls will *not* result in additional web traffic.\n     *\n     * ```js\n     * manager.getUser()\n     *   .then(response => {\n     *     console.log(response.role); // \"org_admin\"\n     *   })\n     * ```\n     *\n     * @param requestOptions - Options for the request. NOTE: `rawResponse` is not supported by this operation.\n     * @returns A Promise that will resolve with the data from the response.\n     */\n    getUser(requestOptions) {\n        if (this._pendingUserRequest) {\n            return this._pendingUserRequest;\n        }\n        else if (this._user) {\n            return Promise.resolve(this._user);\n        }\n        else {\n            const url = `${this.portal}/community/self`;\n            const options = Object.assign(Object.assign({ httpMethod: \"GET\", authentication: this }, requestOptions), { rawResponse: false });\n            this._pendingUserRequest = request(url, options).then((response) => {\n                this._user = response;\n                this._pendingUserRequest = null;\n                return response;\n            });\n            return this._pendingUserRequest;\n        }\n    }\n    /**\n     * Returns information about the currently logged in user's [portal](https://developers.arcgis.com/rest/users-groups-and-items/portal-self.htm). Subsequent calls will *not* result in additional web traffic.\n     *\n     * ```js\n     * manager.getPortal()\n     *   .then(response => {\n     *     console.log(portal.name); // \"City of ...\"\n     *   })\n     * ```\n     *\n     * @param requestOptions - Options for the request. NOTE: `rawResponse` is not supported by this operation.\n     * @returns A Promise that will resolve with the data from the response.\n     */\n    getPortal(requestOptions) {\n        if (this._pendingPortalRequest) {\n            return this._pendingPortalRequest;\n        }\n        else if (this._portalInfo) {\n            return Promise.resolve(this._portalInfo);\n        }\n        else {\n            const url = `${this.portal}/portals/self`;\n            const options = Object.assign(Object.assign({ httpMethod: \"GET\", authentication: this }, requestOptions), { rawResponse: false });\n            this._pendingPortalRequest = request(url, options).then((response) => {\n                this._portalInfo = response;\n                this._pendingPortalRequest = null;\n                return response;\n            });\n            return this._pendingPortalRequest;\n        }\n    }\n    /**\n     * Returns the username for the currently logged in [user](https://developers.arcgis.com/rest/users-groups-and-items/user.htm). Subsequent calls will *not* result in additional web traffic. This is also used internally when a username is required for some requests but is not present in the options.\n     *\n     * ```js\n     * manager.getUsername()\n     *   .then(response => {\n     *     console.log(response); // \"casey_jones\"\n     *   })\n     * ```\n     */\n    getUsername() {\n        if (this.username) {\n            return Promise.resolve(this.username);\n        }\n        else {\n            return this.getUser().then((user) => {\n                return user.username;\n            });\n        }\n    }\n    /**\n     * Gets an appropriate token for the given URL. If `portal` is ArcGIS Online and\n     * the request is to an ArcGIS Online domain `token` will be used. If the request\n     * is to the current `portal` the current `token` will also be used. However if\n     * the request is to an unknown server we will validate the server with a request\n     * to our current `portal`.\n     */\n    getToken(url, requestOptions) {\n        if (canUseOnlineToken(this.portal, url)) {\n            return this.getFreshToken(requestOptions);\n        }\n        else if (new RegExp(this.portal, \"i\").test(url)) {\n            return this.getFreshToken(requestOptions);\n        }\n        else {\n            return this.getTokenForServer(url, requestOptions);\n        }\n    }\n    /**\n     * Get application access information for the current user\n     * see `validateAppAccess` function for details\n     *\n     * @param clientId application client id\n     */\n    validateAppAccess(clientId) {\n        return this.getToken(this.portal).then((token) => {\n            return validateAppAccess(token, clientId);\n        });\n    }\n    toJSON() {\n        return {\n            clientId: this.clientId,\n            refreshToken: this.refreshToken,\n            refreshTokenExpires: this.refreshTokenExpires || undefined,\n            username: this.username,\n            password: this.password,\n            token: this.token,\n            tokenExpires: this.tokenExpires || undefined,\n            portal: this.portal,\n            ssl: this.ssl,\n            tokenDuration: this.tokenDuration,\n            redirectUri: this.redirectUri,\n            server: this.server\n        };\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    /**\n     * For a \"Host\" app that embeds other platform apps via iframes, after authenticating the user\n     * and creating a ArcGISIdentityManager, the app can then enable \"post message\" style authentication by calling\n     * this method.\n     *\n     * Internally this adds an event listener on window for the `message` event\n     *\n     * @param validChildOrigins Array of origins that are allowed to request authentication from the host app\n     */\n    enablePostMessageAuth(validChildOrigins, win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        this._hostHandler = this.createPostMessageHandler(validChildOrigins);\n        win.addEventListener(\"message\", this._hostHandler, false);\n    }\n    /**\n     * For a \"Host\" app that has embedded other platform apps via iframes, when the host needs\n     * to transition routes, it should call `ArcGISIdentityManager.disablePostMessageAuth()` to remove\n     * the event listener and prevent memory leaks\n     */\n    disablePostMessageAuth(win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        win.removeEventListener(\"message\", this._hostHandler, false);\n    }\n    /**\n     * Manually refreshes the current `token` and `tokenExpires`.\n     */\n    refreshCredentials(requestOptions) {\n        // make sure subsequent calls to getUser() don't returned cached metadata\n        this._user = null;\n        if (this.username && this.password) {\n            return this.refreshWithUsernameAndPassword(requestOptions);\n        }\n        if (this.clientId && this.refreshToken) {\n            return this.refreshWithRefreshToken();\n        }\n        return Promise.reject(new ArcGISTokenRequestError(\"Unable to refresh token. No refresh token or password present.\", ArcGISTokenRequestErrorCodes.TOKEN_REFRESH_FAILED));\n    }\n    /**\n     * Determines the root of the ArcGIS Server or Portal for a given URL.\n     *\n     * @param url the URl to determine the root url for.\n     */\n    getServerRootUrl(url) {\n        const [root] = cleanUrl(url).split(/\\/rest(\\/admin)?\\/services(?:\\/|#|\\?|$)/);\n        const [match, protocol, domainAndPath] = root.match(/(https?:\\/\\/)(.+)/);\n        const [domain, ...path] = domainAndPath.split(\"/\");\n        // only the domain is lowercased because in some cases an org id might be\n        // in the path which cannot be lowercased.\n        return `${protocol}${domain.toLowerCase()}/${path.join(\"/\")}`;\n    }\n    /**\n     * Returns the proper [`credentials`] option for `fetch` for a given domain.\n     * See [trusted server](https://enterprise.arcgis.com/en/portal/latest/administer/windows/configure-security.htm#ESRI_SECTION1_70CC159B3540440AB325BE5D89DBE94A).\n     * Used internally by underlying request methods to add support for specific security considerations.\n     *\n     * @param url The url of the request\n     * @returns \"include\" or \"same-origin\"\n     */\n    getDomainCredentials(url) {\n        if (!this.trustedDomains || !this.trustedDomains.length) {\n            return \"same-origin\";\n        }\n        return this.trustedDomains.some((domainWithProtocol) => {\n            return url.startsWith(domainWithProtocol);\n        })\n            ? \"include\"\n            : \"same-origin\";\n    }\n    /**\n     * Convenience method for {@linkcode ArcGISIdentityManager.destroy} for this instance of `ArcGISIdentityManager`\n     */\n    signOut() {\n        return ArcGISIdentityManager.destroy(this);\n    }\n    /**\n     * Return a function that closes over the validOrigins array and\n     * can be used as an event handler for the `message` event\n     *\n     * @param validOrigins Array of valid origins\n     */\n    createPostMessageHandler(validOrigins) {\n        // return a function that closes over the validOrigins and\n        // has access to the credential\n        return (event) => {\n            // Verify that the origin is valid\n            // Note: do not use regex's here. validOrigins is an array so we're checking that the event's origin\n            // is in the array via exact match. More info about avoiding postMessage xss issues here\n            // https://jlajara.gitlab.io/web/2020/07/17/Dom_XSS_PostMessage_2.html#tipsbypasses-in-postmessage-vulnerabilities\n            const isValidOrigin = validOrigins.indexOf(event.origin) > -1;\n            // JSAPI handles this slightly differently - instead of checking a list, it will respond if\n            // event.origin === window.location.origin || event.origin.endsWith('.arcgis.com')\n            // For Hub, and to enable cross domain debugging with port's in urls, we are opting to\n            // use a list of valid origins\n            // Ensure the message type is something we want to handle\n            const isValidType = event.data.type === \"arcgis:auth:requestCredential\";\n            // Ensure we don't pass an expired session forward\n            const isTokenValid = this.tokenExpires.getTime() > Date.now();\n            if (isValidOrigin && isValidType) {\n                let msg = {};\n                if (isTokenValid) {\n                    const credential = this.toJSON();\n                    msg = {\n                        type: \"arcgis:auth:credential\",\n                        credential\n                    };\n                }\n                else {\n                    msg = {\n                        type: \"arcgis:auth:error\",\n                        error: {\n                            name: \"tokenExpiredError\",\n                            message: \"Token was expired, and not returned to the child application\"\n                        }\n                    };\n                }\n                event.source.postMessage(msg, event.origin);\n            }\n        };\n    }\n    /**\n     * Validates that a given URL is properly federated with our current `portal`.\n     * Attempts to use the internal `federatedServers` cache first.\n     */\n    getTokenForServer(url, requestOptions) {\n        // requests to /rest/services/ and /rest/admin/services/ are both valid\n        // Federated servers may have inconsistent casing, so lowerCase it\n        const root = this.getServerRootUrl(url);\n        const existingToken = this.federatedServers[root];\n        if (existingToken &&\n            existingToken.expires &&\n            existingToken.expires.getTime() > Date.now()) {\n            return Promise.resolve(existingToken.token);\n        }\n        if (this._pendingTokenRequests[root]) {\n            return this._pendingTokenRequests[root];\n        }\n        this._pendingTokenRequests[root] = this.fetchAuthorizedDomains().then(() => {\n            return request(`${root}/rest/info`, {\n                credentials: this.getDomainCredentials(url)\n            })\n                .then((serverInfo) => {\n                if (serverInfo.owningSystemUrl) {\n                    /**\n                     * if this server is not owned by this portal\n                     * bail out with an error since we know we wont\n                     * be able to generate a token\n                     */\n                    if (!isFederated(serverInfo.owningSystemUrl, this.portal)) {\n                        throw new ArcGISTokenRequestError(`${url} is not federated with ${this.portal}.`, ArcGISTokenRequestErrorCodes.NOT_FEDERATED);\n                    }\n                    else {\n                        /**\n                         * if the server is federated, use the relevant token endpoint.\n                         */\n                        return request(`${serverInfo.owningSystemUrl}/sharing/rest/info`, requestOptions);\n                    }\n                }\n                else if (serverInfo.authInfo &&\n                    this.federatedServers[root] !== undefined) {\n                    /**\n                     * if its a stand-alone instance of ArcGIS Server that doesn't advertise\n                     * federation, but the root server url is recognized, use its built in token endpoint.\n                     */\n                    return Promise.resolve({\n                        authInfo: serverInfo.authInfo\n                    });\n                }\n                else {\n                    throw new ArcGISTokenRequestError(`${url} is not federated with any portal and is not explicitly trusted.`, ArcGISTokenRequestErrorCodes.NOT_FEDERATED);\n                }\n            })\n                .then((serverInfo) => {\n                // an expired token cant be used to generate a new token so refresh our credentials before trying to generate a server token\n                if (this.token && this.tokenExpires.getTime() < Date.now()) {\n                    // If we are authenticated to a single server just refresh with username and password and use the new credentials as the credentials for this server.\n                    if (this.server) {\n                        return this.refreshCredentials().then(() => {\n                            return {\n                                token: this.token,\n                                expires: this.tokenExpires\n                            };\n                        });\n                    }\n                    // Otherwise refresh the credentials for the portal and generate a URL for the specific server.\n                    return this.refreshCredentials().then(() => {\n                        return this.generateTokenForServer(serverInfo.authInfo.tokenServicesUrl, root);\n                    });\n                }\n                else {\n                    return this.generateTokenForServer(serverInfo.authInfo.tokenServicesUrl, root);\n                }\n            })\n                .then((response) => {\n                this.federatedServers[root] = response;\n                delete this._pendingTokenRequests[root];\n                return response.token;\n            });\n        });\n        return this._pendingTokenRequests[root];\n    }\n    /**\n     * Generates a token for a given `serverUrl` using a given `tokenServicesUrl`.\n     */\n    generateTokenForServer(tokenServicesUrl, serverUrl) {\n        return request(tokenServicesUrl, {\n            params: {\n                token: this.token,\n                serverUrl,\n                expiration: this.tokenDuration\n            }\n        })\n            .then((response) => {\n            return {\n                token: response.token,\n                expires: new Date(response.expires - 1000 * 60 * 5)\n            };\n        })\n            .catch((e) => {\n            throw new ArcGISTokenRequestError(e.message, ArcGISTokenRequestErrorCodes.GENERATE_TOKEN_FOR_SERVER_FAILED, e.response, e.url, e.options);\n        });\n    }\n    /**\n     * Returns an unexpired token for the current `portal`.\n     */\n    getFreshToken(requestOptions) {\n        if (this.token && !this.tokenExpires) {\n            return Promise.resolve(this.token);\n        }\n        if (this.token &&\n            this.tokenExpires &&\n            this.tokenExpires.getTime() > Date.now()) {\n            return Promise.resolve(this.token);\n        }\n        if (!this._pendingTokenRequests[this.portal]) {\n            this._pendingTokenRequests[this.portal] = this.refreshCredentials(requestOptions).then(() => {\n                this._pendingTokenRequests[this.portal] = null;\n                return this.token;\n            });\n        }\n        return this._pendingTokenRequests[this.portal];\n    }\n    /**\n     * Refreshes the current `token` and `tokenExpires` with `username` and\n     * `password`.\n     */\n    refreshWithUsernameAndPassword(requestOptions) {\n        const params = {\n            username: this.username,\n            password: this.password,\n            expiration: this.tokenDuration,\n            client: \"referer\",\n            referer: this.referer\n                ? this.referer\n                : typeof window !== \"undefined\" &&\n                    typeof window.document !== \"undefined\" &&\n                    window.location &&\n                    window.location.origin\n                    ? window.location.origin\n                    : /* istanbul ignore next */\n                        NODEJS_DEFAULT_REFERER_HEADER\n        };\n        return (this.server\n            ? request(`${this.getServerRootUrl(this.server)}/rest/info`).then((response) => {\n                return request(response.authInfo.tokenServicesUrl, Object.assign({ params }, requestOptions));\n            })\n            : request(`${this.portal}/generateToken`, Object.assign({ params }, requestOptions)))\n            .then((response) => {\n            this.updateToken(response.token, new Date(response.expires));\n            return this;\n        })\n            .catch((e) => {\n            throw new ArcGISTokenRequestError(e.message, ArcGISTokenRequestErrorCodes.TOKEN_REFRESH_FAILED, e.response, e.url, e.options);\n        });\n    }\n    /**\n     * Refreshes the current `token` and `tokenExpires` with `refreshToken`.\n     */\n    refreshWithRefreshToken(requestOptions) {\n        // If our refresh token expires sometime in the next 24 hours then refresh the refresh token\n        const ONE_DAY_IN_MILLISECONDS = 1000 * 60 * 60 * 24;\n        if (this.refreshToken &&\n            this.refreshTokenExpires &&\n            this.refreshTokenExpires.getTime() - ONE_DAY_IN_MILLISECONDS < Date.now()) {\n            return this.exchangeRefreshToken(requestOptions);\n        }\n        const options = Object.assign({ params: {\n                client_id: this.clientId,\n                refresh_token: this.refreshToken,\n                grant_type: \"refresh_token\"\n            } }, requestOptions);\n        return fetchToken(`${this.portal}/oauth2/token`, options)\n            .then((response) => {\n            return this.updateToken(response.token, response.expires);\n        })\n            .catch((e) => {\n            throw new ArcGISTokenRequestError(e.message, ArcGISTokenRequestErrorCodes.TOKEN_REFRESH_FAILED, e.response, e.url, e.options);\n        });\n    }\n    /**\n     * Update the stored {@linkcode ArcGISIdentityManager.token} and {@linkcode ArcGISIdentityManager.tokenExpires} properties. This method is used internally when refreshing tokens.\n     * You may need to call this if you want update the token with a new token from an external source.\n     *\n     * @param newToken The new token to use for this instance of `ArcGISIdentityManager`.\n     * @param newTokenExpiration The new expiration date of the token.\n     * @returns\n     */\n    updateToken(newToken, newTokenExpiration) {\n        this._token = newToken;\n        this._tokenExpires = newTokenExpiration;\n        return this;\n    }\n    /**\n     * Exchanges an unexpired `refreshToken` for a new one, also updates `token` and\n     * `tokenExpires`.\n     */\n    exchangeRefreshToken(requestOptions) {\n        const options = Object.assign({ params: {\n                client_id: this.clientId,\n                refresh_token: this.refreshToken,\n                redirect_uri: this.redirectUri,\n                grant_type: \"exchange_refresh_token\"\n            } }, requestOptions);\n        return fetchToken(`${this.portal}/oauth2/token`, options)\n            .then((response) => {\n            this._token = response.token;\n            this._tokenExpires = response.expires;\n            this._refreshToken = response.refreshToken;\n            this._refreshTokenExpires = response.refreshTokenExpires;\n            return this;\n        })\n            .catch((e) => {\n            throw new ArcGISTokenRequestError(e.message, ArcGISTokenRequestErrorCodes.REFRESH_TOKEN_EXCHANGE_FAILED, e.response, e.url, e.options);\n        });\n    }\n    /**\n     * ensures that the authorizedCrossOriginDomains are obtained from the portal and cached\n     * so we can check them later.\n     *\n     * @returns this\n     */\n    fetchAuthorizedDomains() {\n        // if this token is for a specific server or we don't have a portal\n        // don't get the portal info because we cant get the authorizedCrossOriginDomains\n        if (this.server || !this.portal) {\n            return Promise.resolve(this);\n        }\n        return this.getPortal().then((portalInfo) => {\n            /**\n             * Specific domains can be configured as secure.esri.com or https://secure.esri.com this\n             * normalizes to https://secure.esri.com so we can use startsWith later.\n             */\n            if (portalInfo.authorizedCrossOriginDomains &&\n                portalInfo.authorizedCrossOriginDomains.length) {\n                this.trustedDomains = portalInfo.authorizedCrossOriginDomains\n                    .filter((d) => !d.startsWith(\"http://\"))\n                    .map((d) => {\n                    if (d.startsWith(\"https://\")) {\n                        return d;\n                    }\n                    else {\n                        return `https://${d}`;\n                    }\n                });\n            }\n            return this;\n        });\n    }\n}\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager}.\n * @internal\n *\n */ /* istanbul ignore next */\nfunction UserSession(options) {\n    console.log(\"DEPRECATED:, 'UserSession' is deprecated. Use 'ArcGISIdentityManager' instead.\");\n    return new ArcGISIdentityManager(options);\n}\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.beginOAuth2}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.beginOAuth2 = function (...args) {\n    console.warn(\"DEPRECATED:, 'UserSession.beginOAuth2' is deprecated. Use 'ArcGISIdentityManager.beginOAuth2' instead.\");\n    return ArcGISIdentityManager.beginOAuth2(...args);\n};\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.completeOAuth2}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.completeOAuth2 = function (...args) {\n    console.warn(\"DEPRECATED:, 'UserSession.completeOAuth2()' is deprecated. Use 'ArcGISIdentityManager.completeOAuth2()' instead.\");\n    if (args.length <= 1) {\n        console.warn(\"WARNING:, 'UserSession.completeOAuth2()' is now async and returns a promise the resolves to an instance of `ArcGISIdentityManager`.\");\n    }\n    return ArcGISIdentityManager.completeOAuth2(...args);\n};\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.fromParent}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.fromParent = function (...args) {\n    console.warn(\"DEPRECATED:, 'UserSession.fromParent' is deprecated. Use 'ArcGISIdentityManager.fromParent' instead.\");\n    return ArcGISIdentityManager.fromParent(...args);\n};\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.authorize}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.authorize = function (...args) {\n    console.warn(\"DEPRECATED:, 'UserSession.authorize' is deprecated. Use 'ArcGISIdentityManager.authorize' instead.\");\n    return ArcGISIdentityManager.authorize(...args);\n};\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.exchangeAuthorizationCode}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.exchangeAuthorizationCode = function (...args) {\n    console.warn(\"DEPRECATED:, 'UserSession.exchangeAuthorizationCode' is deprecated. Use 'ArcGISIdentityManager.exchangeAuthorizationCode' instead.\");\n    return ArcGISIdentityManager.exchangeAuthorizationCode(...args);\n};\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.fromCredential}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.fromCredential = function (...args) {\n    console.log(\"DEPRECATED:, 'UserSession.fromCredential' is deprecated. Use 'ArcGISIdentityManager.fromCredential' instead.\");\n    console.warn(\"WARNING:, 'UserSession.fromCredential' now requires a `ServerInfo` object from the JS API as a second parameter.\");\n    return ArcGISIdentityManager.fromCredential(...args);\n};\n/**\n * @deprecated - Use {@linkcode ArcGISIdentityManager.deserialize}.\n * @internal\n *\n */ /* istanbul ignore next */\nUserSession.deserialize = function (...args) {\n    console.log(\"DEPRECATED:, 'UserSession.deserialize' is deprecated. Use 'ArcGISIdentityManager.deserialize' instead.\");\n    return ArcGISIdentityManager.deserialize(...args);\n};\nexport { UserSession };\n//# sourceMappingURL=ArcGISIdentityManager.js.map",":host {\n  $color-green-forest: #31872E;\n  $color-white: #ffffff;\n  \n  background-color: var(--calcite-color-foreground-1);\n  color: var(--calcite-color-text-2);\n  display: block;\n  // padding: 20px;\n  overflow: auto;\n  div.banner {\n    display: block;\n    cursor: pointer;\n    /* padding: 0 20px; */\n    /* font-weight: 700; */\n    line-height: 60px;\n\n  }\n  .task-num {\n    display: inline-block;\n    height: 16px;\n    text-align: center;\n    border-radius: 16px;\n    // font-size: $font-size1;\n    border-color: $color-green-forest;\n    background-color: $color-green-forest;\n    margin-left: 4px;\n    color: $color-white;\n    line-height: 16px !important;\n    // padding: 1px 5px;\n    transition: all .25s cubic-bezier(.18, .89, .32, 1.28);\n\n    span {\n        position: relative;\n        line-height: 1 !important;\n        color: $color-white;\n        padding: 1px 4px;\n    }\n\n    // :host-context(html[dir='rtl']) & {\n    //     margin-left: unset;\n    //     margin-right: 4px;\n    // }\n\n    &.active {\n        -webkit-transform: scale(1.2);\n        transform: scale(1.2);\n    }\n  } \n  .error-message {\n   word-break: break-word; \n  }\n}\n\n:host-context([dir=\"rtl\"]) {\n  .task-num {\n    margin-left: unset!important;\n    margin-right: 4px;\n  }\n}\n\n","import { Component, Fragment, Host, Prop, Watch, State, h, Event, EventEmitter } from '@stencil/core';\n// import { ReportBase } from '../report-base/report-base';\nimport { PropsService } from '../../services/props.service';\nimport { EsriJobStatusType, ReportService } from '../../services/report.service';\nimport { UtilService } from '../../services/util.service';\nimport { TranslateService } from '../../services/translate.service';\nimport { StateService } from '../../services/state.service';\nimport { ArcGISIdentityManager, request, IRequestOptions } from '@esri/arcgis-rest-request';\n\n@Component({\n  tag: 'feature-report',\n  styleUrl: 'feature-report.scss',\n  shadow: true,\n})\nexport class FeatureReport {\n\n  // token \n  @Prop() token!: string;\n\n  @Prop() portalUrl?: string;\n\n  @Prop() apiUrl?: string;\n\n  // Feature layer or table URL. required\n  @Prop() featureLayerUrl!: string;\n\n  @Prop() surveyItemId?: string;\n\n  @Prop() templateItemId?: string;\n  @Watch('templateItemId')\n  templateItemIdChanged(newVal) {\n    PropsService.setProps({templateItemId: newVal});\n  }\n\n  @Prop() queryParameters!: string;  // Object string\n  @Watch('queryParameters')\n  queryParametersChanged(newVal) {\n    PropsService.setProps({\n      queryParameters: newVal\n    });\n    return this.reportService.getFeatureCount().then(()=> {\n      this.stateService.notifyDataChanged('update-features-preview', {value: undefined});  // no not use {value: null} here.\n    })\n  }\n  \n  @Prop() mergeFiles: 'none' | 'nextPage' | 'continuous';  \n  @Watch('mergeFiles')\n  mergeFilesChanged(newVal) {\n    PropsService.setProps({\n      mergeFiles: newVal\n    });\n  }\n\n  @Prop() outputFormat: string;\n  @Watch('outputFormat')\n  outputFormatChanged(newVal) {\n    PropsService.setProps({outputFormat: newVal});\n    this.outputFormat = PropsService.outputFormat;\n  }\n\n  \n  @Prop() outputReportName: string;\n  \n  @Prop() outputPackageName: string;\n  \n  @Prop() packageFiles: boolean | string;\n  \n  @Prop() uploadInfo: string;   // Object string\n  \n  @Prop() webmapItemId: string;\n  \n  @Prop() mapScale: string;\n\n  @Prop() locale?: string;  \n  @Watch('locale')\n  localeChanged(newVal) {\n    this.localeChangeHandler(newVal)\n    UtilService.getService().setDir();\n  }\n\n  @Prop() utcOffset?: string;\n\n  /**\n   * ui parameters\n   */\n  @Prop() show: string;\n  @Watch('show')\n  showChanged(newValue) {\n    // console.log(newValue, oldValue);\n    PropsService.setProps({show: newValue});\n    this.visibleConf = this.generateVisibleElems();\n    this.reportService.setHelperObj({\n      visibleConf: this.visibleConf\n    });\n  }\n\n  @Prop() hide: string;\n  @Watch('hide')\n  hideChanged(newVal) {\n    PropsService.setProps({hide: newVal});\n    this.visibleConf = this.generateVisibleElems();    \n    this.reportService.setHelperObj({\n      visibleConf: this.visibleConf\n    });\n  }\n\n  @Prop() inputFeatureTemplate: string;\n  @Watch('inputFeatureTemplate')\n  inputFeatureTemplateChanged(newVal) {\n    PropsService.setProps({inputFeatureTemplate: newVal});\n    this.stateService.notifyDataChanged('update-features-preview', {value: this.inputFeatureTemplate});\n  }\n  @Prop() label: string;\n  @Watch('label')\n  labelChanged(newVal) {\n    PropsService.setProps({label: newVal});\n    return Promise.resolve(true)    \n    .then(() => {\n      return TranslateService.getService().getTranslate();\n    })\n    .then((res) => {\n      const langTasks = res.customPrint.recentTasks;\n      this.langCustomPrint = res.customPrint;\n      this.langTasks = langTasks;\n      this.langCommon = res.common;\n      this.stateService.notifyDataChanged('locale-data-changed', {value: res});\n    });\n  }\n\n  @Prop() reportTemplateIds: string;\n  @Watch('reportTemplateIds')\n  reportTemplateIdsChanged(newVal) {\n    PropsService.setProps({\n      reportTemplateIds: newVal\n    });\n    // the select segment is hidden, update the report templates\n    this.updateTemplateList();\n  }\n\n  @Prop() clientId: string;\n\n  @Prop() requestSource: string;\n  @Watch('requestSource')\n  requestSourceChanged(newVal) {\n    PropsService.setProps({\n      requestSource: newVal\n    });\n  }\n\n  // @Prop() redirectUri: string; // must be the same with current url\n\n  \n  @Event() userInfoGetted: EventEmitter<any>;\n  @Event() i18nStringUpdated: EventEmitter<any>;\n  @Event() _credentialGetted: EventEmitter<any>; // internal\n  \n\n  // @Method()\n  // convertToSupportedLang(locale: string) {\n  //   return Promise.resolve(PropsService.convertToSupportedLang(locale));\n  // }\n\n  // @Method()\n  // getI18nCommonString() {\n  //   return Promise.resolve(this.langCommon);\n  // }\n\n  /**\n   * the following parameters are geneareted by the main parameters, ie:\n   * the where is genereated from queryParameters\n   * the username is generated from token \n   */\n  @State() where: string;    // todo: remove it\n  @State() username?: string;\n  @State() state: string = 'generate-report';\n  @State() visibleConf: string[] = [];\n  @State() checkingList: string[] = [];\n  @State() jobs: any[] = [];\n  @State() error: any;\n  @State() langTasks: any;\n  @State() langCommon: any;\n  @State() langCustomPrint: any;\n  @State() surveyItemInfo: any;\n\n  private stateService: StateService =  StateService.getService();\n  private reportService: ReportService = ReportService.getService();\n\n  componentWillLoad() {\n    PropsService.setProps(this);\n    this.portalUrl = PropsService.portalUrl;\n    this.outputFormat = PropsService.outputFormat;\n    return Promise.resolve(true)    \n    .then(() => {\n      return TranslateService.getService().getTranslate();\n    })\n    .then((res) => {\n      const langTasks = res.customPrint.recentTasks;\n      this.langCustomPrint = res.customPrint;\n      this.langTasks = langTasks;\n      this.langCommon = res.common;\n      this.i18nStringUpdated.emit({locale: PropsService.locale, i18n: this.langCommon});\n      if (!this.isOAuthCallbackpage()) {\n        if (!this.featureLayerUrl) {\n          this.error = {html: res.customPrint.missingRequiredParamsErr.replace('${$paramName}', `featureLayerUrl`)};\n          throw new Error('featureLayerUrl is required.');\n        }\n        if (!this.queryParameters) {\n          this.error = {html: res.customPrint.missingRequiredParamsErr.replace('${$paramName}', `queryParameters`)};\n          throw new Error('queryParameters is required.');\n        }\n      }\n    })\n    .then(() => {\n      if (this.token) {\n        this.init();\n        return true;\n      } else if (!this.token) {\n        // the callback page navigated from the oauth page\n        if (this.isOAuthCallbackpage()) {\n          /**\n           * the code is added from the oauth page navigation, as this is a web component, we can't use a dedicated oauth callback page, we have to use the original page,\n           * but if set the redirectUri as window.location.href here, the completeOAuth2 request will return invalid redirectUri error, because the url parameter has 'codes' and 'state'\n           * in fact, we didn't know what the correct redirectUri is, because it's not set by us, we are not the client id owner.\n           * so, maybe we should not call the ArcGISIdentityManager.beginOAuth2() here.\n           * Need a discussion with team.\n           */\n          const portalRest = `${this.portalUrl}/sharing/rest`;\n          const url = new URL(window.location.href);\n          const redirect_url = `${url.origin}${url.pathname}?portalUrl=${this.portalUrl}&isOAuthCallback=true`;\n          // #749, the redirect_url in completeOAuth2 and beginOAuth2 must be the same.\n          ArcGISIdentityManager.completeOAuth2({portal: portalRest, popup: true, clientId: this.clientId, redirectUri: redirect_url});\n          return;\n        } else {\n          // there is a bug in the platformSelf function inside of the @esri/arcgis-rest-request: the request: the \"withCredentials\" is from \n          // platformSelf(this.clientId, 'https://localhost:3333/', this.portalUrl).then(response => {\n          const requestUrl = `${this.portalUrl}/sharing/rest/oauth2/platformSelf?f=json`;\n          const param: IRequestOptions = {\n            httpMethod: 'POST',\n            headers: {\n              \"X-Esri-Auth-Client-Id\": this.clientId,\n              \"X-Esri-Auth-Redirect-Uri\": window.location.href\n            },\n            params: {\n              f: 'json'\n            },\n            credentials: 'include'\n          };\n          return request(requestUrl, param).then((response) => {\n            if (response.expires_in) {\n              response.expires = new Date().valueOf() + response.expires_in * 1000 - 1000 * 5;\n              delete response.expires_in;\n            }\n\n            this._credentialGetted.emit(response);\n            this.token= response.token;\n              PropsService.setProps(this);\n              this.init();\n              return true;\n            }).catch(() =>{\n              this.state = 'login';\n              // this.switchState('login');\n              // (document.querySelector('#login-modal') as any).open = true;\n              // return this.waitingUserLogin();\n            })\n      \n          }\n      }\n    }).catch((e) => {\n      console.error(e);\n    })\n\n  }\n\n  /**\n   * init the component\n   * before enter in this function, the token prop must be ready\n   */\n  init() {\n    // init the constructor of the props service\n    const utilService: UtilService = UtilService.getService();\n\n    this.stateService.subscribe('job-complete', (job) => {\n      const idx = this.checkingList.indexOf(job.jobId);\n      if (idx >= 0) {\n        if (job.jobStatus === EsriJobStatusType.partialSucceeded || job.jobStatus === EsriJobStatusType.succeeded) {\n          if (job?.resultInfo?.resultFiles) {\n            this.checkingList.splice(idx, 1);\n            this.checkingList = [].concat(this.checkingList);\n            this.reportService.downloadReport(job);\n          }\n        }\n      }\n    });\n    this.stateService.subscribe('show-error', (err) => {\n      this.error = err;\n    });\n\n    return Promise.resolve(true)\n    .then(() => {\n      // PropsService.setProps(this);\n      if (this.uploadInfo) {\n        this.reportService.setParamCache({\n          uploadInfo: JSON.parse(this.uploadInfo)\n        });\n      }\n      return true;\n    })\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    // .then((res) => {\n    //   const langTasks = res.customPrint.recentTasks;\n    //   this.langTasks = langTasks;\n    // })\n    .then(() => {\n      return utilService.getPortalInfo();\n    }).then((portalInfo: any) => {\n      /**\n       * check canCreateItem privilege\n       */\n      \n      const canCreateItem = portalInfo.user.privileges.includes('portal:user:createItem');\n      this.reportService.setHelperObj({canCreateItem: canCreateItem});\n      this.userInfoGetted.emit(portalInfo.user);\n      if (!this.locale) {\n        const newLocale = PropsService.getLocale({\n          userInfo: portalInfo.user,\n          portalInfo: portalInfo\n        });\n        if (newLocale !== PropsService.locale) {\n          this.localeChangeHandler(newLocale);\n        }\n      } else {\n        this.i18nStringUpdated.emit({locale: this.locale, i18n: this.langCommon});\n      }\n      UtilService.getService().setDir();\n      \n      // show elements after user info is gotten, because the user name is needed for the report setting section.\n      this.visibleConf = this.generateVisibleElems();\n      this.reportService.setHelperObj({\n        visibleConf: this.visibleConf\n      });\n      this.stateService.notifyDataChanged('portal-info-updated');\n      if (PropsService.surveyItemId) {\n        return utilService.getSurveyItemInfo(PropsService.surveyItemId);\n      }\n      // return true;\n    })\n    .catch((e) => {\n      this.reportService.setHelperObj({surveyIsInvalid: true});\n      this.surveyItemInfo = {};\n\n      this.reportService.manageError(e, 'surveyItemId');\n    })\n    .then((surveyItemInfo) => {\n      this.surveyItemInfo = surveyItemInfo;\n      this.reportService.setHelperObj({surveyIsInvalid: false});\n      this.reportService.initParamCache();\n      return this.reportService.getFeatureCount();\n    })\n    .then(() => {\n      this.stateService.notifyDataChanged('update-features-preview', {value: undefined});\n      // if the template chooser component will hidden, get the templates\n      // todo: seems we only need to choose the selected template?\n      return this.updateTemplateList()\n    })\n    .catch((err) => {\n      if (err.message && !err.html) {\n        err.html = err.message;\n      }\n      this.error = err;\n    });\n  }\n\n  /**\n   * todo: when the component is embeded in an iframe, will hit the same-origin policy problem:\n   * the beginOAuth2 is called in iframe, it will write some info(stateId) to localStorage, but the completeOAuth2 will called in a stanalone page, it cann't read the stateId.\n   * @returns \n   */\n  startLogin() {\n    const portalRest = `${this.portalUrl}/sharing/rest`;\n    const url = new URL(window.location.href);\n    const redirect_url = `${url.origin}${url.pathname}?portalUrl=${this.portalUrl}&isOAuthCallback=true`;\n    return ArcGISIdentityManager.beginOAuth2({portal: portalRest, popup: true, clientId: this.clientId, redirectUri: redirect_url}).then((idm: ArcGISIdentityManager) => {\n      this.token= idm.token;\n      PropsService.setProps(this);\n      this.switchState('generate-report');\n      this.init();\n      this._credentialGetted.emit(idm.toCredential());\n      return true;\n     })  \n  }\n\n  isOAuthCallbackpage() {\n    const url = new URL(window.location.href);\n    return (url.search + '').includes(\"isOAuthCallback=true\");\n  }\n\n  /**\n   * locale change handler\n   * @param newLocale \n   * @returns \n   */\n  localeChangeHandler(newLocale) {\n    PropsService.setProps({locale: newLocale});\n    return Promise.resolve(true)    \n    .then(() => {\n      return TranslateService.getService().getTranslate();\n    })\n    .then((res) => {\n      const langTasks = res.customPrint.recentTasks;\n      this.langCustomPrint = res.customPrint;\n      this.langTasks = langTasks;\n      this.langCommon = res.common;\n      this.stateService.notifyDataChanged('locale-data-changed', {value: res});\n      this.i18nStringUpdated.emit({locale: newLocale, i18n: this.langCommon});\n\n      return true;\n    });\n  }\n\n  /**\n   * get visible elements\n   * @returns \n   */\n  generateVisibleElems() {\n    const elems = ['inputFeatures', 'selectTemplate', 'fileOptions', 'reportName', 'saveToAGSAccount', 'outputFormat', 'showCredits', 'recentReports'];\n    \n    let result = [];\n    if (this.show?.length) {\n      result = this.show.split(',');\n    } else if (this.hide?.length) {\n      const hides = this.hide.split(',');\n      result = elems.filter((ele) => {\n        return hides.indexOf(ele) < 0;\n      })\n    } else {\n      result = elems;\n    }\n    if (result.indexOf('fileOptions') < 0 && result.indexOf('reportName') < 0 && result.indexOf('saveToAGSAccount') < 0 && result.indexOf('outputFormat') < 0) {\n      //\n    } else {\n      result.push('reportSetting');\n    }\n    return [].concat(result);\n  }\n\n  switchState(state) {\n    this.state = state;\n  }\n\n  /**\n   * update template list\n   * @returns \n   */\n  updateTemplateList() {\n    return Promise.resolve(true).then(() => {\n      if (this.visibleConf.indexOf('selectTemplate') < 0 ) {\n        const param = this.reportTemplateIds === undefined ? {} : {templateIds: this.reportTemplateIds}\n        return this.reportService.getReportTemplates(this.surveyItemId, param);\n      }\n    })\n    .then((templates) => {\n      if (templates) {\n        this.reportService.setHelperObj({\n          printTemplates: templates\n        });\n        this.stateService.notifyDataChanged('print-templates-updated', {value: templates});\n        // set the first template as the default template if the templateItemId is not provided.\n\n        const paramStore: any = this.reportService.getParamCache();\n        const templateItemId = paramStore.templateItemId || PropsService.templateItemId;\n        if (!templateItemId && templates.length) {\n          const selectedTemplateId = templates[0].id;\n          this.reportService.setParamCache({\n            templateItemId: selectedTemplateId\n          });\n          // this.selectedTemplateChange.emit(this.selectedTemplateId);\n        }\n      }\n    });\n  }\n\n  generateReportHander(evt) {\n    const detail = evt.detail;\n    this.jobs = detail.jobs;\n    // this.checkingList.push()\n    this.checkingList = [...this.checkingList, evt.detail.jobId];\n    // if (this.visibleConf.indexOf('recentReports') >= 0) {\n    this.state = 'report-list';\n    // }\n    // this.checkingList = [].concat(detail.checkingList || []);\n  }\n\n  render() {\n    return (\n      <Host>\n        <calcite-panel>\n          <div style={{display: (this.state === 'generate-report' && this.token) ? 'block': 'none'}}>\n            {/* features preview */}\n            \n            {this.visibleConf.indexOf('inputFeatures') <0 ? '' : <features-preview queryParameters={this.queryParameters} inputFeatureTemplate={this.inputFeatureTemplate}></features-preview>}\n            \n            {/* select print template */}\n            {this.visibleConf.indexOf('selectTemplate') <0 || !this.surveyItemInfo ? '' : <template-chooser selectedTemplateId={this.templateItemId} templateIds={this.reportTemplateIds}></template-chooser>}\n            \n            {this.visibleConf.indexOf('reportSetting') <0 ? '' : <report-settings visibleElems={this.visibleConf} mergeFiles={this.mergeFiles} outputFormat={this.outputFormat} fileName={this.outputReportName}></report-settings>}\n            \n            <report-generator visibleConf={this.visibleConf} templateItemId={this.templateItemId} onReportCreated={(evt) => {this.generateReportHander(evt)}}></report-generator>\n            \n            {/* {this.visibleConf.indexOf('recentReports') <0 ? '' : <view-report-link checkingList={this.checkingList} onViewReportLinkClicked={() => this.switchState('report-list')}></view-report-link>} */}\n            \n            {/* recent tasks action */}\n            {this.visibleConf.indexOf('recentReports') <0 ?\n              null: \n              <div class=\"banner\">        \n                {/* <calcite-action onClick={() => this.linkClicked()} text={`${this.langTasks?.label} ${this.checkingList?.length || ''}`} icon=\"chevrons-right\" text-enabled></calcite-action> */}\n                <calcite-action onClick={() => this.switchState('report-list')} icon=\"chevrons-right\" text-enabled>\n                  <span>{this.langTasks?.label}</span>\n                  {this.checkingList?.length ? \n                  <Fragment>\n                    <div class=\"task-num\" id='task-num'>\n                      <span>{`${this.checkingList.length || ''}`}</span>\n                    </div>\n\n                    <calcite-tooltip label={this.langTasks.panelNumberTip} reference-element=\"task-num\">\n                      <span>{this.langTasks.panelNumberTip}</span>\n                    </calcite-tooltip>\n                    </Fragment>\n                    : null\n                  }\n                </calcite-action>\n\n                {/* <calcite-action onClick={() => this.linkClicked()} text={this.langTasks?.label} icon=\"chevrons-right\" text-enabled></calcite-action> */}\n              </div> \n            }\n          </div>\n            \n          { this.token ? \n            <task-list style={{display: (this.state === 'report-list') ? 'block': 'none'}} jobs={this.jobs} onGoBackClicked={() => {this.state = 'generate-report'}}></task-list> \n          : ''}\n          \n          {\n            this.error ?\n            <calcite-alert slot=\"alerts\" open onCalciteAlertClose={() => {this.error = null;}} label={this.error.html} icon kind={this.error.alertType || 'danger'} placement=\"top\" scale=\"s\">\n              {/* <div slot=\"title\">{this.error.html}</div> */}\n              <div class=\"error-message\" slot=\"message\">\n                {this.error.html}\n                {this.error.detail ?\n                  <p innerHTML={this.error.detail}>\n                  </p>\n                  : null\n                }\n                </div>\n              {/* <calcite-link slot=\"link\">Link</calcite-link> */}\n            </calcite-alert>\n            : null\n          }\n          {this.state === 'login' && !PropsService.token ? \n          <calcite-modal aria-labelledby=\"modal-title\" id=\"login-modal\" outside-close-disabled=\"true\" scale=\"s\" width-scale=\"s\" close-button-disabled=\"true\" open=\"true\">\n            <div slot=\"header\" id=\"modal-title\">\n            {this.langCommon?.signIn}\n            </div>\n            <div slot=\"content\">\n              <calcite-label style={{height: '100px'}}>\n                <p>{this.langCommon?.signInMsg}</p>\n                <calcite-button id=\"reportLoginBtn\" kind=\"brand\" onClick={() => this.startLogin()}>\n                  {this.langCommon?.signIn}\n                </calcite-button>\n              </calcite-label>\n            </div>\n          </calcite-modal>\n          : ''}\n        </calcite-panel>\n      <slot></slot>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}