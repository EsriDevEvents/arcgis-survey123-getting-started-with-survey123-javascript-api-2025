{"file":"features-preview.report-generator.report-settings.task-list.template-chooser.entry.cjs.js","mappings":"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","names":["getPortalUrl","request","ReportService","UtilService","StateService","TranslateService","PropsService","queryFeatures","h","Host","Fragment","index"],"sources":["node_modules/@esri/arcgis-rest-portal/dist/esm/items/helpers.js","node_modules/@esri/arcgis-rest-portal/dist/esm/items/content.js","src/components/features-preview/features-preview.scss?tag=features-preview&encapsulation=shadow","src/components/features-preview/features-preview.tsx","src/components/report-generator/report-generator.scss?tag=report-generator&encapsulation=shadow","src/components/report-generator/report-generator.tsx","src/components/report-settings/report-settings.scss?tag=report-settings&encapsulation=shadow","src/components/report-settings/report-settings.tsx","src/components/task-list/task-list.scss?tag=task-list&encapsulation=shadow","src/components/task-list/task-list.tsx","src/components/template-chooser/template-chooser.scss?tag=template-chooser&encapsulation=shadow","src/components/template-chooser/template-chooser.tsx"],"sourcesContent":["/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * `requestOptions.owner` is given priority, `requestOptions.item.owner` will be checked next. If neither are present, `authentication.getUserName()` will be used instead.\n */\nexport function determineOwner(requestOptions) {\n    if (requestOptions.owner) {\n        return Promise.resolve(requestOptions.owner);\n    }\n    else if (requestOptions.item && requestOptions.item.owner) {\n        return Promise.resolve(requestOptions.item.owner);\n    }\n    else if (requestOptions.authentication &&\n        requestOptions.authentication.getUsername) {\n        return requestOptions.authentication.getUsername();\n    }\n    else {\n        return Promise.reject(new Error(\"Could not determine the owner of this item. Pass the `owner`, `item.owner`, or `authentication` option.\"));\n    }\n}\n/**\n * checks if the extent is a valid BBox (2 element array of coordinate pair arrays)\n * @param extent\n * @returns\n */\nexport function isBBox(extent) {\n    return (Array.isArray(extent) &&\n        Array.isArray(extent[0]) &&\n        Array.isArray(extent[1]));\n}\n/**\n * Given a Bbox, convert it to a string. Some api endpoints expect a string\n *\n * @param {BBox} extent\n * @return {*}  {string}\n */\nexport function bboxToString(extent) {\n    return extent.join(\",\");\n}\n//# sourceMappingURL=helpers.js.map","import { request } from \"@esri/arcgis-rest-request\";\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\nimport { determineOwner } from \"./helpers.js\";\n/**\n * Returns a listing of the user's content. If the `username` is not supplied, it defaults to the username of the authenticated user. If `start` is not specified it defaults to the first page.\n *\n * If the `num` is not supplied it is defaulted to 10. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/user-content.htm) for more information.\n *\n * ```js\n * import { getUserContent } from \"@esri/arcgis-rest-portal\";\n *\n * getUserContent({\n *    owner: 'geemike',\n *    folderId: 'bao7',\n *    start: 1,\n *    num: 20,\n *    authentication\n * })\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise<IUserContentResponse>\n */\nexport const getUserContent = (requestOptions) => {\n    const { folderId: folder, start = 1, num = 10, authentication } = requestOptions;\n    const suffix = folder ? `/${folder}` : \"\";\n    return determineOwner(requestOptions)\n        .then((owner) => `${getPortalUrl(requestOptions)}/content/users/${owner}${suffix}`)\n        .then((url) => request(url, {\n        httpMethod: \"GET\",\n        authentication,\n        params: {\n            start,\n            num\n        }\n    }));\n};\n//# sourceMappingURL=content.js.map",":host {\n  display: block;\n  min-height: 200;\n  padding: 0 0.75rem;\n  background-color: var(--calcite-color-foreground-1);\n  color: var(--calcite-color-text-2);\n  .heading {\n    margin-inline: 0px;\n    margin-block: 1.25rem 1rem;\n    font-size: var(--calcite-font-size-0);\n    line-height: 1.25rem;\n    font-weight: var(--calcite-font-weight-medium);\n  }\n}\n","import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { queryFeatures, IQueryFeaturesResponse } from '@esri/arcgis-rest-feature-service';\nimport { PropsService } from '../../services/props.service';\nimport { ReportService } from '../../services/report.service';\nimport { TranslateService } from '../../services/translate.service';\nimport { UtilService } from '../../services/util.service';\nimport { StateService } from '../../services/state.service';\n// import { ArcGISIdentityManager } from '@esri/arcgis-rest-request';\n\n@Component({\n  tag: 'features-preview',\n  styleUrl: 'features-preview.scss',\n  shadow: true,\n})\nexport class FeaturesPreview {\n\n  // @Prop() langObj?: any;\n  @Prop() queryParameters?: string;\n  /**\n   * Defines how a feature displays in the “Input feature” section. \n   * Use {<fieldName>} to refer to a specific attribute of the feature like in MapViewer. \n   * For example, {countryName}, population: {pop2000} -> “China, population: 1,411,750,000”.\n   */\n  @Prop() inputFeatureTemplate?: string;\n\n  @State() featureCount: number = 0;\n  @State() featureStr: string = '';\n  \n  @State() translator: any;\n  @State() reportLang: any;\n  @State() commonLang: any;\n  private reportService: ReportService = ReportService.getService();\n  private utilService: UtilService = UtilService.getService();\n  private stateService: StateService = StateService.getService();\n\n  componentWillLoad() {\n    this.stateService.subscribe('update-features-preview', (newVal) => {\n      if (newVal !== undefined) {\n        this.inputFeatureTemplate = newVal\n      }\n      this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n      this.init();\n    });\n\n    return Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.translator = res;\n      this.initTranslateData(res);\n      this.stateService.subscribe('locale-data-changed', (data) => {\n        this.initTranslateData(data);\n      });\n    // })\n    // .then(() => {\n    //   return this.init()\n    }).catch((err) => {\n      this.reportService.showError(err);\n    })\n  }\n\n  initTranslateData(res) {\n    this.translator = res;\n    this.commonLang = res?.common;\n    this.reportLang = res?.customPrint;\n  }\n\n  /**\n   * @returns \n   */\n  init() {\n    let displayFields = [];\n    return this.getDisplayFields()\n    .then((fields) => {\n      displayFields = fields;\n      let outFields = [];\n      // if (displayFields[0] === '*') {\n      //   outFields = ['*'];\n      // } else {\n      outFields = displayFields;\n      // }\n      /**\n       * query features\n       */\n      const queryParms: any = JSON.parse(this.queryParameters);\n      let resultRecordCount = 10;\n      if (queryParms.resultRecordCount < 10) {\n        resultRecordCount = queryParms.resultRecordCount\n      }\n\n      // the order by fields may be '||EditDate DESC, objectid ASC', but it is not supported by rest api\n      if (queryParms.orderByFields) {\n        queryParms.orderByFields = queryParms.orderByFields.replace('||', '');\n      }\n      const params = Object.assign({\n        url: PropsService.featureLayerUrl,\n        authentication: PropsService.token,   // todo: pass the portalUrl\n        outFields: outFields,\n        resultRecordCount: resultRecordCount\n      }, queryParms);\n\n      const where = 'where' in params ? params.where : null\n      const objectIds = 'objectIds' in params ? params.objectIds: null\n      const additionalParams: any  = {\n\n      };\n      if (where !== null) {\n        additionalParams.where = where;\n      }\n      if (objectIds != null) {\n        additionalParams.objectIds = objectIds;\n      }\n      if (!objectIds && !where) {\n        additionalParams.where = '1<>1'; // if no objectIds and where, set where as '1<>1' to avoid requesting error\n        delete additionalParams.objectIds\n      }\n\n      params.params = additionalParams;\n      delete params.where;\n      delete params.objectIds;\n\n      return queryFeatures(params);\n    })\n    .then((result: IQueryFeaturesResponse) => {\n      // no feature\n      if (this.featureCount === 0) {\n        this.featureStr = this.commonLang.noResults;\n        return true;\n      }\n\n      // generate the display string\n      const fields = result.fields || [];\n      const fieldMapping = {};\n      fields.forEach((field) => {\n        fieldMapping[field.name] = field;\n      });\n      const displayCount = this.featureCount > 10 ? 10 : this.featureCount;\n      const displayFeats = result.features.splice(0, displayCount);\n      // give a default display fields(the first four fields)\n      // if (displayFields[0] === '*') {\n      //   displayFields = this.getDisplayFields(fields);\n      // }\n\n      this.featureStr = displayFeats.map((feat) => {\n        let innerStr = this.inputFeatureTemplate;\n        displayFields.forEach((field) => {\n          const val = this.utilService.formatFieldVal(fieldMapping[field], feat.attributes[field]);\n          innerStr = innerStr.replace(`{${field}}`, val);\n        });\n        return innerStr;\n\n      }).join('<br>');\n      if (this.featureCount > 10) {\n        this.featureStr += `<br>...(${this.utilService.formatNumber(this.featureCount - 10)} ${this.commonLang.more || 'more'})`;\n      }\n\n      // console.log(this.featureCount , this.featureStr);\n      return true;\n    }).catch((err) => {\n      this.reportService.showError(err);\n    })\n  }\n  /**\n   * get display fields\n   * @returns \n   */\n  private getDisplayFields() {\n    let resultFields = [];\n    return this.reportService.getLayerJson().then((layerJson) => {\n      if (!this.inputFeatureTemplate) {\n        // auto generate a default inputFeatureTemplate, show the displayField\n        if (layerJson.displayField) {\n          // todo: how about the displayField is a expression?\n          this.inputFeatureTemplate = '{' + layerJson.displayField + '}';\n          resultFields = [layerJson.displayField];\n        } else {\n          const fields = layerJson.fields || [];\n          const spatialFields = Object.keys(layerJson.editFieldsInfo || {}).map((key) => {\n            return layerJson.editFieldsInfo[key];\n          }).concat([layerJson.objectIdField || '', layerJson.globalIdField || '']);\n          \n          \n          const firstStringField = fields.find((field) => {\n            return !spatialFields.includes(field.name) && field.type === 'esriFieldTypeString';\n          });\n\n          const firstNumberField = fields.find((field) => {\n            return !spatialFields.includes(field.name) && this.utilService.isNumberField(field);\n          });\n\n          const firstAnyField = fields.find((field) => {\n            return !spatialFields.includes(field.name) && !this.utilService.isNumberField(field) && field.type !== 'esriFieldTypeString';\n          });\n\n          // priority: first string field > first number field > first other field.\n          const defaultField = firstStringField || firstNumberField || firstAnyField || fields[0];\n\n          if (defaultField) {\n            this.inputFeatureTemplate = '{' + defaultField.name +  '}';\n            resultFields = [defaultField.name];\n          } else {\n            // show the first four field\n            // resultFields = (fields.length > 3 ? fields.slice(0, 4) : fields).map((field) => {\n            //   return field.name;\n            // }); \n            // this.inputFeatureTemplate = resultFields.map((fieldName) => {\n            //   return '{' + fieldName +  '}';\n            // }).join(',');\n          }\n        }\n        return resultFields;\n      } else {\n        const fields = layerJson.fields || [];\n        const matches = this.inputFeatureTemplate.match(/\\{.*?\\}/g);\n        (matches || []).forEach((match: any) => {\n          const curName = (match ).substring(1, match.length - 1)\n          const isValidField = fields.find((field) => {\n            return field.name === curName\n          });\n          if (resultFields.indexOf(curName) < 0 && isValidField) {\n            resultFields.push(curName);\n          }\n        });\n        if (!resultFields.length) {\n          resultFields = [layerJson.objectIdField || 'objectid']; \n        }\n        return resultFields;\n  \n      }\n    })\n  }\n\n\n  render() {\n    return (\n      <Host>\n        <div>\n          <div class=\"heading\">{this.translator?.customPrint?.inputFeatures} ({this.featureCount})</div>\n          <div innerHTML={this.featureStr}></div>\n          {/* <calcite-input type='textarea' readOnly='true' placeholder=\"Preview the features\" value={featureStr}></calcite-input> */}\n        </div>\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  padding: 0 0.75rem;\n  display: block;\n  // todo: move to a shared scss file\n  $color-black-haze:#F7F8F8;\n  $color-blue-eastern: #1C99BC;\n  $color-gray-dusty : #979797;\n  .clickable-text {\n    cursor: pointer;\n    // color: $color-blue-eastern;\n\n    // color: var(--calcite-color-text-1);\n    // text-decoration: underline solid var(--calcite-color-text-1); // $color-blue-eastern;\n    font-weight: normal;\n  \n    &:hover {\n      // color: $color-blue-eastern;\n      // text-decoration: underline solid $color-blue-eastern;\n    }\n  }\n\n  calcite-notice {\n    margin-top: 6px;\n  }\n\n  .credits-info {\n    // background: $color-black-haze;\n    margin: 10px 0 10px 0;\n    padding: 10px 0;\n    background-color: var(--calcite-color-foreground-3);\n    color: var(--calcite-color-text-2);\n    display: flex;\n    justify-content: space-between;\n    // height: 39px;\n    >div{\n      margin: 0px 10px;\n    }\n    .show-credits {\n        display: inline-flex;\n        align-items: center;\n      //   position: relative;\n      //   top: 2px;\n      survey123-ui-spinner {\n          line-height: 0;\n      }\n      ::ng-deep span {\n          line-height: 0;\n      }\n      .icon-spin.icon-refresh {\n          top: 1px;\n      }\n      .spinner{\n          -webkit-transition: none;\n          -moz-transition: none;\n          -o-transition: none;\n          transition: none;\n      }\n      span:not(.clickable-text) {\n          cursor: default;\n      }\n      span.clickable-text.disabled {\n          // color: $color-gray-dusty;\n          // color: var(--calcite-color-text-1);\n          // text-decoration: underline solid var(--calcite-color-text-1); // $color-gray-dusty;\n          cursor: not-allowed;\n      }\n    }\n    .credits-result-info{\n      flex-grow: 1;\n      display: flex;\n      justify-content: flex-end;\n      span {\n        word-break: break-word;\n      }\n    }\n  }\n  .pieview-info {\n    margin-top: 10px;\n    margin-bottom: 20px;\n    .has-spinner >span {\n        cursor: default;\n        &.report-status {\n          padding: 0 2px;\n        }\n    }\n    .preview-text {\n        cursor: default;\n        display: flex;\n        align-items: center;\n        >span {\n            cursor: pointer;\n        }\n    }\n    .preview-text.disabled {\n        text-decoration: underline solid $color-gray-dusty;\n        color: $color-gray-dusty;\n        cursor: not-allowed;\n        >span {\n            cursor: not-allowed;\n        }\n    }\n  }\n  .execute-btn {\n    overflow: auto;\n    margin: -5px 0 30px 0;\n    >span {\n        line-height: 41px;\n    }\n    a {\n      float: inline-start;\n        button {\n            width: auto;\n        }\n    }\n    &.portal-btn {\n      margin: 20px 0;\n    }\n  }\n  calcite-loader {\n    display: inline-block;\n    margin: 0 0 0 10px;\n  }\n}","import { Component, EventEmitter, Fragment, Host, Event, State, h, Prop } from '@stencil/core';\nimport { TranslateService } from '../../services/translate.service';\nimport { ReportService } from '../../services/report.service';\nimport { PropsService } from '../../services/props.service';\nimport { UtilService } from '../../services/util.service';\nimport { StateService } from '../../services/state.service';\n\n@Component({\n  tag: 'report-generator',\n  styleUrl: 'report-generator.scss',\n  shadow: true,\n})\nexport class ReportGenerator {\n  private isPortal: boolean;\n  private batchPrintLimitCount: number = 2000;\n  private canShowEstimateCredits: boolean;\n  @State() featureCount: number;\n  @State() supportShowCredits: boolean = true;\n  @State() printTemplates: any[] = [];\n  @Prop() langObj: any;\n  @State() creditsInfo: any;\n  @State() creditStatus: string;\n  @State() testModeJobObj: any;\n  @State() isTestModePrinting: boolean;\n  @Prop() visibleConf: any;\n  @Prop() templateItemId: string;\n  // private canPrintFeatureReport: any;\n  @State() isPrinting: boolean;\n  // private buttonClickable: boolean;\n  private checkingList: any[] = [];\n  @Event() reportCreated: EventEmitter<any>;\n\n  @State() translator: any;\n  private queryJobTimmer: any;\n  private reportService: ReportService = ReportService.getService();\n  private utilService: UtilService = UtilService.getService();\n  private state: StateService = StateService.getService();\n\n  componentWillLoad() {\n    // check whether to show the estimate credit button\n\n    this.checkPrivilige();\n\n    this.printTemplates = this.reportService.getHelperObj('printTemplates') || [];\n    this.state.subscribe('print-templates-updated', (data) => {\n      this.printTemplates = data || [];\n    });\n    this.state.subscribe('portal-info-update', () => {\n      this.checkPrivilige();\n    });\n\n    this.state.subscribe('feature-count-updated', () => {\n      this.checkPrivilige();\n    });\n    \n    return Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.translator = res;\n      this.state.subscribe('locale-data-changed', (data) => {\n        this.translator = data;\n      });\n      // const langTasks = res.customPrint.recentTasks;\n      // this.langTasks = langTasks;\n      // this.statusI18nConfig = {\n      //   esriJobWaiting: langTasks.jobStatusWaiting,\n      //   esriJobSubmitted: langTasks.jobStatusSubmitted,\n      //   esriJobExecuting: langTasks.jobStatusExecuting,\n      //   esriJobSucceeded: langTasks.jobStatusSucceeded,\n      //   esriJobFailed: langTasks.jobStatusFailed,\n      //   pdfConverting: langTasks.pdfConverting,\n      //   pdfConverted: langTasks.pdfConverted,\n      //   dfConvertFailed: langTasks.dfConvertFailed\n      // };\n    })\n  }\n\n  public checkPrivilige() {\n    this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n    this.isPortal = this.utilService.isPortal;\n    const isSupport = this.utilService.supportFeatureReport();\n    const canPrintFeatureReport = this.utilService.isUserCanPrintFeatureReport();\n    this.canShowEstimateCredits = isSupport ? canPrintFeatureReport: false;\n    this.supportShowCredits = !this.isPortal&&this.featureCount<=this.batchPrintLimitCount&&this.canShowEstimateCredits;\n    \n  }\n\n  public estimateCredits() {\n    if (this.featureCount > this.batchPrintLimitCount) {\n      return;\n    }\n    if (this.featureCount < 1) {\n      return;\n    }\n\n    if (!this.printTemplates || !this.printTemplates.length) {\n      return;\n    }\n\n    if (!(this.creditsInfo && this.creditStatus === 'estimating')) {\n      const paramStore: any = this.reportService.getParamCache();\n      const templateItemId = paramStore.templateItemId || PropsService.templateItemId;\n      const params = {\n        queryParameters: PropsService.queryParameters,\n        featureLayerUrl: PropsService.featureLayerUrl,\n        templateItemId: templateItemId,\n        surveyItemId: PropsService.surveyItemId\n      };\n\n      // if (this.isInternalTest) {\n      //   (params as any).isInternalTest = true;\n      // }\n\n      this.creditStatus = 'estimating';\n      this.creditsInfo = this.creditsInfo || {};\n      this.reportService.estimateReportCosts(params)\n        .then((res) => {\n          if (res.resultInfo) {\n            this.creditsInfo = res.resultInfo;\n            this.creditStatus = 'finished';\n            // temporarily save lastCalculatedCount and lastSelectedTemplateId, to detect if estimate is invalid\n            this.creditsInfo.lastCalculatedCount = this.featureCount;\n            this.creditsInfo.lastSelectedTemplateId = templateItemId;\n          } else {\n            throw res.error;\n          }\n        })\n        .catch((err) => {\n          this.reportService.showError(err);\n          this.creditStatus = 'changed';\n        });\n    }\n  }\n\n  /**\n   * check the clickable of the generate button\n   * @returns \n   */\n  public buttonClickable() {\n    const clickable = true;\n\n    /**\n     * check print feautre report privilege\n     */\n    // if (!this.canPrintFeatureReport) {\n    //   return false;\n    // }\n\n    if (this.templateItemId) {\n      return true;\n    }\n\n    if (!this.printTemplates || !this.printTemplates.length) {\n      return false;\n    }\n\n    // todo: need string when there is no fieldName or feature count is 0\n    // const paramStore: any = this.reportService.getParamCache();\n    // const templateItemId = paramStore.templateItemId || PropsService.templateItemId;\n    // const fileName = paramStore.outputPackageName || PropsService.outputPackageName || paramStore.outputReportName || PropsService.outputReportName || '';\n    // const count = this.featureCount;\n    // if (count < 1 || !templateItemId || count > this.batchPrintLimitCount) {\n    //   clickable = false;\n    // } else if (!fileName) { //  || (this.saveToItem && this.canCreateItem && !this.selectedFolder)) {\n    //   clickable = false;\n    // }\n    return clickable;\n  }\n\n  executeCustomPrint(isTestMode?: boolean) {\n    const paramStore: any = this.reportService.getParamCache();\n    if (isTestMode && this.isTestModePrinting) {\n      return;\n    }\n    this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n    if (this.featureCount < 1) {\n      this.reportService.showError({}, {errorStr: this.translator?.common.noResults});\n      return;\n    }\n    // const helper = this.reportService.getHelperObj();\n    // const count = helper.featureCount;\n    // if (count < 1) {\n    //   console.log('There is no reocord to print.')\n    //   return;\n    // }\n    // let formatStrings: string[] = [\n    //   'MM/DD/YYYY',\n    //   'YYYY-MM-DD HH:mm:ss',\n    //   'YYYYMMDDHHmmss'\n    // ];\n    // const template = paramStore.templateItemId;\n    // template.printing = true;\n    if (isTestMode) {\n      this.isTestModePrinting = true;\n    } else {\n      this.isPrinting = true;\n    }\n    if (isTestMode) {\n      const params: any = {\n        queryParameters: PropsService.queryParameters,\n        templateItemId: paramStore.templateItemId || PropsService.templateItemId,\n        surveyItemId: PropsService.surveyItemId,\n        featureLayerUrl: PropsService.featureLayerUrl,\n        outputReportName: paramStore.outputPackageName || PropsService.outputPackageName || paramStore.outputReportName || PropsService.outputReportName || '' // !this.saveToItem ? fName + '' : '',\n      };\n\n      // Use outputReportName as outputPackageName if it doesn't have any variables and outputPackageName is not specified by user\n      // https://devtopia.esri.com/Beijing-R-D-Center/feature-report/issues/252\n      if (params.outputReportName) {\n        const placeholders = this.utilService.extractPlaceholders(params.outputReportName);\n        if (!(placeholders && placeholders.length)) {\n          params.outputPackageName = params.outputReportName;\n        }\n      }\n      const mergeFiles = paramStore.mergeFiles || PropsService.mergeFiles;\n      if (mergeFiles && mergeFiles !== 'none') {\n        params.mergeFiles = mergeFiles;\n      }\n\n      return this.reportService.createSampleReport(params).then((res) => {\n        if (!res || !res.success) {\n          this.reportService.showError({}, {errorStr: this.translator?.customPrint?.printErrMsg, detail: ((res.error && res.error.message) ? res.error.message : '')});\n          // template.printing = false;\n          this.isTestModePrinting = false;\n        } else {\n          this.testModeJobObj = res;\n          this.watchTestModeJob();\n          // template.printing = false;\n          // this.isPrinting = false;\n        }\n      }).catch((err) => {\n        this.reportService.showError({}, {errorStr: this.translator?.customPrint?.printErrMsg, detail: ((err.error && err.error.message) ? err.error.message : '')});\n        // template.printing = false;\n        this.isTestModePrinting = false;\n      })\n    }\n\n    // let fileName = this.validateFileName(this.survey.title) + '_' + moment().format(this.formatStrings[2]) + '.docx';\n    let fileName = paramStore.outputPackageName || PropsService.outputPackageName || paramStore.outputReportName || PropsService.outputReportName || '';\n    if (fileName.length > 250) {\n      fileName = fileName.substr(0, 250);\n    }\n    return Promise.resolve()\n    /**\n     * first: get objectId, if only one record is selected, and no uploadInfo\n     */\n    // return new Promise((resolve) => {\n    //   if (!this.saveToItem && this.featureCount === 1) {\n    //     let objectId: any = '';\n    //     if (this.selectedMode === 'selected') {\n    //       objectId = this.getSelectedOIDs();\n    //       if (Array.isArray(objectId)) {\n    //         objectId = objectId[0];\n    //       }\n    //       resolve(objectId);\n    //     } else {\n    //       let where = this.where || '1=1';\n    //       if (this.featureTable && this.featureTable.layer) {\n    //         where = this.featureTable.layer.definitionExpression || '1=1';\n    //       }\n    //       this.surveyFeatureSetService.queryFromCurrentLayerToRootLayer(this.featureLayerUrl, this.featureLayerUrl.split('/').pop(), null, where, true).then((res) => {\n    //         const rootLayerIdx = this.featureLayerUrl.split('/').pop();\n    //         if (res && res[rootLayerIdx] && res[rootLayerIdx].objectIds && res[rootLayerIdx].objectIds.length) {\n    //           resolve(res[rootLayerIdx].objectIds);\n    //         } else {\n    //           resolve(null);\n    //         }\n    //       });\n    //     }\n    //   } else {\n    //     resolve(null);\n    //   }\n    // })\n      /**\n       * second, get the file name if needed\n       */\n      // .then((objectId) => {\n      //   // todo: get the survey form json title, remove html tags\n      //   let outputReportName = this.utilService.stripscript(this.survey.title) + '_OID' + objectId + '_' + moment().format('YYYYMMDDHHmmss') + '.' + this.selectedFormat.value;\n      //   if (!this.saveToItem && this.featureCount === 1 && this.survey.form.settings.instanceName) {\n      //     return this.surveyFeatureSetService.getSurveyDataSet({\n      //       survey: this.survey,\n      //       featureServiceUrl: this.featureLayerUrl,\n      //       objectIds: objectId + '',\n      //       outSR: null,\n      //       fieldMapping: null\n      //     })\n      //       .then((resp) => {\n      //         const instanceOption = {\n      //           isHub: this.survey.isHubItem(),\n      //           instance: this.survey.form.settings.instanceName\n      //         };\n      //         resp.title = this.survey.title;\n      //         const instance = new InstanceName(instanceOption).getInstanceValue(resp);\n      //         if (instance) {\n      //           outputReportName = this.utilService.stripscript(this.survey.title) + '-' + this.utilService.stripscript(instance) + '_' + moment().format('YYYYMMDDHHmmss');\n      //         }\n      //         return outputReportName;\n      //       });\n      //   } else {\n      //     return Promise.resolve(outputReportName);\n      //   }\n      // })\n      /**\n       * third: execute the custom print\n       */\n      .then(() => {\n        // execute custom print\n        // let queryParams: any = { objectIds: this.getSelectedOIDs().join(',') + '' };\n        // if (this.selectedMode !== 'selected') {\n\n        // let where = PropsService.where || '1=1'; // this.where || '1=1';\n        // const queryParams = JSON.parse(PropsService.queryParameters);\n        // let queryParams = PropsService.queryParameters; // { where: where };\n        // }\n\n        // add sort config\n        // const sortParams = this.generateSortParams();\n        // if (sortParams) {\n        //   queryParams['orderByFields'] = sortParams;\n        // }\n\n        let uploadInfo = null;\n\n        // if (this.saveToItem) {\n          uploadInfo = paramStore.uploadInfo || PropsService.uploadInfo || {\n            type: 'arcgis', // 'ArcGIS Online',\n            parameters: {\n            },\n            conflictBehavior: 'rename'\n          };\n          // fileName = null;\n        // }\n        const packageFiles = PropsService.packageFiles + '' === 'true' ? true : (PropsService.packageFiles + '' === 'false' ? false : 'auto');\n        const params: any = {\n          queryParameters: PropsService.queryParameters, //JSON.stringify(queryParams),\n          templateItemId: paramStore.templateItemId || PropsService.templateItemId,\n          outputReportName: fileName || '', // !this.saveToItem ? fName + '' : '',\n          // surveyItemId: PropsService.surveyItemId,\n          featureLayerUrl: PropsService.featureLayerUrl,\n          uploadInfo: JSON.stringify(uploadInfo),\n          packageFiles: packageFiles // todo: are we really need to pass this parameter?\n          // mapScale: mapScale\n        };\n        if (PropsService.surveyItemId) {\n          params.surveyItemId = paramStore.surveyItemId || PropsService.surveyItemId;\n\n        }\n        if (paramStore.outputFormat || PropsService.outputFormat) {\n          params.outputFormat = paramStore.outputFormat || PropsService.outputFormat;\n        }\n        if (PropsService.webmapItemId) {\n          params.webmapItemId = PropsService.webmapItemId;\n        }\n        if (Number(PropsService.mapScale) || Number(PropsService.mapScale) === 0) {\n          params.mapScale = Number(PropsService.mapScale);\n        }\n        if (PropsService.locale) {\n          params.locale = '||' + PropsService.locale;\n        }\n        if (PropsService.utcOffset) {\n          params.utcOffset = PropsService.utcOffset;\n        }\n\n        // Use outputReportName as outputPackageName if it doesn't have any variables and outputPackageName is not specified by user\n        // https://devtopia.esri.com/Beijing-R-D-Center/feature-report/issues/252\n        const outputPackageName = paramStore.outputPackageName || PropsService.outputPackageName\n        if (outputPackageName) {\n          params.outputPackageName = outputPackageName;\n        }\n        const mergeFiles = paramStore.mergeFiles || PropsService.mergeFiles;\n        if (mergeFiles && mergeFiles !== 'none') {\n          params.mergeFiles = mergeFiles;\n        }\n\n\n        const helper = this.reportService.getHelperObj();\n        if (helper.canCreateItem === false) {\n          delete params.uploadInfo;\n        }\n\n        let jobId = null;\n        this.reportService.executeReport(params).then((res) => {\n          if (!res || !res.success) {\n            this.reportService.showError({}, {\n              errorStr: this.translator?.customPrint?.printErrMsg,\n              detail: res.error.message\n            });\n            // this.alertService.setOption({\n            //   alertType: 'danger',\n            //   html: this.translator?.customPrint?.printErrMsg,\n            //   detail: (res.error && res.error.message) ? res.error.message : ''\n            // }).show();\n            // template.printing = false;\n            this.isPrinting = false;\n          } else {\n\n            jobId = res.jobId;\n            // this.sessionJobs.push(jobId);\n\n            // this.isPrinting = false;\n            // // this.isPrinting = false;\n            // this.isSubmitAnimating = true;\n            // this.offsetLeft = this.calcNumIconOffset('left');\n            // this.offsetTop = this.calcNumIconOffset('top');\n            // this.offsetOpacity = this.calcNumIconOffset('opacity');\n            // setTimeout(() => {\n            //   this.isSubmitAnimating = false;\n            //   this.offsetOpacity = this.calcNumIconOffset('opacity');\n            // }, 150);\n            // setTimeout(() => {\n            //   this.checkingListChange = false;\n            //   this.offsetLeft = this.calcNumIconOffset('left');\n            //   this.offsetTop = this.calcNumIconOffset('top');\n            // }, 1500);\n            // todo: if the current job list is 10 ,should add the new job, and delete the 10th job.\n            return this.reportService.checkJobStatus(jobId);\n          }\n        })\n        .then(() => {\n          // if there is no cheching list before ,nee to queryJobs now\n          // if (this.checkingList.length === 1) {\n          //   this.queryJobTimmer = this.queryJobs();\n          // }\n\n          /**\n           * jump to the recent tasks panel\n           */\n          if (this.queryJobTimmer) {\n            clearTimeout(this.queryJobTimmer);\n          }\n          this.queryJobTimmer = setTimeout(() => {\n            this.reportService.queryJobs(true).then((resp) => {\n              this.checkingList.push(jobId);\n              this.reportCreated.emit({\n                jobId: jobId,\n                checkingList: this.checkingList,\n                jobs: resp?.jobs || []\n              });\n              this.isPrinting = false;\n            });\n          }, 100);\n        })\n        .catch((err) => {\n          const detail = this.reportService.getErrorStr(err);\n          // this.customReportService.showError(err, {errorStr:this.translator?.customPrint?.printErrMsg, detail: detail});\n          // template.printing = false;\n          this.reportService.showError(err, {errorStr:this.translator?.customPrint?.printErrMsg, detail: detail});\n          this.isPrinting = false;\n        });\n      });\n  }\n\n  /**\n   * check the job status of the preview job\n   * @returns \n   */\n  public watchTestModeJob() {\n    if (!this.testModeJobObj) {\n      return;\n    }\n    const jobId = this.testModeJobObj.jobId;\n    const checking = () => {\n      return this.reportService.checkJobStatus(jobId).then((statusObj) => {\n        this.testModeJobObj = statusObj;\n        if (statusObj.jobStatus === 'esriJobSucceeded' || statusObj.jobStatus === 'esriJobPartialSucceeded') {\n          // let format = 'docx';\n          // if (statusObj.inputInfo && statusObj.inputInfo.parameters) {\n          //   format = statusObj.inputInfo.parameters.outputFormat || 'docx';\n          // }\n          this.reportService.downloadFile(statusObj);  \n          this.isTestModePrinting = false;\n          if (statusObj.jobStatus === 'esriJobPartialSucceeded') {\n            this.reportService.showError({}, {\n              alertType: 'warning',\n              errorStr: this.translator?.customPrint?.printErrMsg,\n              detail: statusObj.detail || statusObj.message || (statusObj.messages && statusObj.messages.length ? statusObj.messages.reduce((acu, msg) => acu + msg) : '')\n            });\n          }\n          return true;\n        } else if (this.testModeJobObj.jobStatus === 'esriJobFailed') {\n          this.isTestModePrinting = false;\n          throw statusObj;\n        } else if (statusObj.error) {\n          throw statusObj.error;\n        } else {\n          setTimeout(() => {\n            checking();\n          }, 1500);\n        }\n      }).catch((statusObj) => {\n        // this.alertService.setOption({\n        //   alertType: 'danger',\n        //   html: this.langSurveyData.customPrint.printErrMsg,\n        //   detail: statusObj.detail || statusObj.message || (statusObj.messages && statusObj.messages.length ? statusObj.messages.reduce((acu, msg) => acu + msg) : '')\n        // }).show();\n        this.reportService.showError({}, {\n          errorStr: this.translator?.customPrint?.printErrMsg,\n          detail: statusObj.detail || statusObj.message || (statusObj.messages && statusObj.messages.length ? statusObj.messages.reduce((acu, msg) => acu + msg) : '')\n        });\n        // template.printing = false;\n        this.isTestModePrinting = false;\n      });\n    };\n    checking();\n  }\n\n  // deprecated\n  // public stripscript(s) {\n  //   const pattern = new RegExp(\"[`~!@#$^&*()=|{}':;',\\\\[\\\\]<>/?\\\"~！@#￥……&*（）;—|{}【】《》‘；：”“'。，、？]\");\n  //   let rs = '';\n  //   for (let i = 0; i < s.length; i++) {\n  //     rs = rs + s.substr(i, 1).replace(pattern, '_');\n  //   }\n  //   return rs;\n  // }\n\n  render() {\n    return (\n      <Host>\n        <p>{this.supportShowCredits}</p>\n      {this.supportShowCredits && this.visibleConf.indexOf('showCredits') >= 0 ? \n        <div class=\"credits-info\">\n          <div class=\"show-credits has-spinner\">\n            {this.creditsInfo&&this.creditStatus==='estimating' ? \n            <Fragment>\n              <span class={`${this.featureCount<1||(!this.printTemplates.length) ? 'disabled' : ''}`} \n                onClick={() => this.estimateCredits()}>{`${this.translator?.common.calculating}`}\n              </span>\n              <calcite-loader label={this.translator?.common.calculating} inline=\"true\"></calcite-loader>\n            </Fragment>\n            : \n            <calcite-link disabled={`${this.featureCount<1||(!this.printTemplates.length) ? true : false}`} \n              onClick={() => this.estimateCredits()}>{`${this.translator?.customPrint?.creditsEstimate}`}\n            </calcite-link>}\n\n            {/* <span class={`${this.creditsInfo&&this.creditStatus==='estimating' ? '' : 'clickable-text'} ${this.featureCount<1||(!this.printTemplates.length) ? 'disabled' : ''}`} \n              onClick={() => this.estimateCredits()}>{this.creditsInfo&&this.creditStatus==='estimating'?`${this.translator?.common.calculating}`:`${this.translator?.customPrint?.creditsEstimate}`}\n            </span>\n            {this.creditsInfo&&this.creditStatus==='estimating' ? <calcite-loader label={this.translator?.common.calculating} inline=\"true\"></calcite-loader> : ''} */}\n          </div>\n          {this.creditsInfo&&this.creditStatus==='finished'&&this.featureCount>0&&this.printTemplates.length ?\n          <div class=\"credits-result-info\">\n            <span>{this.translator?.customPrint?.creditsRecordsCount.replace('${$recordsCount}', `${this.featureCount}`).replace('${$requiredCredits}', `${this.creditsInfo.cost}`)}</span>\n          </div> : ''}\n\n          {this.creditsInfo&&this.creditStatus==='changed'&&this.featureCount>0&&this.printTemplates.length ?         \n          <div class=\"credits-result-info\"> \n            <span>{this.translator?.customPrint?.credtisResultInvalid}</span>\n          </div> : ''}\n      </div> : ''}\n      \n\n      {/* Prevew sample template, deleted */}\n\n      <div class={`execute-btn ${!this.isPortal&&this.featureCount<=this.batchPrintLimitCount&&this.canShowEstimateCredits ? '' : 'portal-btn'}`}>\n        <a class=\"no-hover\">\n        <calcite-button id=\"submit-btn\" disabled={this.isPrinting || !this.buttonClickable() } onClick={() => this.executeCustomPrint()}>\n          {this.translator?.customPrint?.generate}\n          {this.isPrinting ? \n            <calcite-loader label={this.translator?.common?.loading} inline=\"true\"></calcite-loader>\n            : null\n          }\n          </calcite-button>\n          {(this.printTemplates || []).length > 0 || this.templateItemId || this.visibleConf?.indexOf('selectTemplate') >= 0 ?\n            null : \n            <calcite-notice open kind=\"danger\" scale=\"s\" width=\"auto\"> \n                <div slot=\"message\">{this.translator?.customPrint?.chooseTemplateNoOneYet1}</div>\n            </calcite-notice>\n          }\n        {/* <calcite-button id=\"submit-btn\" disabled={!this.buttonClickable || this.isPrinting} onClick={() => this.executeCustomPrint()}>{this.translator?.customPrint?.generate}</calcite-button> */}\n\n          {/* <survey123-ui-button id=\"generate-report-btn\" [nativeType]=\"'width: 100%;'\" [id]=\"'submit-btn'\"\n            [disabled]=\"!buttonClickable() || isPrinting\" [running]=\"isPrinting\" [hasSpinner]='true'\n            (onClick)=\"executeCustomPrint();\">{{'surveyData.customPrint.generate' | translate}}\n          </survey123-ui-button> */}\n\n          {/* <calcite-tooltip label=\"generate report\" reference-element=\"submit-btn\">\n            <span>{(!this.canPrintFeatureReport)?`${this.translator?.common.insufficientPreviligeTip}`:''}</span>\n          </calcite-tooltip> */}\n        </a>\n      </div>\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n  padding: 0 0.75rem;\n  .heading {\n    margin-inline: 0px;\n    margin-block: 1.25rem 1rem;\n    font-size: var(--calcite-font-size-0);\n    line-height: 1.25rem;\n    font-weight: var(--calcite-font-weight-medium);\n  }\n  .folder-label {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .conflict-name-setting{\n    padding-block: 0.5rem;\n    padding-inline: 0.75rem;\n    font-size: var(--calcite-font-size--1);\n    line-height: 1rem;\n  }\n}\n","import { Component, Host, Event, EventEmitter, Prop, State, h, Watch } from '@stencil/core';\nimport { TranslateService } from '../../services/translate.service';\nimport { getUserContent } from \"@esri/arcgis-rest-portal\";\nimport { UtilService } from '../../services/util.service';\nimport { ReportService } from '../../services/report.service';\nimport { StateService } from '../../services/state.service';\n\n@Component({\n  tag: 'report-settings',\n  styleUrl: 'report-settings.scss',\n  shadow: true,\n})\nexport class ReportSettings {\n  @Prop() mergeFiles: 'none' | 'nextPage' | 'continuous';\n  @Prop() outputFormat: string = 'word';\n  @Prop() conflictBehavior: 'rename' | 'replace' | 'fail' = 'rename'; \n\n  // @Prop() langObj: any;\n  @Prop() fileName: string;\n  @Watch('fileName')\n  onFileNameChange() {\n    this.fileNameChangeHandler({\n      target: {\n        value: this.fileName\n      }\n    })\n  }\n\n\n  @Prop() visibleElems: string[] = [];\n  @Event() fileOptionChange: EventEmitter<any>;\n  @Event() fileNameChange: EventEmitter<any>;\n  @Event() selectedFolderChange: EventEmitter<any>;\n  @Event() selectedFileFormatChange: EventEmitter<any>;\n  \n  private folders: any[];\n  private selectedFolder: any;\n  // private langCommon: any;\n  @State() translator: any;\n  @State() langReport: any;\n  @State() helperObj: any;\n  @State() featureCount: number;\n  @State() printTemplates: any[] = [];\n  private reportService: ReportService = ReportService.getService();\n  private state: StateService = StateService.getService();\n\n  componentWillLoad() {\n    return Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.translator = res;\n      this.langReport = res?.customPrint;\n      this.state.subscribe('locale-data-changed', (data) => {\n        this.translator = data;\n        this.langReport = data?.customPrint;\n      });\n      // this.langCommon = res.common;\n      this.printTemplates = this.reportService.getHelperObj('printTemplates') || [];\n      this.state.subscribe('print-templates-updated', (data) => {\n        this.printTemplates = data || [];\n      });\n      this.helperObj = this.reportService.getHelperObj();\n      this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n      this.state.subscribe('portal-info-update', () => {\n        this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n      });\n      this.state.subscribe('feature-count-updated', () => {\n        this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n      });\n\n      return this.getUserFolders();\n    }).catch((err) => {\n      this.reportService.showError(err);\n    })\n  }\n\n  /**\n   * merge mode change: 'none' | 'nextPage' | 'continuous'\n   * @param evt \n   */\n  public fileOptChangeHandler(evt) {\n    const cachedParam = this.reportService.getParamCache();\n    if (evt.detail !== 'split') {\n      cachedParam.mergeFiles = evt.detail;\n    } else {\n      delete cachedParam.mergeFiles;\n    }\n\n    this.fileOptionChange.emit(evt.detail);\n  }\n\n  /**\n   * file name change handler\n   * @param evt \n   */\n  public fileNameChangeHandler(evt) {\n    this.fileName = evt.target.value;\n    const outputReportName = this.fileName;\n\n    // Use outputReportName as outputPackageName if it doesn't have any variables and outputPackageName is not specified by user\n    // https://devtopia.esri.com/Beijing-R-D-Center/feature-report/issues/252\n    if (outputReportName) {\n      const placeholders = this.extractPlaceholders(outputReportName);\n      if (!(placeholders && placeholders.length)) {\n        this.reportService.setParamCache({\n          outputPackageName: outputReportName\n        });\n      }\n    }\n\n    this.reportService.setParamCache({\n      outputReportName: outputReportName\n    });\n    this.fileNameChange.emit(this.fileName);\n  }\n\n  /**\n   * selected folder changed\n   * @param evt \n   */\n  public selectedFolderChangeHandler() {\n    const uploadInfo = this.reportService.getParamCache('uploadInfo') || {\n      type: 'arcgis', // 'ArcGIS Online',\n      parameters: {\n      },\n      conflictBehavior: 'rename'\n    };\n    uploadInfo.parameters.folderId = this.selectedFolder.id === 'all' ? '' : this.selectedFolder.id;\n    this.reportService.setParamCache({\n      uploadInfo: uploadInfo\n    });\n\n    this.selectedFolderChange.emit(this.selectedFolder);\n  }\n  /**\n   * selected format handlder\n   * @param evt \n   */\n  public outputFormatChangeHandler(evt) {\n    this.outputFormat = evt.target.value;\n    this.reportService.setParamCache({\n      outputFormat: this.outputFormat\n    });\n    this.selectedFileFormatChange.emit(this.outputFormat)\n  }\n\n\n  /**\n   * get user folders\n   * @returns \n   */\n  public getUserFolders() {\n    const utilService: UtilService = UtilService.getService();\n    const userName = utilService.getUser()?.username;\n    const rootFolderStr = this.langReport?.saveToAGOFolderRoot.replace('${$username}', userName)\n    const params = Object.assign({owner: userName}, utilService.getBaseRequestOptions());\n    return getUserContent(params).then((res) => {\n      this.folders = [];\n      const folders = [];\n      // add root folder\n      folders.push({\n        username: userName,\n        id: 'all',\n        value: 'all',\n        title: rootFolderStr, // todo: use i18n string\n        label: rootFolderStr,\n        created: null\n      });\n      if (res && res.folders && res.folders.length) {\n        res.folders.forEach((folder) => {\n          folder['label'] = folder.title;\n          folder['value'] = folder.id;\n        });\n        this.folders = folders.concat(res.folders);\n      } else {\n        this.folders = folders;\n      }\n        // if the folder name is the same as the survey title, set it as the default folder\n      // this.selectedFolder = this.folders.find((fd) => {\n      //   return fd.title === 'Survey-' + this.survey.title;\n      // }) || this.folders[0];\n      this.selectedFolder =  this.folders[0];\n      return this.folders;\n    });\n  }\n\n    // remove placeholders in output file name expression\n  public extractPlaceholders(exp: string) {\n    exp = exp || '';\n\n    const matches = exp.match(/\\$[^{$]*?{[^}]*?.*?}/g),\n      returnedMatches = [];\n    if (matches) {\n      matches.forEach((match) => {\n        // if not duplicate, push it\n        if (returnedMatches.indexOf(match) === -1) {\n          returnedMatches.push(match);\n        }\n      });\n    }\n    return returnedMatches;\n  }\n\n  /**\n   * confilict behavior changed.\n   * @param evt \n   */\n  public changeConflictBehavior(evt) {\n    this.conflictBehavior = evt.target.value;\n    const uploadInfo = this.reportService.getParamCache('uploadInfo') || {\n      type: 'arcgis',\n      parameters: {\n      },\n      conflictBehavior: 'rename'\n    };\n    uploadInfo.conflictBehavior = this.conflictBehavior;\n    this.reportService.setParamCache({\n      uploadInfo: uploadInfo\n    });\n  }\n\n\n  render() {\n    return (\n      <Host>\n        <div class=\"heading\">\n          {this.translator?.customPrint?.resultSettingsLabel1}\n        </div>\n        {this.visibleElems.indexOf('fileOptions') < 0 ?\n          null : <file-option-chooser fileOption={this.mergeFiles} onFileOptionChange={(evt) =>{this.fileOptChangeHandler(evt)}}></file-option-chooser>\n        }\n        \n\n        {/* report name */}\n        {this.visibleElems.indexOf('reportName') < 0 ?\n          null : \n          <calcite-label>\n            {this.translator?.customPrint?.saveToAGOItemName}\n            <calcite-input-text placeholder={this.translator?.customPrint?.saveToAGOItemName} value={this.fileName} onCalciteInputTextChange={(evt) => this.fileNameChangeHandler(evt)}></calcite-input-text>\n          </calcite-label>\n        }\n\n        {this.visibleElems.indexOf('saveToAGSAccount') < 0 ? null :\n          <calcite-label>\n            <div class=\"folder-label\">\n              <span>{this.translator?.customPrint?.saveToAGOFolder}</span>\n              <calcite-dropdown width=\"l\" scale=\"m\" close-on-select-disabled type=\"click\" width-scale=\"l\">\n                <calcite-button slot=\"trigger\" icon-start=\"gear\" appearance=\"transparent\"></calcite-button>\n                <calcite-dropdown-group>\n                  <div class=\"conflict-name-setting\">   \n                     {/* there are two bugs in the  calcite-radio-button-group component: 1. the disabled attribute won't work when changing it dyanamically. 2. the onCalciteRadioButtonGroupChange event won't return value              */}\n                    <calcite-radio-button-group name=\"conflict-name-options\" layout=\"vertical\">\n                        <calcite-label layout=\"inline\">\n                        {this.translator?.customPrint?.nameConflictOptLabel}        \n                          <calcite-icon id=\"info-icon\" icon=\"question\" scale=\"s\"> </calcite-icon>\n                          <calcite-tooltip label={this.translator?.customPrint?.nameConflictOptLabel} reference-element=\"info-icon\">\n                              <span>{this.translator?.customPrint?.nameConflictOptLabel}</span>\n                          </calcite-tooltip>\n                        </calcite-label>\n                        <calcite-label layout=\"inline\">\n                            <calcite-radio-button value=\"rename\" checked={this.conflictBehavior=='rename'} onCalciteRadioButtonChange={(evt) => this.changeConflictBehavior(evt)}></calcite-radio-button>\n                            {this.translator?.customPrint?.nameConflictOptRename}\n                        </calcite-label>\n                        <calcite-label layout=\"inline\">\n                            <calcite-radio-button value=\"replace\" checked={this.conflictBehavior=='replace'} onCalciteRadioButtonChange={(evt) => this.changeConflictBehavior(evt)}></calcite-radio-button>\n                            {this.translator?.customPrint?.nameConflictOptReplace}\n                        </calcite-label>\n                        <calcite-label layout=\"inline\">\n                            <calcite-radio-button value=\"fail\" checked={this.conflictBehavior=='fail'} onCalciteRadioButtonChange={(evt) => this.changeConflictBehavior(evt)}></calcite-radio-button>\n                            {this.translator?.customPrint?.nameConflictOptSkip}\n                        </calcite-label>\n                    </calcite-radio-button-group>\n                  </div>\n                </calcite-dropdown-group>\n          </calcite-dropdown>\n            </div>\n            {/* todo: add a tooltip: saveToAGOItemNameTip_i18n */}\n            <calcite-tooltip label={this.helperObj.canCreateItem === false ? this.langReport.saveToAGONoCreatePrivilegeTip : ''} reference-element=\"folder-selector\">\n              <span>{this.helperObj.canCreateItem === false ? this.langReport.saveToAGONoCreatePrivilegeTip : ''}</span>\n            </calcite-tooltip>\n            <calcite-combobox id=\"folder-selector\" disabled={this.helperObj.canCreateItem === false} placeholder={this.translator?.customPrint?.saveToAGOFolder} selection-mode=\"single-persist\" clearDisabled=\"true\" maxItems=\"7\" value={this.selectedFolder} onCalciteComboboxChange={() => {this.selectedFolderChangeHandler()}}>\n              {(this.folders || []).map((folder) => {\n                return <calcite-combobox-item value={folder.value} text-label={folder.label} selected={folder.value===this.selectedFolder?.id}></calcite-combobox-item>;\n              })}\n            </calcite-combobox>\n          </calcite-label>\n        }\n\n        {this.visibleElems.indexOf('outputFormat') < 0 ? null :\n          <calcite-label>\n            {this.translator?.customPrint?.outputFormat}\n            <calcite-combobox placeholder={this.translator?.customPrint?.outputFormat} selection-mode=\"single-persist\" clearDisabled=\"true\" value={this.outputFormat} onCalciteComboboxChange={(evt) => this.outputFormatChangeHandler(evt)}>\n              <calcite-combobox-item value='docx' selected={this.outputFormat==='docx'} text-label={this.translator?.customPrint?.outputFormatDocx}></calcite-combobox-item>\n              <calcite-combobox-item value='pdf' selected={this.outputFormat==='pdf'} text-label={this.translator?.customPrint?.outputFormatPdf}></calcite-combobox-item>\n            </calcite-combobox>\n          </calcite-label>\n        }\n\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  * {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n  $color-green-forest: #31872E;\n  $color-green-parsley: #206A1E;\n  $color-green-york: #99CA8F;\n  $color-green-tusk: #DFF7D0;\n  $color-green-moss: #B9DAA5;\n  $color-green-surf: #B8DCC6;\n  $color-green-edgewater: #B7DCC7;\n  $color-green-deYork: #7BC58F;\n  $color-green-shamrock: #3CC98D;\n  $color-green-smoke: #ABB27B;\n  $color-green-deco: #C9D479;\n  $color-green-sprout: #B9D9A5;\n  $color-green-parsley: #165A13;\n  $color-green-limeade: #6EA400;\n  $color-green-sushi: #72BC3A;\n  $color-white: #ffffff;\n  $color-white-ice:#DBF2F9;\n  $color-white-ice2:#E1F7FA;\n  $color-white-smoke:#F6F6F6;\n  $color-white-lilac:#E6EAF6;\n  $color-black: #000000;\n  $color-black-haze:#F7F8F8;\n  $color-shark:#2E2F30;\n  $color-jumbo:#838388;\n  $color-gray-emperor:#505050;\n  $color-gray-mine-shaft:#333333;\n  $color-gray-dove: #666666;\n  $color-gray-dusty: #999999;\n  $color-gray-alto: #CFCFCF;\n  $color-gray-iron: #F7F8F8;\n  $color-gray-gallery: #EEEEEE;\n  $color-gray-god: #161616;\n  $color-gray-mercury: #E8E8E8;\n  $color-gray-porcelain: #E6E8EA;\n  $color-gray-haze: #EDF0F0;\n  $color-gray-alabaster: #F9FAFA;\n  $color-gray-squeeze: #ECF4F8;\n  $color-gray-waterloo: #858590;\n  $color-gray-wildSand: #F4F4F4;\n  $color-gray-concrete: #F2F2F2;\n  $color-gray-athens:#EFF0F5;\n  $color-gray-french: #BABDC9;\n  $color-gray-selago: #F5F7FD;\n  $color-gray-dusty : #979797;\n  $color-blue-allPorts: #007D9F;\n  $color-blue-linkWater: #ADDEEC;\n  $color-blue-blizzardBlue: #add7f0;\n  $color-blue-eastern: #1C99BC;\n  $color-blue-Science: #0072DE;\n  $color-blue-spindle: #C8E5EF;\n  $color-blue-lochinvar: #2A8A91;\n  $color-blue-fountainBlue: #51B4BB;\n  $color-blue-halfBaked: #7FCACB;\n  $color-blue-breakerBay: #6CACAC;\n  $color-blue-iceberg: #E1F0F5;\n  $color-blue-jaggedIce:#C7E3EC;\n  $color-blue-havelock: #4A90E2;\n  $color-blue-Lochmara:#0079c1;\n  $color-blue-bahamaBlue: #005e95;\n  $color-blue-lilyWhite: #EAFAFF;\n  $color-blue-matisse:#14728D;\n  $color-red-flamePea: #D65940;\n  $color-red-potPourri: #F7EBE8;\n  $color-red-terracotta: #E06D56;\n  $color-red-falcon: #755465;\n  $color-red-wewak: #F59C9B;\n  $color-red-salmon: #FF7877;\n  $color-red-thunderbird: #BE3B20;\n  $color-orange-cashmere: #E4C0A3;\n  $color-orange-orangeRoughy: #CC5316;\n  $color-orange-fieryOrange: #A34211;\n  $color-orange-meteor: #BC7610;\n  $color-orange-flush: #FF8000;\n  $color-orange-tangelo: #F5A118;\n  $color-yellow-equator: #DFA95B;\n  $color-yellow-grandis: #FFD682;\n  $color-yellow-dixie: #E5A71C;\n  $color-yellow-butterCup: #F5A017;\n  $color-yellow-peachCream: #FFF1DD;\n  $color-yellow-lemon: #F8E71C;\n  $color-blue-cornflower :#66AFE9;\n  $color-cyan-water :#C9E6EF;\n  $font-weight7: 700;\n  * {\n    font-size: 14px;\n  }\n  display: block;\n  \n  .banner {\n    cursor: pointer;\n    // padding: 0 20px;\n    font-weight: $font-weight7;\n    line-height: 60px;\n\n    a {\n      cursor: pointer;\n      float: inline-start;\n      transform: rotateZ(180deg);\n      top: 16px;\n\n      // :host-context(html[dir='rtl']) & {\n      //     transform: none;\n      // }\n    }\n\n    span {\n      float: inline-start;\n      padding-left: 10px;\n\n      // :host-context(html[dir='rtl']) & {\n      //     padding-right: 10px;\n      //     padding-left: unset;\n      // }\n    }\n  } \n  .no-tasks {\n    // padding: 0 30px;\n    margin-bottom: 20px;\n  }\n  .list {\n    height: calc(100% - 60px);\n\n    padding: 0 0.75rem;\n    overflow: auto;\n    // padding: 0 20px;\n    width: 100%;\n    ul {\n      padding-left: 0;\n\n      // :host-context(html[dir='rtl']) & {\n      //     padding-right: 0;\n      //     padding-left: unset;\n      // }\n\n      li {\n          list-style: none;\n          margin-bottom: 15px;\n          border-radius: 2px;\n      }\n    }\n    p.job-date {\n        color: $color-gray-dusty;\n        line-height: 40px;\n        margin-bottom: 0;\n    }\n  }\n}\n\n:host-context([dir=\"rtl\"]) {\n  .banner {\n    a {\n      transform: none!important;\n    }\n    span {\n      padding-right: 10px;\n      padding-left: unset!important;\n    }\n  }\n  list ul{\n    padding-right: 0;\n    padding-left: unset!important;\n  }\n}","import { Component, Host, Event, Prop, EventEmitter, State,  h, Fragment } from '@stencil/core';\nimport { ReportService } from '../../services/report.service';\nimport { TranslateService } from '../../services/translate.service';\nimport { StateService } from '../../services/state.service';\nimport { UtilService } from '../../services/util.service';\n\n@Component({\n  tag: 'task-list',\n  styleUrl: 'task-list.scss',\n  shadow: true,\n})\nexport class ReportTaskList {\n  @Event() goBackClicked: EventEmitter;\n  @State() langReport: any;\n  @State() langCommon: any;\n  @State() langTasks: any;\n  @State() state: 'loading' | 'ready' = 'loading';\n  @Prop() jobs: any[];\n  public recentTasksCount: number = 10;\n  private jobList: any;\n  private reportService: ReportService = ReportService.getService();\n  private stateService: StateService = StateService.getService();\n  private utilService: UtilService = UtilService.getService();\n\n  componentWillLoad() {\n    this.state = 'loading';\n    Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.langReport = res?.customPrint;\n      this.langCommon = res?.common;\n      this.langTasks = res?.customPrint.recentTasks;\n      this.stateService.subscribe('locale-data-changed', (data) => {\n        this.langReport = data?.customPrint;\n        this.langCommon = data?.common;\n        this.langTasks = data?.customPrint.recentTasks;\n      });\n      if (this.jobs?.length) {\n        return {\n          jobs: this.jobs\n        };\n      }\n      return this.reportService.queryJobs(true)\n    })\n    .then((res) => {\n      this.jobList = res;\n      this.jobs = this.jobList?.jobs || [];\n      this.state = 'ready';\n      return this.jobList;\n    })\n  }\n\n  public jobSplitDate(job: any, index: number) {\n    if (!this.jobs || index < 0 || index >= this.jobs.length || !job) {\n      return null;\n    }\n    const curDate = this.utilService.formatDateTime(job.submitted, 'date');\n    if (index === 0) {\n      return curDate;\n    }\n    if (this.jobs[index - 1]) {\n      const lastDate = this.utilService.formatDateTime(this.jobs[index - 1].submitted, 'date')\n      if (lastDate === curDate) {\n        return null;\n      } else {\n        return curDate;\n      }\n    }\n    return null;\n  }\n\n  private goBack() {\n    this.goBackClicked.emit();\n  }\n\n  private removeJob(evt) {\n    const job = evt.detail;\n    if (this.jobs) {\n      const targetIdx = this.jobs.findIndex((jobItem) => {\n        return jobItem.jobId === job.jobId;\n      })\n      this.jobs.splice(targetIdx, 1);\n      this.jobs = [].concat(this.jobs);\n    }\n  }\n\n\n  render() {\n    return (\n      <Host>        \n          <div class=\"banner\">\n          <calcite-action onClick={() => this.goBack()} text={this.langTasks?.label} icon=\"chevrons-left\" text-enabled></calcite-action>\n\n            {/* <calcite-link onClick={() => this.goBack()}>\n              <calcite-icon icon=\"chevrons-left\" text-label={this.langTasks?.label}></calcite-icon>\n                {this.langTasks?.label}\n            </calcite-link> */}\n          </div>\n          { this.state ==='ready' && this.langReport && this.langCommon&& this.langTasks && this.jobList ?           \n            <div class=\"list\">\n              { this.jobs.length<1 ? \n                <div class=\"no-tasks\">{this.langTasks.noTaskDesc}</div> \n                : ''\n              }\n              { this.jobs.length ? \n                <Fragment>\n                  <div class=\"no-tasks\">{this.langTasks.limitationDesc.replace('${$maxJobCount}', `${this.recentTasksCount}`)}</div>\n                  <ul>\n                    {this.jobs.map((job, index) => {\n                      return <li key={'li_' + job.jobId}>\n                        { this.jobSplitDate(job, index) ? <p class=\"job-date\">{this.jobSplitDate(job, index)}</p> : ''}\n                        <task-info key={job.jobId} job={job} onJobRemoved={(evt) => this.removeJob(evt)}></task-info>\n                      </li>\n                    })}\n                  </ul>\n                </Fragment> : ''\n            }\n            </div>\n            :\n            <div class=\"loading\">\n              <calcite-loader label={this.langCommon?.loading}></calcite-loader>\n            </div> \n          }\n\n          \n                \n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n  padding: 0 0.75rem;\n  calcite-notice {\n    margin-top: 6px;\n  }\n  .heading {\n    margin-inline: 0px;\n    margin-block:  1.25rem 1rem;\n    font-size: var(--calcite-font-size-0);\n    line-height: 1.25rem;\n    font-weight: var(--calcite-font-weight-medium);\n  }\n}\n","import { Component, Host, Prop, State, Watch, Element, Event, EventEmitter, h } from '@stencil/core';\nimport { PropsService } from '../../services/props.service';\nimport { ReportService } from '../../services/report.service';\n// import { TranslateService } from '../../services/translate.service';\nimport { StateService } from '../../services/state.service';\nimport { TranslateService } from '../../services/translate.service';\n\n@Component({\n  tag: 'template-chooser',\n  styleUrl: 'template-chooser.scss',\n  shadow: true,\n})\nexport class TemplateChooser {\n  @Prop() langObj: any;  \n  @Prop() selectedTemplateId: any;  \n  @Watch('selectedTemplateId')\n  selectedTemplateIdChanged() {\n    this.reportService.setParamCache({\n      templateItemId: this.selectedTemplateId\n    });\n  }\n\n  @Prop() templateIds: string;\n  @Watch('templateIds')\n  templateIdsChanged() {\n    this.init();\n  }\n  \n  @Element() element: HTMLElement;\n  @Event() selectedTemplateChange: EventEmitter<any>;\n  @State() templates: any[] =[];\n  @State() translator: any;\n  private reportService: ReportService = ReportService.getService();\n  private stateService: StateService = StateService.getService();\n\n  componentWillLoad() {\n    this.reportService.setParamCache({\n      templateItemId: this.selectedTemplateId\n    });\n    return Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.translator = res;\n      this.stateService.subscribe('locale-data-changed', (data) => {\n        this.translator = data;\n      });\n      return this.init();\n    });\n  }\n\n  init() {\n    const globalProps = PropsService;\n    const reportService: ReportService = ReportService.getService();\n    return Promise.resolve(true).then(() => {\n      if (this.templateIds === undefined) {\n        return reportService.getReportTemplates(globalProps.surveyItemId);\n      } else {\n        return reportService.getReportTemplates(globalProps.surveyItemId, {templateIds: this.templateIds});\n      }\n    })\n    .then((templates) => {\n      this.templates = templates;\n      this.stateService.notifyDataChanged('print-templates-updated', {value: templates});\n      this.reportService.setHelperObj({\n        printTemplates: templates\n      });\n      // use the first one as default, if the selected template id is not provided\n      if (!this.selectedTemplateId && templates.length) {\n        this.selectedTemplateId = templates[0].id;\n        this.reportService.setParamCache({\n          templateItemId: this.selectedTemplateId\n        });\n        this.selectedTemplateChange.emit(this.selectedTemplateId);\n      }\n      return true;\n    }).catch((err) => {\n      this.reportService.showError(err);\n    })\n  }\n\n  /**\n   * \n   * @param evt \n   */\n  public selectedTemplateChangeHandler(evt) {\n    this.reportService.setParamCache({\n      templateItemId: evt.target.value\n    });\n\n    this.selectedTemplateChange.emit(evt.target.value);\n  }\n\n  render() {\n    return (\n      <Host>\n        {/* <calcite-label> */}\n          <div class=\"heading\">{this.translator?.customPrint.chooseTemplateLabel1}</div>\n          <calcite-combobox placeholder={this.translator?.customPrint.chooseTemplateLabel1} selection-mode=\"single-persist\" clearDisabled=\"true\" value={this.selectedTemplateId} onCalciteComboboxChange={(evt) => {this.selectedTemplateChangeHandler(evt)}}>\n            {(this.templates || []).map((template) => {\n              return <calcite-combobox-item value={template.id} text-label={template.title} selected={template.id===this.selectedTemplateId}></calcite-combobox-item>;\n            })}\n          </calcite-combobox>\n          {(this.templates || []).length > 0 ?\n            null : \n            <calcite-notice open kind=\"danger\" scale=\"s\" width=\"auto\"> \n                <div slot=\"message\">{this.translator?.customPrint.chooseTemplateNoOneYet1}</div>\n            </calcite-notice>\n          }\n        {/* </calcite-label> */}\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}