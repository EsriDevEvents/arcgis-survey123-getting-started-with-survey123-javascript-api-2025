{"version":3,"file":"translate.service.js","sourceRoot":"","sources":["../../src/services/translate.service.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { PropsService } from './props.service';\nimport { getAssetPath } from '@stencil/core';\n\nconst defaultLocale = \"en\";\n\nexport const t9nLocales = [\n  \"ar\",\n  \"bg\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"da\",\n  \"de\",\n  \"el\",\n  defaultLocale,\n  \"es\",\n  \"et\",\n  \"fi\",\n  \"fr\",\n  \"he\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"ja\",\n  \"ko\",\n  \"lt\",\n  \"lv\",\n  \"no\",\n  \"nl\",\n  \"pl\",\n  \"pt-br\",\n  \"pt-pt\",\n  \"ro\",\n  \"ru\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"th\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-cn\",\n  \"zh-hk\",\n  \"zh-tw\",\n];\n\nexport const locales = [\n  \"ar\",\n  \"bg\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"da\",\n  \"de\",\n  \"de-at\",\n  \"de-ch\",\n  \"el\",\n  defaultLocale,\n  \"en-au\",\n  \"en-ca\",\n  \"en-gb\",\n  \"es\",\n  \"es-mx\",\n  \"et\",\n  \"fi\",\n  \"fr\",\n  \"fr-ch\",\n  \"he\",\n  \"hi\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"it-ch\",\n  \"ja\",\n  \"ko\",\n  \"lt\",\n  \"lv\",\n  \"mk\",\n  \"no\",\n  \"nl\",\n  \"pl\",\n  \"pt\",\n  \"pt-pt\",\n  \"ro\",\n  \"ru\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"th\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-cn\",\n  \"zh-hk\",\n  \"zh-tw\",\n];\nexport const supportedLocales = [...new Set([...t9nLocales, ...locales])] as const;\nexport type SupportedLocale = (typeof supportedLocales)[number];\n\n\nexport class TranslateService {\n  public static service: TranslateService;\n  public static currentLangObj: any;\n  public cache: any;\n\n\n  /**\n   * get Service\n   * @returns \n   */\n  static getService(): TranslateService {\n    if (!this.service) {\n      this.service = new TranslateService();\n    }\n    return this.service;\n  }\n\n  /**\n   * get tranlate json\n   * @param locale \n   * @returns \n   */\n  public getTranslate() {\n    const lang = this.getSupportedLocale(PropsService.locale || 'en');\n\n    return Promise.resolve(true)\n    .then(() => {\n      \n      // read the cache\n      if (this.cache && this.cache[lang]) {\n        try {\n          return JSON.parse(this.cache[lang]);\n        } catch {\n          return null;\n        }\n      }\n    })\n    .then((res) => {\n      if (res) {\n        return res;\n      }\n      return fetch(getAssetPath(`./assets/i18n/${lang}.json`))\n      .then((resp) => {\n        if (!resp.ok) {\n          throw new Error(\"could not fetch the translate json file\");\n        }\n        return resp.json();\n      })\n    })\n    .then((res) => {\n      // save the cache\n      if (res) {\n        this.cache = this.cache || {};\n        if (!this.cache[lang]) {\n          try {\n            this.cache[lang] = JSON.stringify(res);\n          } catch {\n            //\n          }\n        }\n        // override the default string if the 'label' prop existing\n        if (PropsService.label) {\n          const keyMapping = {\n            inputFeatures: 'inputFeatures',\n            selectTemplate: 'chooseTemplateLabel1',\n            reportSetting: 'resultSettingsLabel1',\n            fileOptions: 'outputMode',\n            reportName: 'saveToAGOItemName',\n            saveToAGSAccount: 'saveToAGOFolder',\n            outputFormat: 'outputFormat',\n            showCredits: 'creditsEstimate',\n            generateReport: 'generate',\n            previewMode: 'previewReport'\n          };\n\n          const labelsObj = JSON.parse(PropsService.label);\n          Object.keys(labelsObj).forEach((key) => {\n            const str = labelsObj[key];\n            if (key === 'recentReports') {\n              res.customPrint.recentTasks.label = str;\n            }\n            const strkey = keyMapping[key];\n            if (['inputFeatures', 'selectTemplate', 'reportSetting', 'fileOptions', 'reportName', 'saveToAGSAccount', 'outputFormat', 'showCredits', 'generateReport', 'previewReport'].indexOf(key) >=0 ) {\n              res.customPrint[strkey] = str;\n            }\n          })\n          \n        }\n        TranslateService.currentLangObj = res;\n      }\n      return res;\n    })\n    .catch((res) => { throw new Error(res)});\n  }\n\n  /**\n   * get translate sync\n   */\n  \n  public getTranslateSync() {\n    return TranslateService.currentLangObj;\n  }\n\n\n/**\n * Gets the locale that best matches the context.\n *\n * @param locale â€“ the BCP 47 locale code\n * @param context - specifies whether the locale code should match in the context of CLDR or T9N (translation)\n */\npublic getSupportedLocale(locale: string): SupportedLocale {\n  const contextualLocales = t9nLocales; // = context === \"cldr\" ? locales : t9nLocales;\n\n  if (!locale) {\n    return defaultLocale;\n  }\n\n  if (contextualLocales.includes(locale)) {\n    return locale;\n  }\n\n  locale = locale.toLowerCase();\n\n  // we support both 'nb' and 'no' (BCP 47) for Norwegian but only `no` has corresponding bundle\n  if (locale === \"nb\") {\n    return \"no\";\n  }\n\n  // we use `pt-BR` as it will have the same translations as `pt`, which has no corresponding bundle\n  if (locale === \"pt\") {\n    return \"pt-br\";\n  }\n\n  if (locale.includes(\"-\")) {\n    locale = locale.replace(/(\\w+)-(\\w+)/, (_match, language, region) => `${language}-${region.toUpperCase()}`);\n\n    if (!contextualLocales.includes(locale)) {\n      locale = locale.split(\"-\")[0];\n    }\n  }\n\n  // we can `zh-CN` as base translation for chinese locales which has no corresponding bundle.\n  if (locale === \"zh\") {\n    return \"zh-cn\";\n  }\n\n  if (!contextualLocales.includes(locale)) {\n    console.warn(\n      `Translations for the \"${locale}\" locale are not available and will fall back to the default, English (en).`\n    );\n    return defaultLocale;\n  }\n\n  return locale;\n}\n\n}\n"]}