{"version":3,"file":"util.service.js","sourceRoot":"","sources":["../../src/services/util.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { PropsService } from './props.service';\nimport { IRequestOptions } from \"@esri/arcgis-rest-request\";\nimport { getPortal, getItem } from \"@esri/arcgis-rest-portal\";\n\nexport class UtilService {\n  static service: UtilService;\n\n  public isPortal: boolean = false;\n  private portalInfo: any;\n  // private surveyItemInfo: any;\n\n  // store all the svg for icon component\n  private svgCache: any = {};\n\n  /**\n   * get Service\n   * @returns \n   */\n  static getService(): UtilService {\n    if (!this.service) {\n      this.service = new UtilService();\n    }\n    return this.service;\n  }\n\n  /**\n   * get portalInfo\n   */\n  public getPortalInfo(): Promise<any> {\n    if (this.portalInfo && this.portalInfo.user) {\n      return Promise.resolve(this.portalInfo);\n    }\n    return getPortal(null, this.getBaseRequestOptions())\n      .then((res: any) => {\n        if (!res.error) {\n          this.portalInfo = res;\n          this.isPortal = res.isPortal;\n          return res;\n        } else {\n          throw new Error(JSON.stringify(res));\n        }\n      });\n  }\n\n  public getUser() {\n    return this.portalInfo?.user || {};\n  }\n\n  // set dir\n  public setDir() {\n    document.getElementsByTagName('html')[0].dir = ['ar', 'he'].indexOf(PropsService.locale) !== -1 ? 'rtl' : 'ltr';\n  }\n\n  /**\n   * \n   * @param surveyItemId \n   * @returns \n   */\n  public getSurveyItemInfo(surveyItemId: string) {\n    return getItem(surveyItemId, this.getBaseRequestOptions())\n    .then((info) => {\n      // this.surveyItemInfo = info;\n      return info;\n    });\n\n  }\n  \n\n  /**\n   * getBaseRequestOptions\n   * @returns \n   */\n  public getBaseRequestOptions(): IRequestOptions {\n    return {\n      authentication: PropsService.token,\n      portal: `${PropsService.portalUrl}/sharing/rest`\n    };\n  }\n\n  /**\n   * supportFeatureReport\n   * @returns \n   */\n  public supportFeatureReport() {\n    return (!this.isPortal || (this.isPortal && this.compareVersion(this.portalInfo.currentVersion, this.getRestApiVersion('10.5.0')) >= 0));\n  }\n\n  /**\n   * format fieldtype\n   * @param fieldType \n   * @param val \n   * @returns \n   */\n  public formatFieldVal(field: any, val) {\n    if (!val) {\n      return val;\n    }\n    const fieldType = field.type;\n    const codedValues = field.domain?.codedValues;\n    \n    // date field\n    if (fieldType === 'esriFieldTypeDate') {\n      val = this.formatDateTime(val);\n    } else if (codedValues) {\n      // has coded value\n      val = codedValues.find((codeVal) => {\n        return codeVal.code === val;\n      })?.name || val;\n    } else if (this.isNumberField(field)) {\n      val = this.formatNumber(val);\n    } \n    return val;\n  }\n\n  /**\n   * is number field type\n   * @param field \n   * @returns \n   */\n  public isNumberField(field: any) {\n    if (!field) {\n      return false;\n    }\n    const fieldType = field.type;\n    return  'esriFieldTypeSingle,esriFieldTypeDouble,esriFieldTypeInteger,esriFieldTypeSmallInteger'.split(',').includes(fieldType)\n  }\n\n  /**\n   * format number\n   * @param num \n   */\n  public formatNumber(num: any) {\n    return new Intl.NumberFormat(PropsService.locale || 'default').format(num);\n  }\n  /**\n   * format date/time/datetime\n   * @param date \n   * @param type \n   * @param options \n   */\n  public formatDateTime(date: Date | 'string' | 'number', type?: 'date' | 'time' | 'datetime') {\n    type = type || 'date';\n    if (!(date instanceof Date)) {\n      date = new Date(date);\n    }\n    const parms = {\n      date: {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n      },\n      time: {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n      },\n      datetime: {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n      }\n    };\n    if (!date) {\n      return '';\n    }\n    return new Intl.DateTimeFormat(PropsService.locale || 'default', parms[type] as any).format(date);\n  }\n\n  /**\n   * But need to check the new percentage pipe support to show the value like 99.999999999%\n   * @param percent \n   * @param returnNumber \n   */\n  public getPercentage(job: any, percent?: number, returnNumber?: boolean) {\n    let numberVal = 0;\n    if ((!job || !job.jobStatusInfo) && !percent) {\n      return '';\n    }\n    const percentage = percent ? percent : Number(job.jobStatusInfo.progress + '' || '0');\n\n    let decimal = 1;\n    if (Math.round(percentage * 100) === 100 && percentage !== 1) {\n      const decimalStr = (percentage + '').substr(3);\n      let index = decimalStr.split('').findIndex((str) => {\n        return parseInt(str, 10) < 9;\n      });\n      // if the last number is still 9, use str length\n      if (index === -1) {\n        index = decimalStr.split('').length - 1;\n      }\n\n      decimal = index + 1;\n    }\n    numberVal = Math.round(percentage * Math.pow(10, decimal + 2)) / Math.pow(10, decimal);\n\n    if (returnNumber) {\n      return numberVal;\n    }\n    return new Intl.NumberFormat(PropsService.locale, {style:'percent'}).format(numberVal / 100); // percentage  + '%';  \n  }\n\n\n  /**\n   * getFileSize\n   * @param bytes \n   * @returns \n   */\n  public getFileSize(bytes) {\n    let result: any = 0;\n    let type = 'KB';\n    // if (bytes && bytes > (1024 * 1024 * 1024)) {\n    //   result = (bytes / (1024 * 1024 * 1024)).toFixed(1) + 'GB';\n    // } else\n    if (bytes && bytes > (1024 * 1024)) {\n      result = Number((bytes / (1024 * 1024)).toFixed(1)); // + 'MB';\n      type = 'MB';\n    } else {\n      result = Number((bytes / (1024)).toFixed(1)); // + 'KB';\n      type = 'KB';\n    }\n    //  else {\n    //   result = (bytes).toFixed(1) + 'B';\n    // }\n    return result + type;\n\n  }\n\n  // remove placeholders in output file name expression\n  public extractPlaceholders(exp: string) {\n    exp = exp || '';\n\n    const matches = exp.match(/\\$[^{$]*?{[^}]*?.*?}/g),\n      returnedMatches = [];\n    if (matches) {\n      matches.forEach((match) => {\n        // if not duplicate, push it\n        if (returnedMatches.indexOf(match) === -1) {\n          returnedMatches.push(match);\n        }\n      });\n    }\n    return returnedMatches;\n  }\n\n  /**\n   * parse markdown,\n   * eg: convert 'Failed to parse `${tag}` and `${tag}`' to 'Failed to parse <i>${tag}</i> and <i>${tag}</i>'\n   */\n  public parseMarkdown(html: string) {\n    const arr = (html + '').split('`');\n    let result = '';\n    arr.forEach((seg, index) => {\n      if (index % 2 === 0) {\n        result += seg;\n      } else {\n        result += '<i>' + seg + '</i>';\n      }\n    });\n    return result;\n  }\n\n  /**\n   * check if the currrent user has the privilige: premium:user:featurereport\n   */\n  public isUserCanPrintFeatureReport() {\n    const privileges = this.getUser().privileges || [];\n    const checkValues = ['premium:user:featurereport'];\n    return privileges.filter((elem) => {\n      return checkValues.indexOf(elem) > -1;\n    }).length === checkValues.length;\n  }\n\n  /**\n   * set the svg cache\n   * @param obj \n   */\n  public setSvgCache(key: any, svgStr: string) {\n    if (!key || !svgStr) {\n      return;\n    }\n    this.svgCache[key] = svgStr;\n  }\n   /**\n   * get svg cache\n   * @param key \n   * @returns \n   */\n   public getSvgCache(key?: string) {\n    if (!key) {\n      return this.svgCache;\n    }\n    if (!this.svgCache) {\n      return null;\n    }\n    return this.svgCache[key];\n  }\n\n  /**\n  * compare version\n  * -1: a < b\n  * 0: a = b\n  * 1: a > b\n  * @param a\n  * @param b\n  */\n   private compareVersion(a: string, b: string): number {\n   /**\n    * convert version to string\n    * the versoin may be number in very old survey\n    */\n   a = '' + a;\n   b = '' + b;\n \n   if (!a || !b) {\n     throw new Error('version is not existed');\n   }\n \n   let i, diff;\n   const regExStrip0 = /(\\.0+)+$/;\n   const segmentsA = a.replace(regExStrip0, '').split('.');\n   const segmentsB = b.replace(regExStrip0, '').split('.');\n   const l = Math.min(segmentsA.length, segmentsB.length);\n \n   for (i = 0; i < l; i++) {\n     diff = parseInt(segmentsA[i], 10) - parseInt(segmentsB[i], 10);\n     if (diff) {\n       return diff;\n     }\n   }\n   return segmentsA.length - segmentsB.length;\n }\n\n\n  /**\n   * get rest api version by portalVersion\n   * portal    rest version\n   * 10.7   >> 6.4\n   * 10.6   >> 5.3\n   * 10.5.2 >> 5.2\n   * 10.5.1 >> 5.1\n   * 10.5.0 >> 4.4\n   * 10.4.0 >> 3.10\n   */\n  private getRestApiVersion(portalVersion: string): string {\n    if (!portalVersion) {\n      return '';\n    }\n\n    if (portalVersion === '10.9.1') {\n      return '9.2';\n    }\n\n    if (portalVersion === '10.9.0') {\n      return '8.4';\n    }\n\n    if (portalVersion === '10.8.1') {\n      return '8.2';\n    }\n    if (portalVersion === '10.8.0') {\n      return '7.3';\n    }\n\n    if (portalVersion === '10.7.2') {\n      return '7.2';\n    }\n    if (portalVersion === '10.7.1') {\n      return '7.1';\n    }\n    /**\n     * portal mistype the version of 10.7.0 to 7.1\n     * it will be difficult to distingish 10.7.0 and 10.7.1\n     */\n    if (portalVersion === '10.7.0') {\n      return '7.1'; // '6.4';\n    }\n    if (portalVersion === '10.6.1') {\n      return '6.1';\n    }\n    if (portalVersion === '10.6.0') {\n      return '5.3';\n    }\n    if (portalVersion === '10.5.2') {\n      return '5.2';\n    }\n    if (portalVersion === '10.5.1') {\n      return '5.1';\n    }\n    if (portalVersion === '10.5.0') {\n      return '4.4';\n    }\n    if (portalVersion === '10.4.0') {\n      return '3.10';\n    }\n    return '';\n  }\n\n}"]}