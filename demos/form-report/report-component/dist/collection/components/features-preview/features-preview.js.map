{"version":3,"file":"features-preview.js","sourceRoot":"","sources":["../../../src/components/features-preview/features-preview.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { queryFeatures, IQueryFeaturesResponse } from '@esri/arcgis-rest-feature-service';\nimport { PropsService } from '../../services/props.service';\nimport { ReportService } from '../../services/report.service';\nimport { TranslateService } from '../../services/translate.service';\nimport { UtilService } from '../../services/util.service';\nimport { StateService } from '../../services/state.service';\n// import { ArcGISIdentityManager } from '@esri/arcgis-rest-request';\n\n@Component({\n  tag: 'features-preview',\n  styleUrl: 'features-preview.scss',\n  shadow: true,\n})\nexport class FeaturesPreview {\n\n  // @Prop() langObj?: any;\n  @Prop() queryParameters?: string;\n  /**\n   * Defines how a feature displays in the “Input feature” section. \n   * Use {<fieldName>} to refer to a specific attribute of the feature like in MapViewer. \n   * For example, {countryName}, population: {pop2000} -> “China, population: 1,411,750,000”.\n   */\n  @Prop() inputFeatureTemplate?: string;\n\n  @State() featureCount: number = 0;\n  @State() featureStr: string = '';\n  \n  @State() translator: any;\n  @State() reportLang: any;\n  @State() commonLang: any;\n  private reportService: ReportService = ReportService.getService();\n  private utilService: UtilService = UtilService.getService();\n  private stateService: StateService = StateService.getService();\n\n  componentWillLoad() {\n    this.stateService.subscribe('update-features-preview', (newVal) => {\n      if (newVal !== undefined) {\n        this.inputFeatureTemplate = newVal\n      }\n      this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n      this.init();\n    });\n\n    return Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.translator = res;\n      this.initTranslateData(res);\n      this.stateService.subscribe('locale-data-changed', (data) => {\n        this.initTranslateData(data);\n      });\n    // })\n    // .then(() => {\n    //   return this.init()\n    }).catch((err) => {\n      this.reportService.showError(err);\n    })\n  }\n\n  initTranslateData(res) {\n    this.translator = res;\n    this.commonLang = res?.common;\n    this.reportLang = res?.customPrint;\n  }\n\n  /**\n   * @returns \n   */\n  init() {\n    let displayFields = [];\n    return this.getDisplayFields()\n    .then((fields) => {\n      displayFields = fields;\n      let outFields = [];\n      // if (displayFields[0] === '*') {\n      //   outFields = ['*'];\n      // } else {\n      outFields = displayFields;\n      // }\n      /**\n       * query features\n       */\n      const queryParms: any = JSON.parse(this.queryParameters);\n      let resultRecordCount = 10;\n      if (queryParms.resultRecordCount < 10) {\n        resultRecordCount = queryParms.resultRecordCount\n      }\n\n      // the order by fields may be '||EditDate DESC, objectid ASC', but it is not supported by rest api\n      if (queryParms.orderByFields) {\n        queryParms.orderByFields = queryParms.orderByFields.replace('||', '');\n      }\n      const params = Object.assign({\n        url: PropsService.featureLayerUrl,\n        authentication: PropsService.token,   // todo: pass the portalUrl\n        outFields: outFields,\n        resultRecordCount: resultRecordCount\n      }, queryParms);\n\n      const where = 'where' in params ? params.where : null\n      const objectIds = 'objectIds' in params ? params.objectIds: null\n      const additionalParams: any  = {\n\n      };\n      if (where !== null) {\n        additionalParams.where = where;\n      }\n      if (objectIds != null) {\n        additionalParams.objectIds = objectIds;\n      }\n      if (!objectIds && !where) {\n        additionalParams.where = '1<>1'; // if no objectIds and where, set where as '1<>1' to avoid requesting error\n        delete additionalParams.objectIds\n      }\n\n      params.params = additionalParams;\n      delete params.where;\n      delete params.objectIds;\n\n      return queryFeatures(params);\n    })\n    .then((result: IQueryFeaturesResponse) => {\n      // no feature\n      if (this.featureCount === 0) {\n        this.featureStr = this.commonLang.noResults;\n        return true;\n      }\n\n      // generate the display string\n      const fields = result.fields || [];\n      const fieldMapping = {};\n      fields.forEach((field) => {\n        fieldMapping[field.name] = field;\n      });\n      const displayCount = this.featureCount > 10 ? 10 : this.featureCount;\n      const displayFeats = result.features.splice(0, displayCount);\n      // give a default display fields(the first four fields)\n      // if (displayFields[0] === '*') {\n      //   displayFields = this.getDisplayFields(fields);\n      // }\n\n      this.featureStr = displayFeats.map((feat) => {\n        let innerStr = this.inputFeatureTemplate;\n        displayFields.forEach((field) => {\n          const val = this.utilService.formatFieldVal(fieldMapping[field], feat.attributes[field]);\n          innerStr = innerStr.replace(`{${field}}`, val);\n        });\n        return innerStr;\n\n      }).join('<br>');\n      if (this.featureCount > 10) {\n        this.featureStr += `<br>...(${this.utilService.formatNumber(this.featureCount - 10)} ${this.commonLang.more || 'more'})`;\n      }\n\n      // console.log(this.featureCount , this.featureStr);\n      return true;\n    }).catch((err) => {\n      this.reportService.showError(err);\n    })\n  }\n  /**\n   * get display fields\n   * @returns \n   */\n  private getDisplayFields() {\n    let resultFields = [];\n    return this.reportService.getLayerJson().then((layerJson) => {\n      if (!this.inputFeatureTemplate) {\n        // auto generate a default inputFeatureTemplate, show the displayField\n        if (layerJson.displayField) {\n          // todo: how about the displayField is a expression?\n          this.inputFeatureTemplate = '{' + layerJson.displayField + '}';\n          resultFields = [layerJson.displayField];\n        } else {\n          const fields = layerJson.fields || [];\n          const spatialFields = Object.keys(layerJson.editFieldsInfo || {}).map((key) => {\n            return layerJson.editFieldsInfo[key];\n          }).concat([layerJson.objectIdField || '', layerJson.globalIdField || '']);\n          \n          \n          const firstStringField = fields.find((field) => {\n            return !spatialFields.includes(field.name) && field.type === 'esriFieldTypeString';\n          });\n\n          const firstNumberField = fields.find((field) => {\n            return !spatialFields.includes(field.name) && this.utilService.isNumberField(field);\n          });\n\n          const firstAnyField = fields.find((field) => {\n            return !spatialFields.includes(field.name) && !this.utilService.isNumberField(field) && field.type !== 'esriFieldTypeString';\n          });\n\n          // priority: first string field > first number field > first other field.\n          const defaultField = firstStringField || firstNumberField || firstAnyField || fields[0];\n\n          if (defaultField) {\n            this.inputFeatureTemplate = '{' + defaultField.name +  '}';\n            resultFields = [defaultField.name];\n          } else {\n            // show the first four field\n            // resultFields = (fields.length > 3 ? fields.slice(0, 4) : fields).map((field) => {\n            //   return field.name;\n            // }); \n            // this.inputFeatureTemplate = resultFields.map((fieldName) => {\n            //   return '{' + fieldName +  '}';\n            // }).join(',');\n          }\n        }\n        return resultFields;\n      } else {\n        const fields = layerJson.fields || [];\n        const matches = this.inputFeatureTemplate.match(/\\{.*?\\}/g);\n        (matches || []).forEach((match: any) => {\n          const curName = (match ).substring(1, match.length - 1)\n          const isValidField = fields.find((field) => {\n            return field.name === curName\n          });\n          if (resultFields.indexOf(curName) < 0 && isValidField) {\n            resultFields.push(curName);\n          }\n        });\n        if (!resultFields.length) {\n          resultFields = [layerJson.objectIdField || 'objectid']; \n        }\n        return resultFields;\n  \n      }\n    })\n  }\n\n\n  render() {\n    return (\n      <Host>\n        <div>\n          <div class=\"heading\">{this.translator?.customPrint?.inputFeatures} ({this.featureCount})</div>\n          <div innerHTML={this.featureStr}></div>\n          {/* <calcite-input type='textarea' readOnly='true' placeholder=\"Preview the features\" value={featureStr}></calcite-input> */}\n        </div>\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n"]}