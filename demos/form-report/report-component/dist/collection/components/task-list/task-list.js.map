{"version":3,"file":"task-list.js","sourceRoot":"","sources":["../../../src/components/task-list/task-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, Event, Prop, EventEmitter, State,  h, Fragment } from '@stencil/core';\nimport { ReportService } from '../../services/report.service';\nimport { TranslateService } from '../../services/translate.service';\nimport { StateService } from '../../services/state.service';\nimport { UtilService } from '../../services/util.service';\n\n@Component({\n  tag: 'task-list',\n  styleUrl: 'task-list.scss',\n  shadow: true,\n})\nexport class ReportTaskList {\n  @Event() goBackClicked: EventEmitter;\n  @State() langReport: any;\n  @State() langCommon: any;\n  @State() langTasks: any;\n  @State() state: 'loading' | 'ready' = 'loading';\n  @Prop() jobs: any[];\n  public recentTasksCount: number = 10;\n  private jobList: any;\n  private reportService: ReportService = ReportService.getService();\n  private stateService: StateService = StateService.getService();\n  private utilService: UtilService = UtilService.getService();\n\n  componentWillLoad() {\n    this.state = 'loading';\n    Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.langReport = res?.customPrint;\n      this.langCommon = res?.common;\n      this.langTasks = res?.customPrint.recentTasks;\n      this.stateService.subscribe('locale-data-changed', (data) => {\n        this.langReport = data?.customPrint;\n        this.langCommon = data?.common;\n        this.langTasks = data?.customPrint.recentTasks;\n      });\n      if (this.jobs?.length) {\n        return {\n          jobs: this.jobs\n        };\n      }\n      return this.reportService.queryJobs(true)\n    })\n    .then((res) => {\n      this.jobList = res;\n      this.jobs = this.jobList?.jobs || [];\n      this.state = 'ready';\n      return this.jobList;\n    })\n  }\n\n  public jobSplitDate(job: any, index: number) {\n    if (!this.jobs || index < 0 || index >= this.jobs.length || !job) {\n      return null;\n    }\n    const curDate = this.utilService.formatDateTime(job.submitted, 'date');\n    if (index === 0) {\n      return curDate;\n    }\n    if (this.jobs[index - 1]) {\n      const lastDate = this.utilService.formatDateTime(this.jobs[index - 1].submitted, 'date')\n      if (lastDate === curDate) {\n        return null;\n      } else {\n        return curDate;\n      }\n    }\n    return null;\n  }\n\n  private goBack() {\n    this.goBackClicked.emit();\n  }\n\n  private removeJob(evt) {\n    const job = evt.detail;\n    if (this.jobs) {\n      const targetIdx = this.jobs.findIndex((jobItem) => {\n        return jobItem.jobId === job.jobId;\n      })\n      this.jobs.splice(targetIdx, 1);\n      this.jobs = [].concat(this.jobs);\n    }\n  }\n\n\n  render() {\n    return (\n      <Host>        \n          <div class=\"banner\">\n          <calcite-action onClick={() => this.goBack()} text={this.langTasks?.label} icon=\"chevrons-left\" text-enabled></calcite-action>\n\n            {/* <calcite-link onClick={() => this.goBack()}>\n              <calcite-icon icon=\"chevrons-left\" text-label={this.langTasks?.label}></calcite-icon>\n                {this.langTasks?.label}\n            </calcite-link> */}\n          </div>\n          { this.state ==='ready' && this.langReport && this.langCommon&& this.langTasks && this.jobList ?           \n            <div class=\"list\">\n              { this.jobs.length<1 ? \n                <div class=\"no-tasks\">{this.langTasks.noTaskDesc}</div> \n                : ''\n              }\n              { this.jobs.length ? \n                <Fragment>\n                  <div class=\"no-tasks\">{this.langTasks.limitationDesc.replace('${$maxJobCount}', `${this.recentTasksCount}`)}</div>\n                  <ul>\n                    {this.jobs.map((job, index) => {\n                      return <li key={'li_' + job.jobId}>\n                        { this.jobSplitDate(job, index) ? <p class=\"job-date\">{this.jobSplitDate(job, index)}</p> : ''}\n                        <task-info key={job.jobId} job={job} onJobRemoved={(evt) => this.removeJob(evt)}></task-info>\n                      </li>\n                    })}\n                  </ul>\n                </Fragment> : ''\n            }\n            </div>\n            :\n            <div class=\"loading\">\n              <calcite-loader label={this.langCommon?.loading}></calcite-loader>\n            </div> \n          }\n\n          \n                \n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n"]}