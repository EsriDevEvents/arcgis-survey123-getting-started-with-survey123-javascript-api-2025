{"version":3,"file":"report-generator.js","sourceRoot":"","sources":["../../../src/components/report-generator/report-generator.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Fragment, Host, Event, State, h, Prop } from '@stencil/core';\nimport { TranslateService } from '../../services/translate.service';\nimport { ReportService } from '../../services/report.service';\nimport { PropsService } from '../../services/props.service';\nimport { UtilService } from '../../services/util.service';\nimport { StateService } from '../../services/state.service';\n\n@Component({\n  tag: 'report-generator',\n  styleUrl: 'report-generator.scss',\n  shadow: true,\n})\nexport class ReportGenerator {\n  private isPortal: boolean;\n  private batchPrintLimitCount: number = 2000;\n  private canShowEstimateCredits: boolean;\n  @State() featureCount: number;\n  @State() supportShowCredits: boolean = true;\n  @State() printTemplates: any[] = [];\n  @Prop() langObj: any;\n  @State() creditsInfo: any;\n  @State() creditStatus: string;\n  @State() testModeJobObj: any;\n  @State() isTestModePrinting: boolean;\n  @Prop() visibleConf: any;\n  @Prop() templateItemId: string;\n  // private canPrintFeatureReport: any;\n  @State() isPrinting: boolean;\n  // private buttonClickable: boolean;\n  private checkingList: any[] = [];\n  @Event() reportCreated: EventEmitter<any>;\n\n  @State() translator: any;\n  private queryJobTimmer: any;\n  private reportService: ReportService = ReportService.getService();\n  private utilService: UtilService = UtilService.getService();\n  private state: StateService = StateService.getService();\n\n  componentWillLoad() {\n    // check whether to show the estimate credit button\n\n    this.checkPrivilige();\n\n    this.printTemplates = this.reportService.getHelperObj('printTemplates') || [];\n    this.state.subscribe('print-templates-updated', (data) => {\n      this.printTemplates = data || [];\n    });\n    this.state.subscribe('portal-info-update', () => {\n      this.checkPrivilige();\n    });\n\n    this.state.subscribe('feature-count-updated', () => {\n      this.checkPrivilige();\n    });\n    \n    return Promise.resolve(true)\n    // .then(() => {\n    //   return TranslateService.getService().getTranslate();\n    // })\n    .then(() => {\n      const res = TranslateService.getService().getTranslateSync();\n      this.translator = res;\n      this.state.subscribe('locale-data-changed', (data) => {\n        this.translator = data;\n      });\n      // const langTasks = res.customPrint.recentTasks;\n      // this.langTasks = langTasks;\n      // this.statusI18nConfig = {\n      //   esriJobWaiting: langTasks.jobStatusWaiting,\n      //   esriJobSubmitted: langTasks.jobStatusSubmitted,\n      //   esriJobExecuting: langTasks.jobStatusExecuting,\n      //   esriJobSucceeded: langTasks.jobStatusSucceeded,\n      //   esriJobFailed: langTasks.jobStatusFailed,\n      //   pdfConverting: langTasks.pdfConverting,\n      //   pdfConverted: langTasks.pdfConverted,\n      //   dfConvertFailed: langTasks.dfConvertFailed\n      // };\n    })\n  }\n\n  public checkPrivilige() {\n    this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n    this.isPortal = this.utilService.isPortal;\n    const isSupport = this.utilService.supportFeatureReport();\n    const canPrintFeatureReport = this.utilService.isUserCanPrintFeatureReport();\n    this.canShowEstimateCredits = isSupport ? canPrintFeatureReport: false;\n    this.supportShowCredits = !this.isPortal&&this.featureCount<=this.batchPrintLimitCount&&this.canShowEstimateCredits;\n    \n  }\n\n  public estimateCredits() {\n    if (this.featureCount > this.batchPrintLimitCount) {\n      return;\n    }\n    if (this.featureCount < 1) {\n      return;\n    }\n\n    if (!this.printTemplates || !this.printTemplates.length) {\n      return;\n    }\n\n    if (!(this.creditsInfo && this.creditStatus === 'estimating')) {\n      const paramStore: any = this.reportService.getParamCache();\n      const templateItemId = paramStore.templateItemId || PropsService.templateItemId;\n      const params = {\n        queryParameters: PropsService.queryParameters,\n        featureLayerUrl: PropsService.featureLayerUrl,\n        templateItemId: templateItemId,\n        surveyItemId: PropsService.surveyItemId\n      };\n\n      // if (this.isInternalTest) {\n      //   (params as any).isInternalTest = true;\n      // }\n\n      this.creditStatus = 'estimating';\n      this.creditsInfo = this.creditsInfo || {};\n      this.reportService.estimateReportCosts(params)\n        .then((res) => {\n          if (res.resultInfo) {\n            this.creditsInfo = res.resultInfo;\n            this.creditStatus = 'finished';\n            // temporarily save lastCalculatedCount and lastSelectedTemplateId, to detect if estimate is invalid\n            this.creditsInfo.lastCalculatedCount = this.featureCount;\n            this.creditsInfo.lastSelectedTemplateId = templateItemId;\n          } else {\n            throw res.error;\n          }\n        })\n        .catch((err) => {\n          this.reportService.showError(err);\n          this.creditStatus = 'changed';\n        });\n    }\n  }\n\n  /**\n   * check the clickable of the generate button\n   * @returns \n   */\n  public buttonClickable() {\n    const clickable = true;\n\n    /**\n     * check print feautre report privilege\n     */\n    // if (!this.canPrintFeatureReport) {\n    //   return false;\n    // }\n\n    if (this.templateItemId) {\n      return true;\n    }\n\n    if (!this.printTemplates || !this.printTemplates.length) {\n      return false;\n    }\n\n    // todo: need string when there is no fieldName or feature count is 0\n    // const paramStore: any = this.reportService.getParamCache();\n    // const templateItemId = paramStore.templateItemId || PropsService.templateItemId;\n    // const fileName = paramStore.outputPackageName || PropsService.outputPackageName || paramStore.outputReportName || PropsService.outputReportName || '';\n    // const count = this.featureCount;\n    // if (count < 1 || !templateItemId || count > this.batchPrintLimitCount) {\n    //   clickable = false;\n    // } else if (!fileName) { //  || (this.saveToItem && this.canCreateItem && !this.selectedFolder)) {\n    //   clickable = false;\n    // }\n    return clickable;\n  }\n\n  executeCustomPrint(isTestMode?: boolean) {\n    const paramStore: any = this.reportService.getParamCache();\n    if (isTestMode && this.isTestModePrinting) {\n      return;\n    }\n    this.featureCount = this.reportService.getHelperObj('featureCount') || 0;\n    if (this.featureCount < 1) {\n      this.reportService.showError({}, {errorStr: this.translator?.common.noResults});\n      return;\n    }\n    // const helper = this.reportService.getHelperObj();\n    // const count = helper.featureCount;\n    // if (count < 1) {\n    //   console.log('There is no reocord to print.')\n    //   return;\n    // }\n    // let formatStrings: string[] = [\n    //   'MM/DD/YYYY',\n    //   'YYYY-MM-DD HH:mm:ss',\n    //   'YYYYMMDDHHmmss'\n    // ];\n    // const template = paramStore.templateItemId;\n    // template.printing = true;\n    if (isTestMode) {\n      this.isTestModePrinting = true;\n    } else {\n      this.isPrinting = true;\n    }\n    if (isTestMode) {\n      const params: any = {\n        queryParameters: PropsService.queryParameters,\n        templateItemId: paramStore.templateItemId || PropsService.templateItemId,\n        surveyItemId: PropsService.surveyItemId,\n        featureLayerUrl: PropsService.featureLayerUrl,\n        outputReportName: paramStore.outputPackageName || PropsService.outputPackageName || paramStore.outputReportName || PropsService.outputReportName || '' // !this.saveToItem ? fName + '' : '',\n      };\n\n      // Use outputReportName as outputPackageName if it doesn't have any variables and outputPackageName is not specified by user\n      // https://devtopia.esri.com/Beijing-R-D-Center/feature-report/issues/252\n      if (params.outputReportName) {\n        const placeholders = this.utilService.extractPlaceholders(params.outputReportName);\n        if (!(placeholders && placeholders.length)) {\n          params.outputPackageName = params.outputReportName;\n        }\n      }\n      const mergeFiles = paramStore.mergeFiles || PropsService.mergeFiles;\n      if (mergeFiles && mergeFiles !== 'none') {\n        params.mergeFiles = mergeFiles;\n      }\n\n      return this.reportService.createSampleReport(params).then((res) => {\n        if (!res || !res.success) {\n          this.reportService.showError({}, {errorStr: this.translator?.customPrint?.printErrMsg, detail: ((res.error && res.error.message) ? res.error.message : '')});\n          // template.printing = false;\n          this.isTestModePrinting = false;\n        } else {\n          this.testModeJobObj = res;\n          this.watchTestModeJob();\n          // template.printing = false;\n          // this.isPrinting = false;\n        }\n      }).catch((err) => {\n        this.reportService.showError({}, {errorStr: this.translator?.customPrint?.printErrMsg, detail: ((err.error && err.error.message) ? err.error.message : '')});\n        // template.printing = false;\n        this.isTestModePrinting = false;\n      })\n    }\n\n    // let fileName = this.validateFileName(this.survey.title) + '_' + moment().format(this.formatStrings[2]) + '.docx';\n    let fileName = paramStore.outputPackageName || PropsService.outputPackageName || paramStore.outputReportName || PropsService.outputReportName || '';\n    if (fileName.length > 250) {\n      fileName = fileName.substr(0, 250);\n    }\n    return Promise.resolve()\n    /**\n     * first: get objectId, if only one record is selected, and no uploadInfo\n     */\n    // return new Promise((resolve) => {\n    //   if (!this.saveToItem && this.featureCount === 1) {\n    //     let objectId: any = '';\n    //     if (this.selectedMode === 'selected') {\n    //       objectId = this.getSelectedOIDs();\n    //       if (Array.isArray(objectId)) {\n    //         objectId = objectId[0];\n    //       }\n    //       resolve(objectId);\n    //     } else {\n    //       let where = this.where || '1=1';\n    //       if (this.featureTable && this.featureTable.layer) {\n    //         where = this.featureTable.layer.definitionExpression || '1=1';\n    //       }\n    //       this.surveyFeatureSetService.queryFromCurrentLayerToRootLayer(this.featureLayerUrl, this.featureLayerUrl.split('/').pop(), null, where, true).then((res) => {\n    //         const rootLayerIdx = this.featureLayerUrl.split('/').pop();\n    //         if (res && res[rootLayerIdx] && res[rootLayerIdx].objectIds && res[rootLayerIdx].objectIds.length) {\n    //           resolve(res[rootLayerIdx].objectIds);\n    //         } else {\n    //           resolve(null);\n    //         }\n    //       });\n    //     }\n    //   } else {\n    //     resolve(null);\n    //   }\n    // })\n      /**\n       * second, get the file name if needed\n       */\n      // .then((objectId) => {\n      //   // todo: get the survey form json title, remove html tags\n      //   let outputReportName = this.utilService.stripscript(this.survey.title) + '_OID' + objectId + '_' + moment().format('YYYYMMDDHHmmss') + '.' + this.selectedFormat.value;\n      //   if (!this.saveToItem && this.featureCount === 1 && this.survey.form.settings.instanceName) {\n      //     return this.surveyFeatureSetService.getSurveyDataSet({\n      //       survey: this.survey,\n      //       featureServiceUrl: this.featureLayerUrl,\n      //       objectIds: objectId + '',\n      //       outSR: null,\n      //       fieldMapping: null\n      //     })\n      //       .then((resp) => {\n      //         const instanceOption = {\n      //           isHub: this.survey.isHubItem(),\n      //           instance: this.survey.form.settings.instanceName\n      //         };\n      //         resp.title = this.survey.title;\n      //         const instance = new InstanceName(instanceOption).getInstanceValue(resp);\n      //         if (instance) {\n      //           outputReportName = this.utilService.stripscript(this.survey.title) + '-' + this.utilService.stripscript(instance) + '_' + moment().format('YYYYMMDDHHmmss');\n      //         }\n      //         return outputReportName;\n      //       });\n      //   } else {\n      //     return Promise.resolve(outputReportName);\n      //   }\n      // })\n      /**\n       * third: execute the custom print\n       */\n      .then(() => {\n        // execute custom print\n        // let queryParams: any = { objectIds: this.getSelectedOIDs().join(',') + '' };\n        // if (this.selectedMode !== 'selected') {\n\n        // let where = PropsService.where || '1=1'; // this.where || '1=1';\n        // const queryParams = JSON.parse(PropsService.queryParameters);\n        // let queryParams = PropsService.queryParameters; // { where: where };\n        // }\n\n        // add sort config\n        // const sortParams = this.generateSortParams();\n        // if (sortParams) {\n        //   queryParams['orderByFields'] = sortParams;\n        // }\n\n        let uploadInfo = null;\n\n        // if (this.saveToItem) {\n          uploadInfo = paramStore.uploadInfo || PropsService.uploadInfo || {\n            type: 'arcgis', // 'ArcGIS Online',\n            parameters: {\n            },\n            conflictBehavior: 'rename'\n          };\n          // fileName = null;\n        // }\n        const packageFiles = PropsService.packageFiles + '' === 'true' ? true : (PropsService.packageFiles + '' === 'false' ? false : 'auto');\n        const params: any = {\n          queryParameters: PropsService.queryParameters, //JSON.stringify(queryParams),\n          templateItemId: paramStore.templateItemId || PropsService.templateItemId,\n          outputReportName: fileName || '', // !this.saveToItem ? fName + '' : '',\n          // surveyItemId: PropsService.surveyItemId,\n          featureLayerUrl: PropsService.featureLayerUrl,\n          uploadInfo: JSON.stringify(uploadInfo),\n          packageFiles: packageFiles // todo: are we really need to pass this parameter?\n          // mapScale: mapScale\n        };\n        if (PropsService.surveyItemId) {\n          params.surveyItemId = paramStore.surveyItemId || PropsService.surveyItemId;\n\n        }\n        if (paramStore.outputFormat || PropsService.outputFormat) {\n          params.outputFormat = paramStore.outputFormat || PropsService.outputFormat;\n        }\n        if (PropsService.webmapItemId) {\n          params.webmapItemId = PropsService.webmapItemId;\n        }\n        if (Number(PropsService.mapScale) || Number(PropsService.mapScale) === 0) {\n          params.mapScale = Number(PropsService.mapScale);\n        }\n        if (PropsService.locale) {\n          params.locale = '||' + PropsService.locale;\n        }\n        if (PropsService.utcOffset) {\n          params.utcOffset = PropsService.utcOffset;\n        }\n\n        // Use outputReportName as outputPackageName if it doesn't have any variables and outputPackageName is not specified by user\n        // https://devtopia.esri.com/Beijing-R-D-Center/feature-report/issues/252\n        const outputPackageName = paramStore.outputPackageName || PropsService.outputPackageName\n        if (outputPackageName) {\n          params.outputPackageName = outputPackageName;\n        }\n        const mergeFiles = paramStore.mergeFiles || PropsService.mergeFiles;\n        if (mergeFiles && mergeFiles !== 'none') {\n          params.mergeFiles = mergeFiles;\n        }\n\n\n        const helper = this.reportService.getHelperObj();\n        if (helper.canCreateItem === false) {\n          delete params.uploadInfo;\n        }\n\n        let jobId = null;\n        this.reportService.executeReport(params).then((res) => {\n          if (!res || !res.success) {\n            this.reportService.showError({}, {\n              errorStr: this.translator?.customPrint?.printErrMsg,\n              detail: res.error.message\n            });\n            // this.alertService.setOption({\n            //   alertType: 'danger',\n            //   html: this.translator?.customPrint?.printErrMsg,\n            //   detail: (res.error && res.error.message) ? res.error.message : ''\n            // }).show();\n            // template.printing = false;\n            this.isPrinting = false;\n          } else {\n\n            jobId = res.jobId;\n            // this.sessionJobs.push(jobId);\n\n            // this.isPrinting = false;\n            // // this.isPrinting = false;\n            // this.isSubmitAnimating = true;\n            // this.offsetLeft = this.calcNumIconOffset('left');\n            // this.offsetTop = this.calcNumIconOffset('top');\n            // this.offsetOpacity = this.calcNumIconOffset('opacity');\n            // setTimeout(() => {\n            //   this.isSubmitAnimating = false;\n            //   this.offsetOpacity = this.calcNumIconOffset('opacity');\n            // }, 150);\n            // setTimeout(() => {\n            //   this.checkingListChange = false;\n            //   this.offsetLeft = this.calcNumIconOffset('left');\n            //   this.offsetTop = this.calcNumIconOffset('top');\n            // }, 1500);\n            // todo: if the current job list is 10 ,should add the new job, and delete the 10th job.\n            return this.reportService.checkJobStatus(jobId);\n          }\n        })\n        .then(() => {\n          // if there is no cheching list before ,nee to queryJobs now\n          // if (this.checkingList.length === 1) {\n          //   this.queryJobTimmer = this.queryJobs();\n          // }\n\n          /**\n           * jump to the recent tasks panel\n           */\n          if (this.queryJobTimmer) {\n            clearTimeout(this.queryJobTimmer);\n          }\n          this.queryJobTimmer = setTimeout(() => {\n            this.reportService.queryJobs(true).then((resp) => {\n              this.checkingList.push(jobId);\n              this.reportCreated.emit({\n                jobId: jobId,\n                checkingList: this.checkingList,\n                jobs: resp?.jobs || []\n              });\n              this.isPrinting = false;\n            });\n          }, 100);\n        })\n        .catch((err) => {\n          const detail = this.reportService.getErrorStr(err);\n          // this.customReportService.showError(err, {errorStr:this.translator?.customPrint?.printErrMsg, detail: detail});\n          // template.printing = false;\n          this.reportService.showError(err, {errorStr:this.translator?.customPrint?.printErrMsg, detail: detail});\n          this.isPrinting = false;\n        });\n      });\n  }\n\n  /**\n   * check the job status of the preview job\n   * @returns \n   */\n  public watchTestModeJob() {\n    if (!this.testModeJobObj) {\n      return;\n    }\n    const jobId = this.testModeJobObj.jobId;\n    const checking = () => {\n      return this.reportService.checkJobStatus(jobId).then((statusObj) => {\n        this.testModeJobObj = statusObj;\n        if (statusObj.jobStatus === 'esriJobSucceeded' || statusObj.jobStatus === 'esriJobPartialSucceeded') {\n          // let format = 'docx';\n          // if (statusObj.inputInfo && statusObj.inputInfo.parameters) {\n          //   format = statusObj.inputInfo.parameters.outputFormat || 'docx';\n          // }\n          this.reportService.downloadFile(statusObj);  \n          this.isTestModePrinting = false;\n          if (statusObj.jobStatus === 'esriJobPartialSucceeded') {\n            this.reportService.showError({}, {\n              alertType: 'warning',\n              errorStr: this.translator?.customPrint?.printErrMsg,\n              detail: statusObj.detail || statusObj.message || (statusObj.messages && statusObj.messages.length ? statusObj.messages.reduce((acu, msg) => acu + msg) : '')\n            });\n          }\n          return true;\n        } else if (this.testModeJobObj.jobStatus === 'esriJobFailed') {\n          this.isTestModePrinting = false;\n          throw statusObj;\n        } else if (statusObj.error) {\n          throw statusObj.error;\n        } else {\n          setTimeout(() => {\n            checking();\n          }, 1500);\n        }\n      }).catch((statusObj) => {\n        // this.alertService.setOption({\n        //   alertType: 'danger',\n        //   html: this.langSurveyData.customPrint.printErrMsg,\n        //   detail: statusObj.detail || statusObj.message || (statusObj.messages && statusObj.messages.length ? statusObj.messages.reduce((acu, msg) => acu + msg) : '')\n        // }).show();\n        this.reportService.showError({}, {\n          errorStr: this.translator?.customPrint?.printErrMsg,\n          detail: statusObj.detail || statusObj.message || (statusObj.messages && statusObj.messages.length ? statusObj.messages.reduce((acu, msg) => acu + msg) : '')\n        });\n        // template.printing = false;\n        this.isTestModePrinting = false;\n      });\n    };\n    checking();\n  }\n\n  // deprecated\n  // public stripscript(s) {\n  //   const pattern = new RegExp(\"[`~!@#$^&*()=|{}':;',\\\\[\\\\]<>/?\\\"~！@#￥……&*（）;—|{}【】《》‘；：”“'。，、？]\");\n  //   let rs = '';\n  //   for (let i = 0; i < s.length; i++) {\n  //     rs = rs + s.substr(i, 1).replace(pattern, '_');\n  //   }\n  //   return rs;\n  // }\n\n  render() {\n    return (\n      <Host>\n        <p>{this.supportShowCredits}</p>\n      {this.supportShowCredits && this.visibleConf.indexOf('showCredits') >= 0 ? \n        <div class=\"credits-info\">\n          <div class=\"show-credits has-spinner\">\n            {this.creditsInfo&&this.creditStatus==='estimating' ? \n            <Fragment>\n              <span class={`${this.featureCount<1||(!this.printTemplates.length) ? 'disabled' : ''}`} \n                onClick={() => this.estimateCredits()}>{`${this.translator?.common.calculating}`}\n              </span>\n              <calcite-loader label={this.translator?.common.calculating} inline=\"true\"></calcite-loader>\n            </Fragment>\n            : \n            <calcite-link disabled={`${this.featureCount<1||(!this.printTemplates.length) ? true : false}`} \n              onClick={() => this.estimateCredits()}>{`${this.translator?.customPrint?.creditsEstimate}`}\n            </calcite-link>}\n\n            {/* <span class={`${this.creditsInfo&&this.creditStatus==='estimating' ? '' : 'clickable-text'} ${this.featureCount<1||(!this.printTemplates.length) ? 'disabled' : ''}`} \n              onClick={() => this.estimateCredits()}>{this.creditsInfo&&this.creditStatus==='estimating'?`${this.translator?.common.calculating}`:`${this.translator?.customPrint?.creditsEstimate}`}\n            </span>\n            {this.creditsInfo&&this.creditStatus==='estimating' ? <calcite-loader label={this.translator?.common.calculating} inline=\"true\"></calcite-loader> : ''} */}\n          </div>\n          {this.creditsInfo&&this.creditStatus==='finished'&&this.featureCount>0&&this.printTemplates.length ?\n          <div class=\"credits-result-info\">\n            <span>{this.translator?.customPrint?.creditsRecordsCount.replace('${$recordsCount}', `${this.featureCount}`).replace('${$requiredCredits}', `${this.creditsInfo.cost}`)}</span>\n          </div> : ''}\n\n          {this.creditsInfo&&this.creditStatus==='changed'&&this.featureCount>0&&this.printTemplates.length ?         \n          <div class=\"credits-result-info\"> \n            <span>{this.translator?.customPrint?.credtisResultInvalid}</span>\n          </div> : ''}\n      </div> : ''}\n      \n\n      {/* Prevew sample template, deleted */}\n\n      <div class={`execute-btn ${!this.isPortal&&this.featureCount<=this.batchPrintLimitCount&&this.canShowEstimateCredits ? '' : 'portal-btn'}`}>\n        <a class=\"no-hover\">\n        <calcite-button id=\"submit-btn\" disabled={this.isPrinting || !this.buttonClickable() } onClick={() => this.executeCustomPrint()}>\n          {this.translator?.customPrint?.generate}\n          {this.isPrinting ? \n            <calcite-loader label={this.translator?.common?.loading} inline=\"true\"></calcite-loader>\n            : null\n          }\n          </calcite-button>\n          {(this.printTemplates || []).length > 0 || this.templateItemId || this.visibleConf?.indexOf('selectTemplate') >= 0 ?\n            null : \n            <calcite-notice open kind=\"danger\" scale=\"s\" width=\"auto\"> \n                <div slot=\"message\">{this.translator?.customPrint?.chooseTemplateNoOneYet1}</div>\n            </calcite-notice>\n          }\n        {/* <calcite-button id=\"submit-btn\" disabled={!this.buttonClickable || this.isPrinting} onClick={() => this.executeCustomPrint()}>{this.translator?.customPrint?.generate}</calcite-button> */}\n\n          {/* <survey123-ui-button id=\"generate-report-btn\" [nativeType]=\"'width: 100%;'\" [id]=\"'submit-btn'\"\n            [disabled]=\"!buttonClickable() || isPrinting\" [running]=\"isPrinting\" [hasSpinner]='true'\n            (onClick)=\"executeCustomPrint();\">{{'surveyData.customPrint.generate' | translate}}\n          </survey123-ui-button> */}\n\n          {/* <calcite-tooltip label=\"generate report\" reference-element=\"submit-btn\">\n            <span>{(!this.canPrintFeatureReport)?`${this.translator?.common.insufficientPreviligeTip}`:''}</span>\n          </calcite-tooltip> */}\n        </a>\n      </div>\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n"]}