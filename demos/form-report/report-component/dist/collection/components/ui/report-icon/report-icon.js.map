{"version":3,"file":"report-icon.js","sourceRoot":"","sources":["../../../../src/components/ui/report-icon/report-icon.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC9E,OAAO,EAAE,WAAW,EAAE,MAAM,gCAAgC,CAAC;AAO7D,MAAM,OAAO,UAAU;;;;;;IAOrB,iBAAiB;QACf,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,SAAS;QACP,MAAM,KAAK,GAAgB,WAAW,CAAC,UAAU,EAAE,CAAC;QACpD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;aAC3B,IAAI,CAAC,GAAG,EAAE;YACT,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBACjC,OAAO,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtC,CAAC;YACD,OAAO,KAAK,CAAC,YAAY,CAAC,kBAAkB,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC;iBAC1D,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;gBACb,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;oBACb,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;gBAClD,CAAC;gBACD,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACd,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAClC,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1C,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC;YACpB,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;gBACd,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC1D,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7D,CAAC;YACD,OAAO,GAAG,CAAC,SAAS,CAAC;QACvB,CAAC,CAAC,CAAA;IACN,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,0DAAG,SAAS,EAAE,IAAI,CAAC,QAAQ,GACvB;YACJ,8DAAa,CACR,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Component, Host, h, getAssetPath, Prop, State } from '@stencil/core';\nimport { UtilService } from '../../../services/util.service';\n\n@Component({\n  tag: 'report-icon',\n  styleUrl: 'report-icon.scss',\n  shadow: true,\n})\nexport class ReportIcon {\n\n  @Prop() icon: any;\n  @Prop() size: any;\n\n  @State() pathData: any;\n\n  componentWillLoad() {\n    this.fetchIcon().then((res) => {\n      this.pathData = res;\n    })\n  }\n\n  fetchIcon() {\n    const utils: UtilService = UtilService.getService();\n    return Promise.resolve(true)\n    .then(() => {\n      if (utils.getSvgCache(this.icon)) {\n        return utils.getSvgCache(this.icon);\n      } \n      return fetch(getAssetPath(`./assets/icons/${this.icon}.svg`))\n        .then((resp) => {\n          if (!resp.ok) {\n            throw new Error(\"could not get the icon file:\");\n          }\n          return resp.text();\n        })\n      }).then((str) => {\n        utils.setSvgCache(this.icon, str);\n        const div = document.createElement('div');\n        div.innerHTML = str;\n        if (this.size) {\n          div.querySelector('svg').setAttribute('width', this.size);\n          div.querySelector('svg').setAttribute('height', this.size);\n        }\n        return div.innerHTML;\n      })\n  }\n\n  render() {\n    return (\n      <Host>\n        <i innerHTML={this.pathData} >\n        </i>\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n"]}